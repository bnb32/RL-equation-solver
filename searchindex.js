Search.setIndex({"docnames": ["_autosummary/rl_equation_solver", "_autosummary/rl_equation_solver.agent", "_autosummary/rl_equation_solver.agent.base", "_autosummary/rl_equation_solver.agent.base.BaseAgent", "_autosummary/rl_equation_solver.agent.base.ReplayMemory", "_autosummary/rl_equation_solver.agent.dqn", "_autosummary/rl_equation_solver.agent.dqn.Agent", "_autosummary/rl_equation_solver.agent.gcn", "_autosummary/rl_equation_solver.agent.gcn.Agent", "_autosummary/rl_equation_solver.agent.networks", "_autosummary/rl_equation_solver.agent.networks.DQN", "_autosummary/rl_equation_solver.agent.networks.GCN", "_autosummary/rl_equation_solver.config", "_autosummary/rl_equation_solver.config.Config", "_autosummary/rl_equation_solver.environment", "_autosummary/rl_equation_solver.environment.algebraic", "_autosummary/rl_equation_solver.environment.algebraic.Env", "_autosummary/rl_equation_solver.utilities", "_autosummary/rl_equation_solver.utilities.loss", "_autosummary/rl_equation_solver.utilities.loss.LossMixin", "_autosummary/rl_equation_solver.utilities.operators", "_autosummary/rl_equation_solver.utilities.operators.div", "_autosummary/rl_equation_solver.utilities.operators.root", "_autosummary/rl_equation_solver.utilities.operators.sqrt", "_autosummary/rl_equation_solver.utilities.operators.square", "_autosummary/rl_equation_solver.utilities.reward", "_autosummary/rl_equation_solver.utilities.reward.RewardMixin", "_autosummary/rl_equation_solver.utilities.utilities", "_autosummary/rl_equation_solver.utilities.utilities.Batch", "_autosummary/rl_equation_solver.utilities.utilities.Experience", "_autosummary/rl_equation_solver.utilities.utilities.GraphEmbedding", "_autosummary/rl_equation_solver.utilities.utilities.Id", "_autosummary/rl_equation_solver.utilities.utilities.Node", "_autosummary/rl_equation_solver.utilities.utilities.VectorEmbedding", "_autosummary/rl_equation_solver.utilities.utilities.build_adjacency_matrix", "_autosummary/rl_equation_solver.utilities.utilities.build_adjacency_matrix_custom", "_autosummary/rl_equation_solver.utilities.utilities.encode_onehot", "_autosummary/rl_equation_solver.utilities.utilities.get_json_graph", "_autosummary/rl_equation_solver.utilities.utilities.get_node_features", "_autosummary/rl_equation_solver.utilities.utilities.get_node_labels", "_autosummary/rl_equation_solver.utilities.utilities.graph_walk", "_autosummary/rl_equation_solver.utilities.utilities.normalize", "_autosummary/rl_equation_solver.utilities.utilities.pad_array", "_autosummary/rl_equation_solver.utilities.utilities.plot_state_as_graph", "_autosummary/rl_equation_solver.utilities.utilities.sparse_mx_to_torch_sparse_tensor", "_autosummary/rl_equation_solver.utilities.utilities.to_graph", "_autosummary/rl_equation_solver.utilities.utilities.to_vec", "_autosummary/rl_equation_solver.version", "api", "examples", "index", "misc/installation", "misc/installation_usage"], "filenames": ["_autosummary/rl_equation_solver.rst", "_autosummary/rl_equation_solver.agent.rst", "_autosummary/rl_equation_solver.agent.base.rst", "_autosummary/rl_equation_solver.agent.base.BaseAgent.rst", "_autosummary/rl_equation_solver.agent.base.ReplayMemory.rst", "_autosummary/rl_equation_solver.agent.dqn.rst", "_autosummary/rl_equation_solver.agent.dqn.Agent.rst", "_autosummary/rl_equation_solver.agent.gcn.rst", "_autosummary/rl_equation_solver.agent.gcn.Agent.rst", "_autosummary/rl_equation_solver.agent.networks.rst", "_autosummary/rl_equation_solver.agent.networks.DQN.rst", "_autosummary/rl_equation_solver.agent.networks.GCN.rst", "_autosummary/rl_equation_solver.config.rst", "_autosummary/rl_equation_solver.config.Config.rst", "_autosummary/rl_equation_solver.environment.rst", "_autosummary/rl_equation_solver.environment.algebraic.rst", "_autosummary/rl_equation_solver.environment.algebraic.Env.rst", "_autosummary/rl_equation_solver.utilities.rst", "_autosummary/rl_equation_solver.utilities.loss.rst", "_autosummary/rl_equation_solver.utilities.loss.LossMixin.rst", "_autosummary/rl_equation_solver.utilities.operators.rst", "_autosummary/rl_equation_solver.utilities.operators.div.rst", "_autosummary/rl_equation_solver.utilities.operators.root.rst", "_autosummary/rl_equation_solver.utilities.operators.sqrt.rst", "_autosummary/rl_equation_solver.utilities.operators.square.rst", "_autosummary/rl_equation_solver.utilities.reward.rst", "_autosummary/rl_equation_solver.utilities.reward.RewardMixin.rst", "_autosummary/rl_equation_solver.utilities.utilities.rst", "_autosummary/rl_equation_solver.utilities.utilities.Batch.rst", "_autosummary/rl_equation_solver.utilities.utilities.Experience.rst", "_autosummary/rl_equation_solver.utilities.utilities.GraphEmbedding.rst", "_autosummary/rl_equation_solver.utilities.utilities.Id.rst", "_autosummary/rl_equation_solver.utilities.utilities.Node.rst", "_autosummary/rl_equation_solver.utilities.utilities.VectorEmbedding.rst", "_autosummary/rl_equation_solver.utilities.utilities.build_adjacency_matrix.rst", "_autosummary/rl_equation_solver.utilities.utilities.build_adjacency_matrix_custom.rst", "_autosummary/rl_equation_solver.utilities.utilities.encode_onehot.rst", "_autosummary/rl_equation_solver.utilities.utilities.get_json_graph.rst", "_autosummary/rl_equation_solver.utilities.utilities.get_node_features.rst", "_autosummary/rl_equation_solver.utilities.utilities.get_node_labels.rst", "_autosummary/rl_equation_solver.utilities.utilities.graph_walk.rst", "_autosummary/rl_equation_solver.utilities.utilities.normalize.rst", "_autosummary/rl_equation_solver.utilities.utilities.pad_array.rst", "_autosummary/rl_equation_solver.utilities.utilities.plot_state_as_graph.rst", "_autosummary/rl_equation_solver.utilities.utilities.sparse_mx_to_torch_sparse_tensor.rst", "_autosummary/rl_equation_solver.utilities.utilities.to_graph.rst", "_autosummary/rl_equation_solver.utilities.utilities.to_vec.rst", "_autosummary/rl_equation_solver.version.rst", "api.rst", "examples.rst", "index.rst", "misc/installation.rst", "misc/installation_usage.rst"], "titles": ["rl_equation_solver", "rl_equation_solver.agent", "rl_equation_solver.agent.base", "rl_equation_solver.agent.base.BaseAgent", "rl_equation_solver.agent.base.ReplayMemory", "rl_equation_solver.agent.dqn", "rl_equation_solver.agent.dqn.Agent", "rl_equation_solver.agent.gcn", "rl_equation_solver.agent.gcn.Agent", "rl_equation_solver.agent.networks", "rl_equation_solver.agent.networks.DQN", "rl_equation_solver.agent.networks.GCN", "rl_equation_solver.config", "rl_equation_solver.config.Config", "rl_equation_solver.environment", "rl_equation_solver.environment.algebraic", "rl_equation_solver.environment.algebraic.Env", "rl_equation_solver.utilities", "rl_equation_solver.utilities.loss", "rl_equation_solver.utilities.loss.LossMixin", "rl_equation_solver.utilities.operators", "rl_equation_solver.utilities.operators.div", "rl_equation_solver.utilities.operators.root", "rl_equation_solver.utilities.operators.sqrt", "rl_equation_solver.utilities.operators.square", "rl_equation_solver.utilities.reward", "rl_equation_solver.utilities.reward.RewardMixin", "rl_equation_solver.utilities.utilities", "rl_equation_solver.utilities.utilities.Batch", "rl_equation_solver.utilities.utilities.Experience", "rl_equation_solver.utilities.utilities.GraphEmbedding", "rl_equation_solver.utilities.utilities.Id", "rl_equation_solver.utilities.utilities.Node", "rl_equation_solver.utilities.utilities.VectorEmbedding", "rl_equation_solver.utilities.utilities.build_adjacency_matrix", "rl_equation_solver.utilities.utilities.build_adjacency_matrix_custom", "rl_equation_solver.utilities.utilities.encode_onehot", "rl_equation_solver.utilities.utilities.get_json_graph", "rl_equation_solver.utilities.utilities.get_node_features", "rl_equation_solver.utilities.utilities.get_node_labels", "rl_equation_solver.utilities.utilities.graph_walk", "rl_equation_solver.utilities.utilities.normalize", "rl_equation_solver.utilities.utilities.pad_array", "rl_equation_solver.utilities.utilities.plot_state_as_graph", "rl_equation_solver.utilities.utilities.sparse_mx_to_torch_sparse_tensor", "rl_equation_solver.utilities.utilities.to_graph", "rl_equation_solver.utilities.utilities.to_vec", "rl_equation_solver.version", "&lt;no title&gt;", "&lt;no title&gt;", "Welcome to RL-Equation-Solver!", "Installation", "Installation and Usage"], "terms": {"reinforc": 0, "learn": [0, 3, 6, 8, 19], "base": [0, 5, 6, 7, 8, 10, 11, 13, 16, 19, 26, 28, 29, 30, 31, 32, 33], "equat": [0, 3, 6, 8, 15, 16, 51], "solver": [0, 15, 51], "packag": [0, 47, 51], "modul": [1, 2, 10, 11, 14, 17], "dqn": [2, 3], "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 18, 19, 25, 26, 27, 28, 29, 30, 31, 32, 33], "env": [3, 6, 8, 10, 11, 51], "hidden_s": [3, 6, 8, 10, 11], "256": [3, 6, 8], "devic": [3, 6, 8, 10, 11, 28, 30, 33], "cpu": [3, 6, 8, 10, 11], "sourc": [3, 4, 6, 8, 10, 11, 13, 16, 19, 21, 22, 23, 24, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51], "rewardmixin": 3, "lossmixin": 3, "target": [3, 6, 8, 10, 11, 40], "polici": [3, 5, 6, 7, 8, 9], "network": [3, 6, 8], "paramet": [3, 6, 8, 10, 11, 16, 26, 37, 39, 40, 45, 46], "object": [3, 4, 6, 8, 10, 11, 13, 16, 19, 26, 28, 30, 31, 32, 33, 39], "environ": [3, 6, 8, 10, 11, 51], "instanc": [3, 6, 8, 10, 11, 28, 29], "e": [3, 6, 8, 10, 11, 16, 38, 51], "g": [3, 6, 8, 10, 11, 16, 38], "env_linear_equ": [3, 6, 8], "int": [3, 6, 8, 10, 11, 16, 26, 46], "size": [3, 6, 8, 10, 11, 30, 33], "hidden": [3, 6, 8, 10, 11], "layer": [3, 6, 8, 10, 11], "method": [3, 4, 6, 8, 10, 11, 13, 16, 19, 26, 28, 29, 30, 31, 32, 33], "attribut": [3, 6, 8, 10, 11, 13, 16, 29, 31, 39], "abstract": [3, 26], "init_st": [3, 6, 8], "initi": [3, 6, 8, 10, 11, 16, 28], "state": [3, 6, 8, 10, 11, 16, 26, 28, 29, 37, 40, 45, 46], "from": [3, 6, 8, 10, 11, 16, 34, 35, 38, 39, 51], "thi": [3, 6, 8, 10, 11, 26], "can": [3, 10, 11, 16, 28, 38], "vector": [3, 6, 16, 28, 33, 46], "represent": [3, 6, 8, 10, 11, 16, 26, 37, 43, 45, 46], "graph": [3, 6, 8, 11, 16, 26, 28, 30, 34, 35, 37, 38, 39, 43, 45], "convert_st": [3, 6, 8], "state_str": [3, 6, 8], "convert": [3, 6, 8, 10, 11, 44], "string": [3, 6, 8, 10, 11, 16, 26, 37, 40, 45, 46], "appropri": 3, "batch_stat": [3, 6, 8], "batch": [3, 4, 6, 8], "properti": [3, 6, 8, 16, 19], "get": [3, 6, 8, 16, 26, 31, 38, 39, 46], "train": [3, 4, 6, 8, 10, 11], "choose_optimal_act": [3, 6, 8], "choos": [3, 6, 8, 16], "action": [3, 6, 8, 10, 11, 16, 29], "max": [3, 6, 8, 46], "expect": [3, 6, 8, 10, 11], "reward": [3, 6, 8, 16, 17, 29], "max_a": [3, 6, 8], "q": [3, 6, 8], "": [3, 6, 8, 10, 11], "1": [3, 6, 8, 10, 11, 16, 19, 29, 38, 52], "return": [3, 6, 8, 10, 11, 16, 26, 29, 37, 45, 46], "largest": [3, 6, 8], "column": [3, 6, 8], "valu": [3, 6, 8, 10, 11, 29, 45, 46], "each": [3, 6, 8, 10, 11], "row": [3, 6, 8, 41], "second": [3, 6, 8], "result": [3, 6, 8, 10, 11, 16], "i": [3, 6, 8, 10, 11, 16, 19, 26, 29, 51], "index": [3, 6, 8, 29, 39], "where": [3, 6, 8], "element": [3, 6, 8], "wa": [3, 6, 8], "found": [3, 6, 8, 10, 11], "so": [3, 6, 8, 10, 11, 16], "we": [3, 6, 8, 10, 11, 16, 38], "pick": [3, 6, 8], "larger": [3, 6, 8], "choose_act": [3, 6, 8], "fals": [3, 6, 8, 10, 11], "given": [3, 6, 8, 10, 11, 26, 28, 42, 46], "either": [3, 6, 8, 10, 11, 28], "optim": [3, 6, 8, 10, 11, 19], "random": [3, 4, 6, 8], "depend": [3, 6, 8, 51], "step": [3, 6, 8], "compute_loss": [3, 6, 8], "state_action_valu": [3, 6, 8], "expected_state_action_valu": [3, 6, 8], "comput": [3, 6, 8, 10, 11], "huber": [3, 6, 8, 19], "loss": [3, 6, 8, 16, 17, 26], "update_info": [3, 6, 8], "kei": [3, 6, 8, 10, 11, 40], "updat": [3, 6, 8, 10, 11], "histori": [3, 6, 8], "info": [3, 6, 8], "choose_random_act": [3, 6, 8], "rather": [3, 6, 8], "than": [3, 6, 8], "optimize_model": [3, 6, 8], "function": [3, 6, 8, 10, 11, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27], "perform": [3, 6, 8, 10, 11], "singl": [3, 6, 8, 10, 11, 32], "log_info": [3, 6, 8], "episod": [3, 6, 8], "write": [3, 6, 8], "logger": [3, 6, 8], "num_episod": [3, 6, 8], "model": [3, 6, 8, 10, 11, 12, 13], "number": [3, 6, 8, 10, 11, 29, 31], "The": [3, 6, 8, 10, 11, 16, 51], "soft": [3, 6, 8], "weight": [3, 6, 8, 10, 11], "math": [3, 6, 8], "au": [3, 6, 8], "policy_net_state_dict": [3, 6, 8], "target_net_state_dict": [3, 6, 8], "help": [3, 6, 8, 10, 11], "make": [3, 6, 8, 10, 11, 37, 43, 45, 51], "converg": [3, 6, 8], "policy_network": [3, 6, 8], "append_histori": [3, 6, 8], "entri": [3, 6, 8, 10, 11], "append": [3, 6, 8], "latest": [3, 6, 8], "update_histori": [3, 6, 8], "0": [3, 6, 8, 10, 11, 16, 19, 29, 38], "step_numb": [3, 6, 8], "take": [3, 6, 8, 16], "next": [3, 6, 8], "current": [3, 6, 8, 10, 11, 16], "str": [3, 6, 8, 10, 11, 26, 37, 40, 45, 46], "taken": [3, 6, 8], "far": [3, 6, 8], "whether": [3, 6, 8, 10, 11], "part": [3, 6, 8, 10, 11], "infer": [3, 6, 8], "determin": [3, 6, 8], "tensor": [3, 6, 8, 10, 11, 44], "repres": [3, 6, 8, 16, 32], "pytorch": [3, 6, 8], "next_stat": [3, 6, 8, 29], "after": [3, 6, 8, 10, 11], "graphembed": [3, 6, 8, 28], "done": [3, 6, 8], "bool": [3, 6, 8, 10, 11], "solut": [3, 6, 8, 16], "ha": [3, 6, 8, 10, 11], "been": [3, 6, 8], "condit": [3, 6, 8], "have": [3, 6, 8, 10, 11, 51], "exceed": [3, 6, 8], "dict": [3, 6, 8, 10, 11, 45, 46], "dictionari": [3, 6, 8, 10, 11, 16, 38, 40, 45, 46], "inform": [3, 6, 8, 10, 11], "expression_complex": [3, 6, 8, 26], "express": [3, 6, 8, 26, 37, 40, 43, 45, 46], "complex": [3, 6, 8, 10, 11, 16, 26], "edg": [3, 6, 8, 34, 35], "plu": [3, 6, 8], "node": [3, 6, 8, 16, 30, 31, 38, 39, 40], "expression_tre": [3, 6, 8], "approxim": [3, 6, 8], "find_reward": [3, 6, 8], "state_old": [3, 6, 8, 26], "state_new": [3, 6, 8, 26], "last": [3, 6, 8, 26], "new": [3, 6, 8, 10, 11, 26, 29], "differ": [3, 6, 8, 10, 11, 26], "between": [3, 6, 8, 10, 11, 19, 26], "predict": [3, 6, 8], "is_constant_complex": [3, 6, 8], "check": [3, 6, 8, 10, 11], "constant": [3, 6, 8], "over": [3, 6, 8, 10, 11, 40], "long": [3, 6, 8], "save": [3, 4, 6, 8, 10, 11], "output_fil": [3, 6, 8], "classmethod": [3, 6, 8, 28, 31], "load": [3, 6, 8], "model_fil": [3, 6, 8], "too_long": [3, 6, 8], "dimens": [3, 6, 8], "too": [3, 6, 8], "larg": [3, 6, 8], "diff_loss_reward": [3, 6, 8, 26], "decreas": [3, 6, 8, 26], "exp_loss_reward": [3, 6, 8, 26], "huber_loss": [3, 6, 8, 19], "x": [3, 6, 8, 10, 16, 19], "y": [3, 6, 8, 19], "delta": [3, 6, 8, 19], "also": [3, 6, 8, 10, 11, 19], "known": [3, 6, 8, 19], "smooth": [3, 6, 8, 19], "mean": [3, 6, 8, 19], "absolut": [3, 6, 8, 19], "error": [3, 6, 8, 10, 11, 19], "us": [3, 6, 8, 10, 11, 16, 19, 27, 51], "variou": [3, 6, 8, 19], "machin": [3, 6, 8, 19, 51], "problem": [3, 6, 8, 19], "particularli": [3, 6, 8, 19], "regress": [3, 6, 8, 19], "task": [3, 6, 8, 19], "It": [3, 6, 8, 10, 11, 19], "combin": [3, 6, 8, 19], "both": [3, 6, 8, 10, 11, 19], "squar": [3, 6, 8, 19], "mse": [3, 6, 8, 19], "mae": [3, 6, 8, 19], "provid": [3, 6, 8, 10, 11, 19], "balanc": [3, 6, 8, 19], "two": [3, 6, 8, 10, 11, 19], "l": [3, 6, 8, 10, 11, 19], "f": [3, 6, 8, 19], "begin": [3, 6, 8, 19], "case": [3, 6, 8, 19], "rac": [3, 6, 8, 19], "2": [3, 6, 8, 10, 11, 16, 19, 29], "leq": [3, 6, 8, 19], "gt": [3, 6, 8, 19], "end": [3, 6, 8, 10, 11, 19], "inv_loss_reward": [3, 6, 8, 26], "l2_loss": [3, 6, 8, 19], "l2": [3, 6, 8, 19], "smooth_l1_loss": [3, 6, 8, 19], "l1": [3, 6, 8, 19], "sub_loss_reward": [3, 6, 8, 26], "capac": 4, "store": [4, 10, 11, 39], "experi": 4, "replai": 4, "buffer": [4, 10, 11], "push": 4, "arg": [4, 10, 11], "memori": [4, 10, 11], "sampl": 4, "batch_siz": 4, "select": 4, "baseag": [6, 8], "n_observ": [10, 11, 30, 33], "n_action": [10, 11], "simpl": [10, 11], "mlp": 10, "observ": [10, 11], "discret": [10, 11], "avail": [10, 11], "forward": [10, 11], "pass": [10, 11], "__call__": [10, 11, 28], "kwarg": [10, 11], "call": [10, 11], "self": [10, 11, 29], "add_modul": [10, 11], "name": [10, 11, 39, 40, 45, 46], "none": [10, 11, 39], "add": [10, 11, 16, 37, 38], "child": [10, 11], "access": [10, 11], "an": [10, 11, 16], "ad": [10, 11], "appli": [10, 11], "fn": [10, 11], "callabl": [10, 11], "t": [10, 11, 37], "recurs": [10, 11, 40], "everi": [10, 11], "submodul": [10, 11], "children": [10, 11], "well": [10, 11], "typic": [10, 11], "includ": [10, 11, 39], "see": [10, 11], "nn": [10, 11], "init": [10, 11], "doc": [10, 11], "exampl": [10, 11, 16], "torch": [10, 11, 44], "no_grad": [10, 11], "def": [10, 11], "init_weight": [10, 11], "m": [10, 11], "print": [10, 11, 16], "type": [10, 11], "linear": [10, 11, 15], "fill_": [10, 11], "net": [10, 11], "sequenti": [10, 11], "in_featur": [10, 11], "out_featur": [10, 11], "bia": [10, 11], "true": [10, 11], "contain": [10, 11], "requires_grad": [10, 11], "bfloat16": [10, 11], "cast": [10, 11], "all": [10, 11], "float": [10, 11], "point": [10, 11], "datatyp": [10, 11], "modifi": [10, 11], "place": [10, 11], "iter": [10, 11], "yield": [10, 11], "otherwis": [10, 11], "onli": [10, 11], "ar": [10, 11, 16, 51], "direct": [10, 11, 16], "member": [10, 11], "xdoctest": [10, 11], "skip": [10, 11], "undefin": [10, 11], "var": [10, 11], "buf": [10, 11], "20l": [10, 11], "1l": [10, 11], "5l": [10, 11], "immedi": [10, 11], "move": [10, 11], "cuda": [10, 11], "gpu": [10, 11], "associ": [10, 11], "should": [10, 11], "befor": [10, 11], "construct": [10, 11], "live": [10, 11], "while": [10, 11], "being": [10, 11], "option": [10, 11, 52], "specifi": [10, 11], "copi": [10, 11], "doubl": [10, 11], "eval": [10, 11], "set": [10, 11, 28], "evalu": [10, 11], "mode": [10, 11, 16], "ani": [10, 11], "effect": [10, 11], "certain": [10, 11], "document": [10, 11], "particular": [10, 11], "detail": [10, 11], "behavior": [10, 11], "thei": [10, 11], "affect": [10, 11], "dropout": [10, 11], "batchnorm": [10, 11], "etc": [10, 11], "equival": [10, 11], "local": [10, 11], "disabl": [10, 11], "grad": [10, 11], "comparison": [10, 11], "sever": [10, 11], "similar": [10, 11], "mechan": [10, 11], "mai": [10, 11], "confus": [10, 11], "extra_repr": [10, 11], "extra": [10, 11], "To": [10, 11], "custom": [10, 11, 20], "you": [10, 11, 51], "re": [10, 11], "implement": [10, 11], "your": [10, 11, 51], "own": [10, 11], "line": [10, 11], "multi": [10, 11], "accept": [10, 11], "get_buff": [10, 11], "exist": [10, 11], "throw": [10, 11], "docstr": [10, 11], "get_submodul": [10, 11], "more": [10, 11], "explan": [10, 11], "how": [10, 11], "correctli": [10, 11], "fulli": [10, 11], "qualifi": [10, 11], "look": [10, 11], "referenc": [10, 11], "rais": [10, 11, 29], "attributeerror": [10, 11], "If": [10, 11, 16], "refer": [10, 11], "invalid": [10, 11], "path": [10, 11], "resolv": [10, 11], "someth": [10, 11], "get_extra_st": [10, 11], "state_dict": [10, 11], "correspond": [10, 11], "set_extra_st": [10, 11], "need": [10, 11], "when": [10, 11], "build": [10, 11, 34, 35], "note": [10, 11, 51], "picklabl": [10, 11], "ensur": [10, 11], "work": [10, 11, 51], "serial": [10, 11], "backward": [10, 11], "compat": [10, 11], "guarante": [10, 11], "other": [10, 11], "break": [10, 11], "pickl": [10, 11], "form": [10, 11], "chang": [10, 11], "get_paramet": [10, 11], "For": [10, 11], "let": [10, 11], "sai": [10, 11], "A": [10, 11, 31], "like": [10, 11], "net_b": [10, 11], "net_c": [10, 11], "conv": [10, 11], "conv2d": [10, 11], "16": [10, 11], "33": [10, 11], "kernel_s": [10, 11], "3": [10, 11, 29], "stride": [10, 11], "100": [10, 11], "200": [10, 11], "diagram": [10, 11], "show": [10, 11], "nest": [10, 11], "which": [10, 11], "itself": [10, 11], "would": [10, 11, 16], "runtim": [10, 11], "bound": [10, 11], "degre": [10, 11], "queri": [10, 11], "against": [10, 11], "named_modul": [10, 11], "achiev": [10, 11], "same": [10, 11], "o": [10, 11], "n": [10, 11, 51], "transit": [10, 11], "some": [10, 11], "alwai": [10, 11], "abov": [10, 11], "half": [10, 11], "ipu": [10, 11], "argument": [10, 11, 32], "load_state_dict": [10, 11], "map": [10, 11, 16, 38, 45, 46], "strict": [10, 11], "its": [10, 11, 51], "descend": [10, 11], "must": [10, 11, 39], "exactli": [10, 11], "match": [10, 11], "persist": [10, 11], "strictli": [10, 11], "enforc": [10, 11], "default": [10, 11], "namedtupl": [10, 11], "missing_kei": [10, 11], "unexpected_kei": [10, 11], "field": [10, 11, 29], "list": [10, 11, 16, 40], "miss": [10, 11], "unexpect": [10, 11], "regist": [10, 11], "runtimeerror": [10, 11], "duplic": [10, 11], "onc": [10, 11], "In": [10, 11], "follow": [10, 11, 16], "idx": [10, 11], "enumer": [10, 11], "named_buff": [10, 11], "prefix": [10, 11], "remove_dupl": [10, 11], "tupl": [10, 11, 29], "prepend": [10, 11], "remov": [10, 11], "running_var": [10, 11], "named_children": [10, 11], "conv4": [10, 11], "conv5": [10, 11], "memo": [10, 11], "alreadi": [10, 11], "named_paramet": [10, 11], "param": [10, 11], "register_backward_hook": [10, 11], "hook": [10, 11], "removablehandl": [10, 11], "deprec": [10, 11], "favor": [10, 11], "register_full_backward_hook": [10, 11], "futur": [10, 11], "version": [10, 11], "util": [10, 11], "handl": [10, 11], "register_buff": [10, 11], "consid": [10, 11], "running_mean": [10, 11], "alongsid": [10, 11], "non": [10, 11], "latter": [10, 11], "oper": [10, 11, 16, 17, 32, 38], "run": [10, 11, 51], "ignor": [10, 11], "zero": [10, 11, 42], "num_featur": [10, 11], "register_forward_hook": [10, 11], "with_kwarg": [10, 11], "time": [10, 11], "output": [10, 11], "input": [10, 11], "posit": [10, 11], "keyword": [10, 11], "won": [10, 11], "inplac": [10, 11], "sinc": [10, 11], "signatur": [10, 11], "possibli": [10, 11], "user": [10, 11], "defin": [10, 11, 16, 21, 22, 23, 24], "fire": [10, 11], "global": [10, 11], "register_module_forward_hook": [10, 11], "register_forward_pre_hook": [10, 11], "pre": [10, 11], "invok": [10, 11], "wrap": [10, 11], "unless": [10, 11], "And": [10, 11], "forward_pr": [10, 11], "register_module_forward_pre_hook": [10, 11], "gradient": [10, 11], "respect": [10, 11], "execut": [10, 11], "grad_input": [10, 11], "grad_output": [10, 11], "subsequ": [10, 11], "technic": [10, 11], "reason": [10, 11], "receiv": [10, 11], "view": [10, 11], "similarli": [10, 11], "caller": [10, 11], "allow": [10, 11], "register_module_full_backward_hook": [10, 11], "register_full_backward_pre_hook": [10, 11], "backward_pr": [10, 11], "register_module_full_backward_pre_hook": [10, 11], "register_load_state_dict_post_hook": [10, 11], "post": [10, 11], "incompatible_kei": [10, 11], "consist": [10, 11], "modif": [10, 11], "addit": [10, 11], "thrown": [10, 11], "clear": [10, 11], "out": [10, 11], "avoid": [10, 11], "register_modul": [10, 11], "alia": [10, 11, 29], "register_paramet": [10, 11], "register_state_dict_pre_hook": [10, 11], "These": [10, 11, 16], "keep_var": [10, 11], "process": [10, 11], "made": [10, 11], "requires_grad_": [10, 11], "autograd": [10, 11], "record": [10, 11], "freez": [10, 11], "finetun": [10, 11], "individu": [10, 11], "gan": [10, 11], "within": [10, 11], "share_memori": [10, 11], "share_memory_": [10, 11], "destin": [10, 11], "whole": [10, 11], "averag": [10, 11], "shallow": [10, 11], "order": [10, 11, 16], "howev": [10, 11], "releas": [10, 11], "pleas": [10, 11], "design": [10, 11], "ordereddict": [10, 11], "creat": [10, 11, 29, 40, 51], "compos": [10, 11], "detach": [10, 11], "dtype": [10, 11], "non_block": [10, 11], "memory_format": [10, 11], "channels_last": [10, 11], "Its": [10, 11], "integr": [10, 11], "unchang": [10, 11], "tri": [10, 11], "asynchron": [10, 11], "host": [10, 11], "possibl": [10, 11], "pin": [10, 11], "below": [10, 11, 51], "desir": [10, 11], "whose": [10, 11], "format": [10, 11], "4d": [10, 11], "ignore_w": [10, 11], "determinist": [10, 11], "1913": [10, 11], "3420": [10, 11], "5113": [10, 11], "2325": [10, 11], "float64": [10, 11], "requir": [10, 11], "torch_doctest_cuda1": [10, 11], "gpu1": [10, 11], "1914": [10, 11], "5112": [10, 11], "2324": [10, 11], "float16": [10, 11], "cdoubl": [10, 11], "3741": [10, 11], "j": [10, 11, 16], "2382": [10, 11], "5593": [10, 11], "4443": [10, 11], "complex128": [10, 11], "ones": [10, 11], "6122": [10, 11], "1150": [10, 11], "to_empti": [10, 11], "without": [10, 11], "storag": [10, 11], "dst_type": [10, 11], "xpu": [10, 11], "zero_grad": [10, 11], "set_to_non": [10, 11], "under": [10, 11], "context": [10, 11], "instead": [10, 11], "convolut": 11, "rate": 11, "configur": [12, 13], "solv": 16, "rl": [16, 51], "b": [16, 21, 22, 23, 24], "agent": 16, "start": [16, 29], "comb": 16, "term": [16, 38], "subtract": 16, "mulitpl": 16, "divid": [16, 21], "pow": 16, "new_stat": 16, "div": 16, "sympi": [16, 37, 43, 45], "onto": 16, "acycl": 16, "dag": 16, "what": 16, "feed": 16, "reduc": 16, "length": [16, 42, 46], "intuit": 16, "num_nod": 16, "num_leav": 16, "find": 16, "termin": 16, "alegra": 16, "a1": 16, "a0": 16, "feature_dict": [16, 38, 45, 46], "featur": [16, 30, 33, 38, 45, 46], "fundament": 16, "symbol": 16, "reset": [16, 31], "state_vec": 16, "np": [16, 28, 46], "ndarrai": [16, 28, 46], "state_graph": 16, "node_label": 16, "label": [16, 32, 34, 35, 36, 39], "render": 16, "human": 16, "misc": 17, "fuinction": 17, "collect": [18, 19, 25, 26, 27], "mixin": 19, "equal": 26, "number_of_nod": 26, "number_of_edg": 26, "embed": [28, 30, 33], "send": 28, "__add__": 29, "__mul__": 29, "count": 29, "occurr": 29, "stop": 29, "9223372036854775807": 29, "first": 29, "valueerror": 29, "present": 29, "n_featur": 30, "adjac": [30, 34, 35], "matrix": [30, 34, 35, 41, 44], "matric": 30, "fix": [30, 33], "helper": 31, "autoincr": 31, "counter": 31, "expr_id": 32, "atom": 32, "onehot": 36, "encod": 36, "expr": [37, 40, 43, 45, 46], "plot": [37, 43, 45], "intern": [37, 43, 45], "don": 37, "meta": 37, "data": 37, "yet": 37, "networkx": [37, 39, 45], "integet": 38, "sub": 38, "parent": 40, "node_list": 40, "link_list": 40, "walk": 40, "tree": 40, "link": 40, "id": 40, "mx": 41, "spars": [41, 44], "arr": 42, "pad": 42, "arrai": [42, 46], "accord": 42, "sparse_mx": 44, "scipi": 44, "state_dim": 46, "4096": 46, "instruct": 51, "assum": 51, "python": 51, "conda": 51, "manag": 51, "home": 51, "dir": 51, "git": 51, "github": 51, "com": 51, "bnb32": 51, "rl_solver": 51, "command": 51, "activ": 51, "cd": 51, "prior": 51, "pip": 51, "sure": 51, "branch": 51, "correct": 51, "main": 51, "dev": 51, "code": 51, "clone": 52, "repo": 52, "recommend": 52, "develop": 52}, "objects": {"": [[0, 0, 0, "-", "rl_equation_solver"]], "rl_equation_solver": [[1, 0, 0, "-", "agent"], [12, 0, 0, "-", "config"], [14, 0, 0, "-", "environment"], [17, 0, 0, "-", "utilities"], [47, 0, 0, "-", "version"]], "rl_equation_solver.agent": [[2, 0, 0, "-", "base"], [5, 0, 0, "-", "dqn"], [7, 0, 0, "-", "gcn"], [9, 0, 0, "-", "networks"]], "rl_equation_solver.agent.base": [[3, 1, 1, "", "BaseAgent"], [4, 1, 1, "", "ReplayMemory"]], "rl_equation_solver.agent.base.BaseAgent": [[3, 2, 1, "", "append_history"], [3, 2, 1, "", "batch_states"], [3, 2, 1, "", "choose_action"], [3, 2, 1, "", "choose_optimal_action"], [3, 2, 1, "", "choose_random_action"], [3, 2, 1, "", "compute_loss"], [3, 2, 1, "", "convert_state"], [3, 3, 1, "", "device"], [3, 2, 1, "", "diff_loss_reward"], [3, 2, 1, "", "exp_loss_reward"], [3, 2, 1, "", "expression_complexity"], [3, 2, 1, "", "find_reward"], [3, 3, 1, "", "history"], [3, 2, 1, "", "huber_loss"], [3, 2, 1, "", "init_state"], [3, 2, 1, "", "inv_loss_reward"], [3, 2, 1, "", "is_constant_complexity"], [3, 2, 1, "", "l2_loss"], [3, 2, 1, "", "load"], [3, 2, 1, "", "log_info"], [3, 2, 1, "", "optimize_model"], [3, 2, 1, "", "predict"], [3, 2, 1, "", "save"], [3, 2, 1, "", "smooth_l1_loss"], [3, 3, 1, "", "state_string"], [3, 2, 1, "", "step"], [3, 2, 1, "", "sub_loss_reward"], [3, 2, 1, "", "too_long"], [3, 2, 1, "", "train"], [3, 2, 1, "", "update_history"], [3, 2, 1, "", "update_info"]], "rl_equation_solver.agent.base.ReplayMemory": [[4, 2, 1, "", "push"], [4, 2, 1, "", "sample"]], "rl_equation_solver.agent.dqn": [[6, 1, 1, "", "Agent"]], "rl_equation_solver.agent.dqn.Agent": [[6, 2, 1, "", "append_history"], [6, 2, 1, "", "batch_states"], [6, 2, 1, "", "choose_action"], [6, 2, 1, "", "choose_optimal_action"], [6, 2, 1, "", "choose_random_action"], [6, 2, 1, "", "compute_loss"], [6, 2, 1, "", "convert_state"], [6, 3, 1, "", "device"], [6, 2, 1, "", "diff_loss_reward"], [6, 2, 1, "", "exp_loss_reward"], [6, 2, 1, "", "expression_complexity"], [6, 2, 1, "", "find_reward"], [6, 3, 1, "", "history"], [6, 2, 1, "", "huber_loss"], [6, 2, 1, "", "init_state"], [6, 2, 1, "", "inv_loss_reward"], [6, 2, 1, "", "is_constant_complexity"], [6, 2, 1, "", "l2_loss"], [6, 2, 1, "", "load"], [6, 2, 1, "", "log_info"], [6, 2, 1, "", "optimize_model"], [6, 2, 1, "", "predict"], [6, 2, 1, "", "save"], [6, 2, 1, "", "smooth_l1_loss"], [6, 3, 1, "", "state_string"], [6, 2, 1, "", "step"], [6, 2, 1, "", "sub_loss_reward"], [6, 2, 1, "", "too_long"], [6, 2, 1, "", "train"], [6, 2, 1, "", "update_history"], [6, 2, 1, "", "update_info"]], "rl_equation_solver.agent.gcn": [[8, 1, 1, "", "Agent"]], "rl_equation_solver.agent.gcn.Agent": [[8, 2, 1, "", "append_history"], [8, 2, 1, "", "batch_states"], [8, 2, 1, "", "choose_action"], [8, 2, 1, "", "choose_optimal_action"], [8, 2, 1, "", "choose_random_action"], [8, 2, 1, "", "compute_loss"], [8, 2, 1, "", "convert_state"], [8, 3, 1, "", "device"], [8, 2, 1, "", "diff_loss_reward"], [8, 2, 1, "", "exp_loss_reward"], [8, 2, 1, "", "expression_complexity"], [8, 2, 1, "", "find_reward"], [8, 3, 1, "", "history"], [8, 2, 1, "", "huber_loss"], [8, 2, 1, "", "init_state"], [8, 2, 1, "", "inv_loss_reward"], [8, 2, 1, "", "is_constant_complexity"], [8, 2, 1, "", "l2_loss"], [8, 2, 1, "", "load"], [8, 2, 1, "", "log_info"], [8, 2, 1, "", "optimize_model"], [8, 2, 1, "", "predict"], [8, 2, 1, "", "save"], [8, 2, 1, "", "smooth_l1_loss"], [8, 3, 1, "", "state_string"], [8, 2, 1, "", "step"], [8, 2, 1, "", "sub_loss_reward"], [8, 2, 1, "", "too_long"], [8, 2, 1, "", "train"], [8, 2, 1, "", "update_history"], [8, 2, 1, "", "update_info"]], "rl_equation_solver.agent.networks": [[10, 1, 1, "", "DQN"], [11, 1, 1, "", "GCN"]], "rl_equation_solver.agent.networks.DQN": [[10, 2, 1, "", "__call__"], [10, 2, 1, "", "add_module"], [10, 2, 1, "", "apply"], [10, 2, 1, "", "bfloat16"], [10, 2, 1, "", "buffers"], [10, 2, 1, "", "children"], [10, 2, 1, "", "cpu"], [10, 2, 1, "", "cuda"], [10, 2, 1, "", "double"], [10, 2, 1, "", "eval"], [10, 2, 1, "", "extra_repr"], [10, 2, 1, "", "float"], [10, 2, 1, "", "forward"], [10, 2, 1, "", "get_buffer"], [10, 2, 1, "", "get_extra_state"], [10, 2, 1, "", "get_parameter"], [10, 2, 1, "", "get_submodule"], [10, 2, 1, "", "half"], [10, 2, 1, "", "ipu"], [10, 2, 1, "", "load_state_dict"], [10, 2, 1, "", "modules"], [10, 2, 1, "", "named_buffers"], [10, 2, 1, "", "named_children"], [10, 2, 1, "", "named_modules"], [10, 2, 1, "", "named_parameters"], [10, 2, 1, "", "parameters"], [10, 2, 1, "", "register_backward_hook"], [10, 2, 1, "", "register_buffer"], [10, 2, 1, "", "register_forward_hook"], [10, 2, 1, "", "register_forward_pre_hook"], [10, 2, 1, "", "register_full_backward_hook"], [10, 2, 1, "", "register_full_backward_pre_hook"], [10, 2, 1, "", "register_load_state_dict_post_hook"], [10, 2, 1, "", "register_module"], [10, 2, 1, "", "register_parameter"], [10, 2, 1, "", "register_state_dict_pre_hook"], [10, 2, 1, "", "requires_grad_"], [10, 2, 1, "", "set_extra_state"], [10, 2, 1, "", "share_memory"], [10, 2, 1, "", "state_dict"], [10, 2, 1, "", "to"], [10, 2, 1, "", "to_empty"], [10, 2, 1, "", "train"], [10, 2, 1, "", "type"], [10, 2, 1, "", "xpu"], [10, 2, 1, "", "zero_grad"]], "rl_equation_solver.agent.networks.GCN": [[11, 2, 1, "", "__call__"], [11, 2, 1, "", "add_module"], [11, 2, 1, "", "apply"], [11, 2, 1, "", "bfloat16"], [11, 2, 1, "", "buffers"], [11, 2, 1, "", "children"], [11, 2, 1, "", "cpu"], [11, 2, 1, "", "cuda"], [11, 2, 1, "", "double"], [11, 2, 1, "", "eval"], [11, 2, 1, "", "extra_repr"], [11, 2, 1, "", "float"], [11, 2, 1, "", "forward"], [11, 2, 1, "", "get_buffer"], [11, 2, 1, "", "get_extra_state"], [11, 2, 1, "", "get_parameter"], [11, 2, 1, "", "get_submodule"], [11, 2, 1, "", "half"], [11, 2, 1, "", "ipu"], [11, 2, 1, "", "load_state_dict"], [11, 2, 1, "", "modules"], [11, 2, 1, "", "named_buffers"], [11, 2, 1, "", "named_children"], [11, 2, 1, "", "named_modules"], [11, 2, 1, "", "named_parameters"], [11, 2, 1, "", "parameters"], [11, 2, 1, "", "register_backward_hook"], [11, 2, 1, "", "register_buffer"], [11, 2, 1, "", "register_forward_hook"], [11, 2, 1, "", "register_forward_pre_hook"], [11, 2, 1, "", "register_full_backward_hook"], [11, 2, 1, "", "register_full_backward_pre_hook"], [11, 2, 1, "", "register_load_state_dict_post_hook"], [11, 2, 1, "", "register_module"], [11, 2, 1, "", "register_parameter"], [11, 2, 1, "", "register_state_dict_pre_hook"], [11, 2, 1, "", "requires_grad_"], [11, 2, 1, "", "set_extra_state"], [11, 2, 1, "", "share_memory"], [11, 2, 1, "", "state_dict"], [11, 2, 1, "", "to"], [11, 2, 1, "", "to_empty"], [11, 2, 1, "", "train"], [11, 2, 1, "", "type"], [11, 2, 1, "", "xpu"], [11, 2, 1, "", "zero_grad"]], "rl_equation_solver.config": [[13, 1, 1, "", "Config"]], "rl_equation_solver.environment": [[15, 0, 0, "-", "algebraic"]], "rl_equation_solver.environment.algebraic": [[16, 1, 1, "", "Env"]], "rl_equation_solver.environment.algebraic.Env": [[16, 3, 1, "", "actions"], [16, 3, 1, "", "equation"], [16, 3, 1, "", "feature_dict"], [16, 3, 1, "", "node_labels"], [16, 2, 1, "", "render"], [16, 2, 1, "", "reset"], [16, 3, 1, "", "state_graph"], [16, 3, 1, "", "state_vec"], [16, 3, 1, "", "terms"]], "rl_equation_solver.utilities": [[18, 0, 0, "-", "loss"], [20, 0, 0, "-", "operators"], [25, 0, 0, "-", "reward"], [27, 0, 0, "-", "utilities"]], "rl_equation_solver.utilities.loss": [[19, 1, 1, "", "LossMixin"]], "rl_equation_solver.utilities.loss.LossMixin": [[19, 2, 1, "", "huber_loss"], [19, 2, 1, "", "l2_loss"], [19, 2, 1, "", "smooth_l1_loss"]], "rl_equation_solver.utilities.operators": [[21, 4, 1, "", "div"], [22, 4, 1, "", "root"], [23, 4, 1, "", "sqrt"], [24, 4, 1, "", "square"]], "rl_equation_solver.utilities.reward": [[26, 1, 1, "", "RewardMixin"]], "rl_equation_solver.utilities.reward.RewardMixin": [[26, 2, 1, "", "diff_loss_reward"], [26, 2, 1, "", "exp_loss_reward"], [26, 2, 1, "", "expression_complexity"], [26, 2, 1, "", "inv_loss_reward"], [26, 2, 1, "", "sub_loss_reward"]], "rl_equation_solver.utilities.utilities": [[28, 1, 1, "", "Batch"], [29, 1, 1, "", "Experience"], [30, 1, 1, "", "GraphEmbedding"], [31, 1, 1, "", "Id"], [32, 1, 1, "", "Node"], [33, 1, 1, "", "VectorEmbedding"], [34, 4, 1, "", "build_adjacency_matrix"], [35, 4, 1, "", "build_adjacency_matrix_custom"], [36, 4, 1, "", "encode_onehot"], [37, 4, 1, "", "get_json_graph"], [38, 4, 1, "", "get_node_features"], [39, 4, 1, "", "get_node_labels"], [40, 4, 1, "", "graph_walk"], [41, 4, 1, "", "normalize"], [42, 4, 1, "", "pad_array"], [43, 4, 1, "", "plot_state_as_graph"], [44, 4, 1, "", "sparse_mx_to_torch_sparse_tensor"], [45, 4, 1, "", "to_graph"], [46, 4, 1, "", "to_vec"]], "rl_equation_solver.utilities.utilities.Batch": [[28, 2, 1, "", "__call__"]], "rl_equation_solver.utilities.utilities.Experience": [[29, 2, 1, "", "__add__"], [29, 2, 1, "", "__mul__"], [29, 5, 1, "", "action"], [29, 2, 1, "", "count"], [29, 2, 1, "", "index"], [29, 5, 1, "", "next_state"], [29, 5, 1, "", "reward"], [29, 5, 1, "", "state"]], "rl_equation_solver.utilities.utilities.Id": [[31, 2, 1, "", "get"], [31, 2, 1, "", "reset"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "attribute", "Python attribute"]}, "titleterms": {"rl_equation_solv": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47], "agent": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], "base": [2, 3, 4], "baseag": 3, "replaymemori": 4, "dqn": [5, 6, 10], "gcn": [7, 8, 11], "network": [9, 10, 11], "config": [12, 13], "environ": [14, 15, 16], "algebra": [15, 16], "env": 16, "util": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46], "loss": [18, 19], "lossmixin": 19, "oper": [20, 21, 22, 23, 24], "div": 21, "root": 22, "sqrt": 23, "squar": 24, "reward": [25, 26], "rewardmixin": 26, "batch": 28, "experi": 29, "graphembed": 30, "id": 31, "node": 32, "vectorembed": 33, "build_adjacency_matrix": 34, "build_adjacency_matrix_custom": 35, "encode_onehot": 36, "get_json_graph": 37, "get_node_featur": 38, "get_node_label": 39, "graph_walk": 40, "normal": 41, "pad_arrai": 42, "plot_state_as_graph": 43, "sparse_mx_to_torch_sparse_tensor": 44, "to_graph": 45, "to_vec": 46, "version": 47, "welcom": 50, "rl": 50, "equat": 50, "solver": 50, "instal": [51, 52], "option": 51, "1": 51, "clone": 51, "repo": 51, "recommend": 51, "develop": 51, "usag": 52}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"rl_equation_solver": [[0, "module-rl_equation_solver"]], "rl_equation_solver.agent": [[1, "module-rl_equation_solver.agent"]], "rl_equation_solver.agent.base": [[2, "module-rl_equation_solver.agent.base"]], "rl_equation_solver.agent.base.BaseAgent": [[3, "rl-equation-solver-agent-base-baseagent"]], "rl_equation_solver.agent.base.ReplayMemory": [[4, "rl-equation-solver-agent-base-replaymemory"]], "rl_equation_solver.agent.dqn": [[5, "module-rl_equation_solver.agent.dqn"]], "rl_equation_solver.agent.dqn.Agent": [[6, "rl-equation-solver-agent-dqn-agent"]], "rl_equation_solver.agent.gcn": [[7, "module-rl_equation_solver.agent.gcn"]], "rl_equation_solver.agent.gcn.Agent": [[8, "rl-equation-solver-agent-gcn-agent"]], "rl_equation_solver.agent.networks": [[9, "module-rl_equation_solver.agent.networks"]], "rl_equation_solver.agent.networks.DQN": [[10, "rl-equation-solver-agent-networks-dqn"]], "rl_equation_solver.agent.networks.GCN": [[11, "rl-equation-solver-agent-networks-gcn"]], "rl_equation_solver.config": [[12, "module-rl_equation_solver.config"]], "rl_equation_solver.config.Config": [[13, "rl-equation-solver-config-config"]], "rl_equation_solver.environment": [[14, "module-rl_equation_solver.environment"]], "rl_equation_solver.environment.algebraic": [[15, "module-rl_equation_solver.environment.algebraic"]], "rl_equation_solver.environment.algebraic.Env": [[16, "rl-equation-solver-environment-algebraic-env"]], "rl_equation_solver.utilities": [[17, "module-rl_equation_solver.utilities"]], "rl_equation_solver.utilities.loss": [[18, "module-rl_equation_solver.utilities.loss"]], "rl_equation_solver.utilities.loss.LossMixin": [[19, "rl-equation-solver-utilities-loss-lossmixin"]], "rl_equation_solver.utilities.operators": [[20, "module-rl_equation_solver.utilities.operators"]], "rl_equation_solver.utilities.operators.div": [[21, "rl-equation-solver-utilities-operators-div"]], "rl_equation_solver.utilities.operators.root": [[22, "rl-equation-solver-utilities-operators-root"]], "rl_equation_solver.utilities.operators.sqrt": [[23, "rl-equation-solver-utilities-operators-sqrt"]], "rl_equation_solver.utilities.operators.square": [[24, "rl-equation-solver-utilities-operators-square"]], "rl_equation_solver.utilities.reward": [[25, "module-rl_equation_solver.utilities.reward"]], "rl_equation_solver.utilities.reward.RewardMixin": [[26, "rl-equation-solver-utilities-reward-rewardmixin"]], "rl_equation_solver.utilities.utilities": [[27, "module-rl_equation_solver.utilities.utilities"]], "rl_equation_solver.utilities.utilities.Batch": [[28, "rl-equation-solver-utilities-utilities-batch"]], "rl_equation_solver.utilities.utilities.Experience": [[29, "rl-equation-solver-utilities-utilities-experience"]], "rl_equation_solver.utilities.utilities.GraphEmbedding": [[30, "rl-equation-solver-utilities-utilities-graphembedding"]], "rl_equation_solver.utilities.utilities.Id": [[31, "rl-equation-solver-utilities-utilities-id"]], "rl_equation_solver.utilities.utilities.Node": [[32, "rl-equation-solver-utilities-utilities-node"]], "rl_equation_solver.utilities.utilities.VectorEmbedding": [[33, "rl-equation-solver-utilities-utilities-vectorembedding"]], "rl_equation_solver.utilities.utilities.build_adjacency_matrix": [[34, "rl-equation-solver-utilities-utilities-build-adjacency-matrix"]], "rl_equation_solver.utilities.utilities.build_adjacency_matrix_custom": [[35, "rl-equation-solver-utilities-utilities-build-adjacency-matrix-custom"]], "rl_equation_solver.utilities.utilities.encode_onehot": [[36, "rl-equation-solver-utilities-utilities-encode-onehot"]], "rl_equation_solver.utilities.utilities.get_json_graph": [[37, "rl-equation-solver-utilities-utilities-get-json-graph"]], "rl_equation_solver.utilities.utilities.get_node_features": [[38, "rl-equation-solver-utilities-utilities-get-node-features"]], "rl_equation_solver.utilities.utilities.get_node_labels": [[39, "rl-equation-solver-utilities-utilities-get-node-labels"]], "rl_equation_solver.utilities.utilities.graph_walk": [[40, "rl-equation-solver-utilities-utilities-graph-walk"]], "rl_equation_solver.utilities.utilities.normalize": [[41, "rl-equation-solver-utilities-utilities-normalize"]], "rl_equation_solver.utilities.utilities.pad_array": [[42, "rl-equation-solver-utilities-utilities-pad-array"]], "rl_equation_solver.utilities.utilities.plot_state_as_graph": [[43, "rl-equation-solver-utilities-utilities-plot-state-as-graph"]], "rl_equation_solver.utilities.utilities.sparse_mx_to_torch_sparse_tensor": [[44, "rl-equation-solver-utilities-utilities-sparse-mx-to-torch-sparse-tensor"]], "rl_equation_solver.utilities.utilities.to_graph": [[45, "rl-equation-solver-utilities-utilities-to-graph"]], "rl_equation_solver.utilities.utilities.to_vec": [[46, "rl-equation-solver-utilities-utilities-to-vec"]], "rl_equation_solver.version": [[47, "module-rl_equation_solver.version"]], "Welcome to RL-Equation-Solver!": [[50, "welcome-to-rl-equation-solver"]], "Installation": [[51, "installation"]], "Option 1: Clone repo (recommended for developers)": [[51, "option-1-clone-repo-recommended-for-developers"]], "Installation and Usage": [[52, "installation-and-usage"]]}, "indexentries": {"module": [[0, "module-rl_equation_solver"], [1, "module-rl_equation_solver.agent"], [2, "module-rl_equation_solver.agent.base"], [5, "module-rl_equation_solver.agent.dqn"], [7, "module-rl_equation_solver.agent.gcn"], [9, "module-rl_equation_solver.agent.networks"], [12, "module-rl_equation_solver.config"], [14, "module-rl_equation_solver.environment"], [15, "module-rl_equation_solver.environment.algebraic"], [17, "module-rl_equation_solver.utilities"], [18, "module-rl_equation_solver.utilities.loss"], [20, "module-rl_equation_solver.utilities.operators"], [25, "module-rl_equation_solver.utilities.reward"], [27, "module-rl_equation_solver.utilities.utilities"], [47, "module-rl_equation_solver.version"]], "rl_equation_solver": [[0, "module-rl_equation_solver"]], "rl_equation_solver.agent": [[1, "module-rl_equation_solver.agent"]], "rl_equation_solver.agent.base": [[2, "module-rl_equation_solver.agent.base"]], "baseagent (class in rl_equation_solver.agent.base)": [[3, "rl_equation_solver.agent.base.BaseAgent"]], "append_history() (baseagent method)": [[3, "rl_equation_solver.agent.base.BaseAgent.append_history"]], "batch_states() (baseagent method)": [[3, "rl_equation_solver.agent.base.BaseAgent.batch_states"]], "choose_action() (baseagent method)": [[3, "rl_equation_solver.agent.base.BaseAgent.choose_action"]], "choose_optimal_action() (baseagent method)": [[3, "rl_equation_solver.agent.base.BaseAgent.choose_optimal_action"]], "choose_random_action() (baseagent method)": [[3, "rl_equation_solver.agent.base.BaseAgent.choose_random_action"]], "compute_loss() (baseagent method)": [[3, "rl_equation_solver.agent.base.BaseAgent.compute_loss"]], "convert_state() (baseagent method)": [[3, "rl_equation_solver.agent.base.BaseAgent.convert_state"]], "device (baseagent property)": [[3, "rl_equation_solver.agent.base.BaseAgent.device"]], "diff_loss_reward() (baseagent method)": [[3, "rl_equation_solver.agent.base.BaseAgent.diff_loss_reward"]], "exp_loss_reward() (baseagent method)": [[3, "rl_equation_solver.agent.base.BaseAgent.exp_loss_reward"]], "expression_complexity() (baseagent method)": [[3, "rl_equation_solver.agent.base.BaseAgent.expression_complexity"]], "find_reward() (baseagent method)": [[3, "rl_equation_solver.agent.base.BaseAgent.find_reward"]], "history (baseagent property)": [[3, "rl_equation_solver.agent.base.BaseAgent.history"]], "huber_loss() (baseagent method)": [[3, "rl_equation_solver.agent.base.BaseAgent.huber_loss"]], "init_state() (baseagent method)": [[3, "rl_equation_solver.agent.base.BaseAgent.init_state"]], "inv_loss_reward() (baseagent method)": [[3, "rl_equation_solver.agent.base.BaseAgent.inv_loss_reward"]], "is_constant_complexity() (baseagent method)": [[3, "rl_equation_solver.agent.base.BaseAgent.is_constant_complexity"]], "l2_loss() (baseagent method)": [[3, "rl_equation_solver.agent.base.BaseAgent.l2_loss"]], "load() (baseagent class method)": [[3, "rl_equation_solver.agent.base.BaseAgent.load"]], "log_info() (baseagent method)": [[3, "rl_equation_solver.agent.base.BaseAgent.log_info"]], "optimize_model() (baseagent method)": [[3, "rl_equation_solver.agent.base.BaseAgent.optimize_model"]], "predict() (baseagent method)": [[3, "rl_equation_solver.agent.base.BaseAgent.predict"]], "save() (baseagent method)": [[3, "rl_equation_solver.agent.base.BaseAgent.save"]], "smooth_l1_loss() (baseagent method)": [[3, "rl_equation_solver.agent.base.BaseAgent.smooth_l1_loss"]], "state_string (baseagent property)": [[3, "rl_equation_solver.agent.base.BaseAgent.state_string"]], "step() (baseagent method)": [[3, "rl_equation_solver.agent.base.BaseAgent.step"]], "sub_loss_reward() (baseagent method)": [[3, "rl_equation_solver.agent.base.BaseAgent.sub_loss_reward"]], "too_long() (baseagent method)": [[3, "rl_equation_solver.agent.base.BaseAgent.too_long"]], "train() (baseagent method)": [[3, "rl_equation_solver.agent.base.BaseAgent.train"]], "update_history() (baseagent method)": [[3, "rl_equation_solver.agent.base.BaseAgent.update_history"]], "update_info() (baseagent method)": [[3, "rl_equation_solver.agent.base.BaseAgent.update_info"]], "replaymemory (class in rl_equation_solver.agent.base)": [[4, "rl_equation_solver.agent.base.ReplayMemory"]], "push() (replaymemory method)": [[4, "rl_equation_solver.agent.base.ReplayMemory.push"]], "sample() (replaymemory method)": [[4, "rl_equation_solver.agent.base.ReplayMemory.sample"]], "rl_equation_solver.agent.dqn": [[5, "module-rl_equation_solver.agent.dqn"]], "agent (class in rl_equation_solver.agent.dqn)": [[6, "rl_equation_solver.agent.dqn.Agent"]], "append_history() (agent method)": [[6, "rl_equation_solver.agent.dqn.Agent.append_history"], [8, "rl_equation_solver.agent.gcn.Agent.append_history"]], "batch_states() (agent method)": [[6, "rl_equation_solver.agent.dqn.Agent.batch_states"], [8, "rl_equation_solver.agent.gcn.Agent.batch_states"]], "choose_action() (agent method)": [[6, "rl_equation_solver.agent.dqn.Agent.choose_action"], [8, "rl_equation_solver.agent.gcn.Agent.choose_action"]], "choose_optimal_action() (agent method)": [[6, "rl_equation_solver.agent.dqn.Agent.choose_optimal_action"], [8, "rl_equation_solver.agent.gcn.Agent.choose_optimal_action"]], "choose_random_action() (agent method)": [[6, "rl_equation_solver.agent.dqn.Agent.choose_random_action"], [8, "rl_equation_solver.agent.gcn.Agent.choose_random_action"]], "compute_loss() (agent method)": [[6, "rl_equation_solver.agent.dqn.Agent.compute_loss"], [8, "rl_equation_solver.agent.gcn.Agent.compute_loss"]], "convert_state() (agent method)": [[6, "rl_equation_solver.agent.dqn.Agent.convert_state"], [8, "rl_equation_solver.agent.gcn.Agent.convert_state"]], "device (agent property)": [[6, "rl_equation_solver.agent.dqn.Agent.device"], [8, "rl_equation_solver.agent.gcn.Agent.device"]], "diff_loss_reward() (agent method)": [[6, "rl_equation_solver.agent.dqn.Agent.diff_loss_reward"], [8, "rl_equation_solver.agent.gcn.Agent.diff_loss_reward"]], "exp_loss_reward() (agent method)": [[6, "rl_equation_solver.agent.dqn.Agent.exp_loss_reward"], [8, "rl_equation_solver.agent.gcn.Agent.exp_loss_reward"]], "expression_complexity() (agent method)": [[6, "rl_equation_solver.agent.dqn.Agent.expression_complexity"], [8, "rl_equation_solver.agent.gcn.Agent.expression_complexity"]], "find_reward() (agent method)": [[6, "rl_equation_solver.agent.dqn.Agent.find_reward"], [8, "rl_equation_solver.agent.gcn.Agent.find_reward"]], "history (agent property)": [[6, "rl_equation_solver.agent.dqn.Agent.history"], [8, "rl_equation_solver.agent.gcn.Agent.history"]], "huber_loss() (agent method)": [[6, "rl_equation_solver.agent.dqn.Agent.huber_loss"], [8, "rl_equation_solver.agent.gcn.Agent.huber_loss"]], "init_state() (agent method)": [[6, "rl_equation_solver.agent.dqn.Agent.init_state"], [8, "rl_equation_solver.agent.gcn.Agent.init_state"]], "inv_loss_reward() (agent method)": [[6, "rl_equation_solver.agent.dqn.Agent.inv_loss_reward"], [8, "rl_equation_solver.agent.gcn.Agent.inv_loss_reward"]], "is_constant_complexity() (agent method)": [[6, "rl_equation_solver.agent.dqn.Agent.is_constant_complexity"], [8, "rl_equation_solver.agent.gcn.Agent.is_constant_complexity"]], "l2_loss() (agent method)": [[6, "rl_equation_solver.agent.dqn.Agent.l2_loss"], [8, "rl_equation_solver.agent.gcn.Agent.l2_loss"]], "load() (agent class method)": [[6, "rl_equation_solver.agent.dqn.Agent.load"], [8, "rl_equation_solver.agent.gcn.Agent.load"]], "log_info() (agent method)": [[6, "rl_equation_solver.agent.dqn.Agent.log_info"], [8, "rl_equation_solver.agent.gcn.Agent.log_info"]], "optimize_model() (agent method)": [[6, "rl_equation_solver.agent.dqn.Agent.optimize_model"], [8, "rl_equation_solver.agent.gcn.Agent.optimize_model"]], "predict() (agent method)": [[6, "rl_equation_solver.agent.dqn.Agent.predict"], [8, "rl_equation_solver.agent.gcn.Agent.predict"]], "save() (agent method)": [[6, "rl_equation_solver.agent.dqn.Agent.save"], [8, "rl_equation_solver.agent.gcn.Agent.save"]], "smooth_l1_loss() (agent method)": [[6, "rl_equation_solver.agent.dqn.Agent.smooth_l1_loss"], [8, "rl_equation_solver.agent.gcn.Agent.smooth_l1_loss"]], "state_string (agent property)": [[6, "rl_equation_solver.agent.dqn.Agent.state_string"], [8, "rl_equation_solver.agent.gcn.Agent.state_string"]], "step() (agent method)": [[6, "rl_equation_solver.agent.dqn.Agent.step"], [8, "rl_equation_solver.agent.gcn.Agent.step"]], "sub_loss_reward() (agent method)": [[6, "rl_equation_solver.agent.dqn.Agent.sub_loss_reward"], [8, "rl_equation_solver.agent.gcn.Agent.sub_loss_reward"]], "too_long() (agent method)": [[6, "rl_equation_solver.agent.dqn.Agent.too_long"], [8, "rl_equation_solver.agent.gcn.Agent.too_long"]], "train() (agent method)": [[6, "rl_equation_solver.agent.dqn.Agent.train"], [8, "rl_equation_solver.agent.gcn.Agent.train"]], "update_history() (agent method)": [[6, "rl_equation_solver.agent.dqn.Agent.update_history"], [8, "rl_equation_solver.agent.gcn.Agent.update_history"]], "update_info() (agent method)": [[6, "rl_equation_solver.agent.dqn.Agent.update_info"], [8, "rl_equation_solver.agent.gcn.Agent.update_info"]], "rl_equation_solver.agent.gcn": [[7, "module-rl_equation_solver.agent.gcn"]], "agent (class in rl_equation_solver.agent.gcn)": [[8, "rl_equation_solver.agent.gcn.Agent"]], "rl_equation_solver.agent.networks": [[9, "module-rl_equation_solver.agent.networks"]], "dqn (class in rl_equation_solver.agent.networks)": [[10, "rl_equation_solver.agent.networks.DQN"]], "__call__() (dqn method)": [[10, "rl_equation_solver.agent.networks.DQN.__call__"]], "add_module() (dqn method)": [[10, "rl_equation_solver.agent.networks.DQN.add_module"]], "apply() (dqn method)": [[10, "rl_equation_solver.agent.networks.DQN.apply"]], "bfloat16() (dqn method)": [[10, "rl_equation_solver.agent.networks.DQN.bfloat16"]], "buffers() (dqn method)": [[10, "rl_equation_solver.agent.networks.DQN.buffers"]], "children() (dqn method)": [[10, "rl_equation_solver.agent.networks.DQN.children"]], "cpu() (dqn method)": [[10, "rl_equation_solver.agent.networks.DQN.cpu"]], "cuda() (dqn method)": [[10, "rl_equation_solver.agent.networks.DQN.cuda"]], "double() (dqn method)": [[10, "rl_equation_solver.agent.networks.DQN.double"]], "eval() (dqn method)": [[10, "rl_equation_solver.agent.networks.DQN.eval"]], "extra_repr() (dqn method)": [[10, "rl_equation_solver.agent.networks.DQN.extra_repr"]], "float() (dqn method)": [[10, "rl_equation_solver.agent.networks.DQN.float"]], "forward() (dqn method)": [[10, "rl_equation_solver.agent.networks.DQN.forward"]], "get_buffer() (dqn method)": [[10, "rl_equation_solver.agent.networks.DQN.get_buffer"]], "get_extra_state() (dqn method)": [[10, "rl_equation_solver.agent.networks.DQN.get_extra_state"]], "get_parameter() (dqn method)": [[10, "rl_equation_solver.agent.networks.DQN.get_parameter"]], "get_submodule() (dqn method)": [[10, "rl_equation_solver.agent.networks.DQN.get_submodule"]], "half() (dqn method)": [[10, "rl_equation_solver.agent.networks.DQN.half"]], "ipu() (dqn method)": [[10, "rl_equation_solver.agent.networks.DQN.ipu"]], "load_state_dict() (dqn method)": [[10, "rl_equation_solver.agent.networks.DQN.load_state_dict"]], "modules() (dqn method)": [[10, "rl_equation_solver.agent.networks.DQN.modules"]], "named_buffers() (dqn method)": [[10, "rl_equation_solver.agent.networks.DQN.named_buffers"]], "named_children() (dqn method)": [[10, "rl_equation_solver.agent.networks.DQN.named_children"]], "named_modules() (dqn method)": [[10, "rl_equation_solver.agent.networks.DQN.named_modules"]], "named_parameters() (dqn method)": [[10, "rl_equation_solver.agent.networks.DQN.named_parameters"]], "parameters() (dqn method)": [[10, "rl_equation_solver.agent.networks.DQN.parameters"]], "register_backward_hook() (dqn method)": [[10, "rl_equation_solver.agent.networks.DQN.register_backward_hook"]], "register_buffer() (dqn method)": [[10, "rl_equation_solver.agent.networks.DQN.register_buffer"]], "register_forward_hook() (dqn method)": [[10, "rl_equation_solver.agent.networks.DQN.register_forward_hook"]], "register_forward_pre_hook() (dqn method)": [[10, "rl_equation_solver.agent.networks.DQN.register_forward_pre_hook"]], "register_full_backward_hook() (dqn method)": [[10, "rl_equation_solver.agent.networks.DQN.register_full_backward_hook"]], "register_full_backward_pre_hook() (dqn method)": [[10, "rl_equation_solver.agent.networks.DQN.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (dqn method)": [[10, "rl_equation_solver.agent.networks.DQN.register_load_state_dict_post_hook"]], "register_module() (dqn method)": [[10, "rl_equation_solver.agent.networks.DQN.register_module"]], "register_parameter() (dqn method)": [[10, "rl_equation_solver.agent.networks.DQN.register_parameter"]], "register_state_dict_pre_hook() (dqn method)": [[10, "rl_equation_solver.agent.networks.DQN.register_state_dict_pre_hook"]], "requires_grad_() (dqn method)": [[10, "rl_equation_solver.agent.networks.DQN.requires_grad_"]], "set_extra_state() (dqn method)": [[10, "rl_equation_solver.agent.networks.DQN.set_extra_state"]], "share_memory() (dqn method)": [[10, "rl_equation_solver.agent.networks.DQN.share_memory"]], "state_dict() (dqn method)": [[10, "rl_equation_solver.agent.networks.DQN.state_dict"]], "to() (dqn method)": [[10, "rl_equation_solver.agent.networks.DQN.to"]], "to_empty() (dqn method)": [[10, "rl_equation_solver.agent.networks.DQN.to_empty"]], "train() (dqn method)": [[10, "rl_equation_solver.agent.networks.DQN.train"]], "type() (dqn method)": [[10, "rl_equation_solver.agent.networks.DQN.type"]], "xpu() (dqn method)": [[10, "rl_equation_solver.agent.networks.DQN.xpu"]], "zero_grad() (dqn method)": [[10, "rl_equation_solver.agent.networks.DQN.zero_grad"]], "gcn (class in rl_equation_solver.agent.networks)": [[11, "rl_equation_solver.agent.networks.GCN"]], "__call__() (gcn method)": [[11, "rl_equation_solver.agent.networks.GCN.__call__"]], "add_module() (gcn method)": [[11, "rl_equation_solver.agent.networks.GCN.add_module"]], "apply() (gcn method)": [[11, "rl_equation_solver.agent.networks.GCN.apply"]], "bfloat16() (gcn method)": [[11, "rl_equation_solver.agent.networks.GCN.bfloat16"]], "buffers() (gcn method)": [[11, "rl_equation_solver.agent.networks.GCN.buffers"]], "children() (gcn method)": [[11, "rl_equation_solver.agent.networks.GCN.children"]], "cpu() (gcn method)": [[11, "rl_equation_solver.agent.networks.GCN.cpu"]], "cuda() (gcn method)": [[11, "rl_equation_solver.agent.networks.GCN.cuda"]], "double() (gcn method)": [[11, "rl_equation_solver.agent.networks.GCN.double"]], "eval() (gcn method)": [[11, "rl_equation_solver.agent.networks.GCN.eval"]], "extra_repr() (gcn method)": [[11, "rl_equation_solver.agent.networks.GCN.extra_repr"]], "float() (gcn method)": [[11, "rl_equation_solver.agent.networks.GCN.float"]], "forward() (gcn method)": [[11, "rl_equation_solver.agent.networks.GCN.forward"]], "get_buffer() (gcn method)": [[11, "rl_equation_solver.agent.networks.GCN.get_buffer"]], "get_extra_state() (gcn method)": [[11, "rl_equation_solver.agent.networks.GCN.get_extra_state"]], "get_parameter() (gcn method)": [[11, "rl_equation_solver.agent.networks.GCN.get_parameter"]], "get_submodule() (gcn method)": [[11, "rl_equation_solver.agent.networks.GCN.get_submodule"]], "half() (gcn method)": [[11, "rl_equation_solver.agent.networks.GCN.half"]], "ipu() (gcn method)": [[11, "rl_equation_solver.agent.networks.GCN.ipu"]], "load_state_dict() (gcn method)": [[11, "rl_equation_solver.agent.networks.GCN.load_state_dict"]], "modules() (gcn method)": [[11, "rl_equation_solver.agent.networks.GCN.modules"]], "named_buffers() (gcn method)": [[11, "rl_equation_solver.agent.networks.GCN.named_buffers"]], "named_children() (gcn method)": [[11, "rl_equation_solver.agent.networks.GCN.named_children"]], "named_modules() (gcn method)": [[11, "rl_equation_solver.agent.networks.GCN.named_modules"]], "named_parameters() (gcn method)": [[11, "rl_equation_solver.agent.networks.GCN.named_parameters"]], "parameters() (gcn method)": [[11, "rl_equation_solver.agent.networks.GCN.parameters"]], "register_backward_hook() (gcn method)": [[11, "rl_equation_solver.agent.networks.GCN.register_backward_hook"]], "register_buffer() (gcn method)": [[11, "rl_equation_solver.agent.networks.GCN.register_buffer"]], "register_forward_hook() (gcn method)": [[11, "rl_equation_solver.agent.networks.GCN.register_forward_hook"]], "register_forward_pre_hook() (gcn method)": [[11, "rl_equation_solver.agent.networks.GCN.register_forward_pre_hook"]], "register_full_backward_hook() (gcn method)": [[11, "rl_equation_solver.agent.networks.GCN.register_full_backward_hook"]], "register_full_backward_pre_hook() (gcn method)": [[11, "rl_equation_solver.agent.networks.GCN.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (gcn method)": [[11, "rl_equation_solver.agent.networks.GCN.register_load_state_dict_post_hook"]], "register_module() (gcn method)": [[11, "rl_equation_solver.agent.networks.GCN.register_module"]], "register_parameter() (gcn method)": [[11, "rl_equation_solver.agent.networks.GCN.register_parameter"]], "register_state_dict_pre_hook() (gcn method)": [[11, "rl_equation_solver.agent.networks.GCN.register_state_dict_pre_hook"]], "requires_grad_() (gcn method)": [[11, "rl_equation_solver.agent.networks.GCN.requires_grad_"]], "set_extra_state() (gcn method)": [[11, "rl_equation_solver.agent.networks.GCN.set_extra_state"]], "share_memory() (gcn method)": [[11, "rl_equation_solver.agent.networks.GCN.share_memory"]], "state_dict() (gcn method)": [[11, "rl_equation_solver.agent.networks.GCN.state_dict"]], "to() (gcn method)": [[11, "rl_equation_solver.agent.networks.GCN.to"]], "to_empty() (gcn method)": [[11, "rl_equation_solver.agent.networks.GCN.to_empty"]], "train() (gcn method)": [[11, "rl_equation_solver.agent.networks.GCN.train"]], "type() (gcn method)": [[11, "rl_equation_solver.agent.networks.GCN.type"]], "xpu() (gcn method)": [[11, "rl_equation_solver.agent.networks.GCN.xpu"]], "zero_grad() (gcn method)": [[11, "rl_equation_solver.agent.networks.GCN.zero_grad"]], "rl_equation_solver.config": [[12, "module-rl_equation_solver.config"]], "config (class in rl_equation_solver.config)": [[13, "rl_equation_solver.config.Config"]], "rl_equation_solver.environment": [[14, "module-rl_equation_solver.environment"]], "rl_equation_solver.environment.algebraic": [[15, "module-rl_equation_solver.environment.algebraic"]], "env (class in rl_equation_solver.environment.algebraic)": [[16, "rl_equation_solver.environment.algebraic.Env"]], "actions (env property)": [[16, "rl_equation_solver.environment.algebraic.Env.actions"]], "equation (env property)": [[16, "rl_equation_solver.environment.algebraic.Env.equation"]], "feature_dict (env property)": [[16, "rl_equation_solver.environment.algebraic.Env.feature_dict"]], "node_labels (env property)": [[16, "rl_equation_solver.environment.algebraic.Env.node_labels"]], "render() (env method)": [[16, "rl_equation_solver.environment.algebraic.Env.render"]], "reset() (env method)": [[16, "rl_equation_solver.environment.algebraic.Env.reset"]], "state_graph (env property)": [[16, "rl_equation_solver.environment.algebraic.Env.state_graph"]], "state_vec (env property)": [[16, "rl_equation_solver.environment.algebraic.Env.state_vec"]], "terms (env property)": [[16, "rl_equation_solver.environment.algebraic.Env.terms"]], "rl_equation_solver.utilities": [[17, "module-rl_equation_solver.utilities"]], "rl_equation_solver.utilities.loss": [[18, "module-rl_equation_solver.utilities.loss"]], "lossmixin (class in rl_equation_solver.utilities.loss)": [[19, "rl_equation_solver.utilities.loss.LossMixin"]], "huber_loss() (lossmixin method)": [[19, "rl_equation_solver.utilities.loss.LossMixin.huber_loss"]], "l2_loss() (lossmixin method)": [[19, "rl_equation_solver.utilities.loss.LossMixin.l2_loss"]], "smooth_l1_loss() (lossmixin method)": [[19, "rl_equation_solver.utilities.loss.LossMixin.smooth_l1_loss"]], "rl_equation_solver.utilities.operators": [[20, "module-rl_equation_solver.utilities.operators"]], "div() (in module rl_equation_solver.utilities.operators)": [[21, "rl_equation_solver.utilities.operators.div"]], "root() (in module rl_equation_solver.utilities.operators)": [[22, "rl_equation_solver.utilities.operators.root"]], "sqrt() (in module rl_equation_solver.utilities.operators)": [[23, "rl_equation_solver.utilities.operators.sqrt"]], "square() (in module rl_equation_solver.utilities.operators)": [[24, "rl_equation_solver.utilities.operators.square"]], "rl_equation_solver.utilities.reward": [[25, "module-rl_equation_solver.utilities.reward"]], "rewardmixin (class in rl_equation_solver.utilities.reward)": [[26, "rl_equation_solver.utilities.reward.RewardMixin"]], "diff_loss_reward() (rewardmixin method)": [[26, "rl_equation_solver.utilities.reward.RewardMixin.diff_loss_reward"]], "exp_loss_reward() (rewardmixin method)": [[26, "rl_equation_solver.utilities.reward.RewardMixin.exp_loss_reward"]], "expression_complexity() (rewardmixin method)": [[26, "rl_equation_solver.utilities.reward.RewardMixin.expression_complexity"]], "inv_loss_reward() (rewardmixin method)": [[26, "rl_equation_solver.utilities.reward.RewardMixin.inv_loss_reward"]], "sub_loss_reward() (rewardmixin method)": [[26, "rl_equation_solver.utilities.reward.RewardMixin.sub_loss_reward"]], "rl_equation_solver.utilities.utilities": [[27, "module-rl_equation_solver.utilities.utilities"]], "batch (class in rl_equation_solver.utilities.utilities)": [[28, "rl_equation_solver.utilities.utilities.Batch"]], "__call__() (batch class method)": [[28, "rl_equation_solver.utilities.utilities.Batch.__call__"]], "experience (class in rl_equation_solver.utilities.utilities)": [[29, "rl_equation_solver.utilities.utilities.Experience"]], "__add__() (experience method)": [[29, "rl_equation_solver.utilities.utilities.Experience.__add__"]], "__mul__() (experience method)": [[29, "rl_equation_solver.utilities.utilities.Experience.__mul__"]], "action (experience attribute)": [[29, "rl_equation_solver.utilities.utilities.Experience.action"]], "count() (experience method)": [[29, "rl_equation_solver.utilities.utilities.Experience.count"]], "index() (experience method)": [[29, "rl_equation_solver.utilities.utilities.Experience.index"]], "next_state (experience attribute)": [[29, "rl_equation_solver.utilities.utilities.Experience.next_state"]], "reward (experience attribute)": [[29, "rl_equation_solver.utilities.utilities.Experience.reward"]], "state (experience attribute)": [[29, "rl_equation_solver.utilities.utilities.Experience.state"]], "graphembedding (class in rl_equation_solver.utilities.utilities)": [[30, "rl_equation_solver.utilities.utilities.GraphEmbedding"]], "id (class in rl_equation_solver.utilities.utilities)": [[31, "rl_equation_solver.utilities.utilities.Id"]], "get() (id class method)": [[31, "rl_equation_solver.utilities.utilities.Id.get"]], "reset() (id class method)": [[31, "rl_equation_solver.utilities.utilities.Id.reset"]], "node (class in rl_equation_solver.utilities.utilities)": [[32, "rl_equation_solver.utilities.utilities.Node"]], "vectorembedding (class in rl_equation_solver.utilities.utilities)": [[33, "rl_equation_solver.utilities.utilities.VectorEmbedding"]], "build_adjacency_matrix() (in module rl_equation_solver.utilities.utilities)": [[34, "rl_equation_solver.utilities.utilities.build_adjacency_matrix"]], "build_adjacency_matrix_custom() (in module rl_equation_solver.utilities.utilities)": [[35, "rl_equation_solver.utilities.utilities.build_adjacency_matrix_custom"]], "encode_onehot() (in module rl_equation_solver.utilities.utilities)": [[36, "rl_equation_solver.utilities.utilities.encode_onehot"]], "get_json_graph() (in module rl_equation_solver.utilities.utilities)": [[37, "rl_equation_solver.utilities.utilities.get_json_graph"]], "get_node_features() (in module rl_equation_solver.utilities.utilities)": [[38, "rl_equation_solver.utilities.utilities.get_node_features"]], "get_node_labels() (in module rl_equation_solver.utilities.utilities)": [[39, "rl_equation_solver.utilities.utilities.get_node_labels"]], "graph_walk() (in module rl_equation_solver.utilities.utilities)": [[40, "rl_equation_solver.utilities.utilities.graph_walk"]], "normalize() (in module rl_equation_solver.utilities.utilities)": [[41, "rl_equation_solver.utilities.utilities.normalize"]], "pad_array() (in module rl_equation_solver.utilities.utilities)": [[42, "rl_equation_solver.utilities.utilities.pad_array"]], "plot_state_as_graph() (in module rl_equation_solver.utilities.utilities)": [[43, "rl_equation_solver.utilities.utilities.plot_state_as_graph"]], "sparse_mx_to_torch_sparse_tensor() (in module rl_equation_solver.utilities.utilities)": [[44, "rl_equation_solver.utilities.utilities.sparse_mx_to_torch_sparse_tensor"]], "to_graph() (in module rl_equation_solver.utilities.utilities)": [[45, "rl_equation_solver.utilities.utilities.to_graph"]], "to_vec() (in module rl_equation_solver.utilities.utilities)": [[46, "rl_equation_solver.utilities.utilities.to_vec"]], "rl_equation_solver.version": [[47, "module-rl_equation_solver.version"]]}})