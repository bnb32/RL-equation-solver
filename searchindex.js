Search.setIndex({"docnames": ["_autosummary/examples", "_autosummary/examples.run_linear_solver_dqn", "_autosummary/examples.run_linear_solver_gcn", "_autosummary/examples.run_quadratic_solver_dqn", "_autosummary/rl_equation_solver", "_autosummary/rl_equation_solver.agent", "_autosummary/rl_equation_solver.agent.base", "_autosummary/rl_equation_solver.agent.base.BaseAgent", "_autosummary/rl_equation_solver.agent.base.ReplayMemory", "_autosummary/rl_equation_solver.agent.dqn", "_autosummary/rl_equation_solver.agent.dqn.Agent", "_autosummary/rl_equation_solver.agent.gcn", "_autosummary/rl_equation_solver.agent.gcn.Agent", "_autosummary/rl_equation_solver.agent.networks", "_autosummary/rl_equation_solver.agent.networks.DQN", "_autosummary/rl_equation_solver.agent.networks.GCN", "_autosummary/rl_equation_solver.config", "_autosummary/rl_equation_solver.config.Config", "_autosummary/rl_equation_solver.environment", "_autosummary/rl_equation_solver.environment.algebraic", "_autosummary/rl_equation_solver.environment.algebraic.Env", "_autosummary/rl_equation_solver.utilities", "_autosummary/rl_equation_solver.utilities.loss", "_autosummary/rl_equation_solver.utilities.loss.LossMixin", "_autosummary/rl_equation_solver.utilities.operators", "_autosummary/rl_equation_solver.utilities.operators.div", "_autosummary/rl_equation_solver.utilities.operators.root", "_autosummary/rl_equation_solver.utilities.operators.sqrt", "_autosummary/rl_equation_solver.utilities.operators.square", "_autosummary/rl_equation_solver.utilities.reward", "_autosummary/rl_equation_solver.utilities.reward.RewardMixin", "_autosummary/rl_equation_solver.utilities.utilities", "_autosummary/rl_equation_solver.utilities.utilities.Batch", "_autosummary/rl_equation_solver.utilities.utilities.Experience", "_autosummary/rl_equation_solver.utilities.utilities.GraphEmbedding", "_autosummary/rl_equation_solver.utilities.utilities.Id", "_autosummary/rl_equation_solver.utilities.utilities.Node", "_autosummary/rl_equation_solver.utilities.utilities.VectorEmbedding", "_autosummary/rl_equation_solver.utilities.utilities.build_adjacency_matrix", "_autosummary/rl_equation_solver.utilities.utilities.build_adjacency_matrix_custom", "_autosummary/rl_equation_solver.utilities.utilities.encode_onehot", "_autosummary/rl_equation_solver.utilities.utilities.get_json_graph", "_autosummary/rl_equation_solver.utilities.utilities.get_node_features", "_autosummary/rl_equation_solver.utilities.utilities.get_node_labels", "_autosummary/rl_equation_solver.utilities.utilities.graph_walk", "_autosummary/rl_equation_solver.utilities.utilities.normalize", "_autosummary/rl_equation_solver.utilities.utilities.pad_array", "_autosummary/rl_equation_solver.utilities.utilities.plot_state_as_graph", "_autosummary/rl_equation_solver.utilities.utilities.sparse_mx_to_torch_sparse_tensor", "_autosummary/rl_equation_solver.utilities.utilities.to_graph", "_autosummary/rl_equation_solver.utilities.utilities.to_vec", "_autosummary/rl_equation_solver.version", "api", "examples", "index", "misc/installation", "misc/installation_usage"], "filenames": ["_autosummary/examples.rst", "_autosummary/examples.run_linear_solver_dqn.rst", "_autosummary/examples.run_linear_solver_gcn.rst", "_autosummary/examples.run_quadratic_solver_dqn.rst", "_autosummary/rl_equation_solver.rst", "_autosummary/rl_equation_solver.agent.rst", "_autosummary/rl_equation_solver.agent.base.rst", "_autosummary/rl_equation_solver.agent.base.BaseAgent.rst", "_autosummary/rl_equation_solver.agent.base.ReplayMemory.rst", "_autosummary/rl_equation_solver.agent.dqn.rst", "_autosummary/rl_equation_solver.agent.dqn.Agent.rst", "_autosummary/rl_equation_solver.agent.gcn.rst", "_autosummary/rl_equation_solver.agent.gcn.Agent.rst", "_autosummary/rl_equation_solver.agent.networks.rst", "_autosummary/rl_equation_solver.agent.networks.DQN.rst", "_autosummary/rl_equation_solver.agent.networks.GCN.rst", "_autosummary/rl_equation_solver.config.rst", "_autosummary/rl_equation_solver.config.Config.rst", "_autosummary/rl_equation_solver.environment.rst", "_autosummary/rl_equation_solver.environment.algebraic.rst", "_autosummary/rl_equation_solver.environment.algebraic.Env.rst", "_autosummary/rl_equation_solver.utilities.rst", "_autosummary/rl_equation_solver.utilities.loss.rst", "_autosummary/rl_equation_solver.utilities.loss.LossMixin.rst", "_autosummary/rl_equation_solver.utilities.operators.rst", "_autosummary/rl_equation_solver.utilities.operators.div.rst", "_autosummary/rl_equation_solver.utilities.operators.root.rst", "_autosummary/rl_equation_solver.utilities.operators.sqrt.rst", "_autosummary/rl_equation_solver.utilities.operators.square.rst", "_autosummary/rl_equation_solver.utilities.reward.rst", "_autosummary/rl_equation_solver.utilities.reward.RewardMixin.rst", "_autosummary/rl_equation_solver.utilities.utilities.rst", "_autosummary/rl_equation_solver.utilities.utilities.Batch.rst", "_autosummary/rl_equation_solver.utilities.utilities.Experience.rst", "_autosummary/rl_equation_solver.utilities.utilities.GraphEmbedding.rst", "_autosummary/rl_equation_solver.utilities.utilities.Id.rst", "_autosummary/rl_equation_solver.utilities.utilities.Node.rst", "_autosummary/rl_equation_solver.utilities.utilities.VectorEmbedding.rst", "_autosummary/rl_equation_solver.utilities.utilities.build_adjacency_matrix.rst", "_autosummary/rl_equation_solver.utilities.utilities.build_adjacency_matrix_custom.rst", "_autosummary/rl_equation_solver.utilities.utilities.encode_onehot.rst", "_autosummary/rl_equation_solver.utilities.utilities.get_json_graph.rst", "_autosummary/rl_equation_solver.utilities.utilities.get_node_features.rst", "_autosummary/rl_equation_solver.utilities.utilities.get_node_labels.rst", "_autosummary/rl_equation_solver.utilities.utilities.graph_walk.rst", "_autosummary/rl_equation_solver.utilities.utilities.normalize.rst", "_autosummary/rl_equation_solver.utilities.utilities.pad_array.rst", "_autosummary/rl_equation_solver.utilities.utilities.plot_state_as_graph.rst", "_autosummary/rl_equation_solver.utilities.utilities.sparse_mx_to_torch_sparse_tensor.rst", "_autosummary/rl_equation_solver.utilities.utilities.to_graph.rst", "_autosummary/rl_equation_solver.utilities.utilities.to_vec.rst", "_autosummary/rl_equation_solver.version.rst", "api.rst", "examples.rst", "index.rst", "misc/installation.rst", "misc/installation_usage.rst"], "titles": ["examples", "examples.run_linear_solver_dqn", "examples.run_linear_solver_gcn", "examples.run_quadratic_solver_dqn", "rl_equation_solver", "rl_equation_solver.agent", "rl_equation_solver.agent.base", "rl_equation_solver.agent.base.BaseAgent", "rl_equation_solver.agent.base.ReplayMemory", "rl_equation_solver.agent.dqn", "rl_equation_solver.agent.dqn.Agent", "rl_equation_solver.agent.gcn", "rl_equation_solver.agent.gcn.Agent", "rl_equation_solver.agent.networks", "rl_equation_solver.agent.networks.DQN", "rl_equation_solver.agent.networks.GCN", "rl_equation_solver.config", "rl_equation_solver.config.Config", "rl_equation_solver.environment", "rl_equation_solver.environment.algebraic", "rl_equation_solver.environment.algebraic.Env", "rl_equation_solver.utilities", "rl_equation_solver.utilities.loss", "rl_equation_solver.utilities.loss.LossMixin", "rl_equation_solver.utilities.operators", "rl_equation_solver.utilities.operators.div", "rl_equation_solver.utilities.operators.root", "rl_equation_solver.utilities.operators.sqrt", "rl_equation_solver.utilities.operators.square", "rl_equation_solver.utilities.reward", "rl_equation_solver.utilities.reward.RewardMixin", "rl_equation_solver.utilities.utilities", "rl_equation_solver.utilities.utilities.Batch", "rl_equation_solver.utilities.utilities.Experience", "rl_equation_solver.utilities.utilities.GraphEmbedding", "rl_equation_solver.utilities.utilities.Id", "rl_equation_solver.utilities.utilities.Node", "rl_equation_solver.utilities.utilities.VectorEmbedding", "rl_equation_solver.utilities.utilities.build_adjacency_matrix", "rl_equation_solver.utilities.utilities.build_adjacency_matrix_custom", "rl_equation_solver.utilities.utilities.encode_onehot", "rl_equation_solver.utilities.utilities.get_json_graph", "rl_equation_solver.utilities.utilities.get_node_features", "rl_equation_solver.utilities.utilities.get_node_labels", "rl_equation_solver.utilities.utilities.graph_walk", "rl_equation_solver.utilities.utilities.normalize", "rl_equation_solver.utilities.utilities.pad_array", "rl_equation_solver.utilities.utilities.plot_state_as_graph", "rl_equation_solver.utilities.utilities.sparse_mx_to_torch_sparse_tensor", "rl_equation_solver.utilities.utilities.to_graph", "rl_equation_solver.utilities.utilities.to_vec", "rl_equation_solver.version", "&lt;no title&gt;", "&lt;no title&gt;", "Welcome to RL-Equation-Solver!", "Installation", "Installation and Usage"], "terms": {"run": [1, 2, 3, 14, 15, 55], "linear": [1, 2, 14, 15, 19], "solver": [1, 2, 3, 4, 19, 55], "dqn": [1, 3, 6, 7], "base": [1, 2, 3, 4, 9, 10, 11, 12, 14, 15, 17, 20, 23, 30, 32, 33, 34, 35, 36, 37], "agent": [1, 2, 3, 20], "solv": [1, 2, 3, 20], "x": [1, 2, 7, 10, 12, 14, 20, 23], "b": [1, 2, 20, 25, 26, 27, 28], "0": [1, 2, 3, 7, 10, 12, 14, 15, 20, 23, 33, 42], "gcn": 2, "quadrat": 3, "ax": 3, "2": [3, 7, 10, 12, 14, 15, 20, 23, 33], "bx": 3, "c": 3, "reinforc": 4, "learn": [4, 7, 10, 12, 23], "equat": [4, 7, 10, 12, 19, 20, 55], "packag": [4, 51, 55], "modul": [5, 6, 14, 15, 18, 21], "class": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 22, 23, 29, 30, 31, 32, 33, 34, 35, 36, 37], "env": [7, 10, 12, 14, 15, 55], "hidden_s": [7, 10, 12, 14, 15], "256": [7, 10, 12], "devic": [7, 10, 12, 14, 15, 32, 34, 37], "cpu": [7, 10, 12, 14, 15], "sourc": [7, 8, 10, 12, 14, 15, 17, 20, 23, 25, 26, 27, 28, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 55], "rewardmixin": 7, "lossmixin": 7, "target": [7, 10, 12, 14, 15, 44], "polici": [7, 9, 10, 11, 12, 13], "network": [7, 10, 12], "paramet": [7, 10, 12, 14, 15, 20, 30, 41, 43, 44, 49, 50], "object": [7, 8, 10, 12, 14, 15, 17, 20, 23, 30, 32, 34, 35, 36, 37, 43], "environ": [7, 10, 12, 14, 15, 55], "instanc": [7, 10, 12, 14, 15, 32, 33], "e": [7, 10, 12, 14, 15, 20, 42, 55], "g": [7, 10, 12, 14, 15, 20, 42], "env_linear_equ": [7, 10, 12], "int": [7, 10, 12, 14, 15, 20, 30, 50], "size": [7, 10, 12, 14, 15, 34, 37], "hidden": [7, 10, 12, 14, 15], "layer": [7, 10, 12, 14, 15], "method": [7, 8, 10, 12, 14, 15, 17, 20, 23, 30, 32, 33, 34, 35, 36, 37], "attribut": [7, 10, 12, 14, 15, 17, 20, 33, 35, 43], "abstract": [7, 30], "init_st": [7, 10, 12], "initi": [7, 10, 12, 14, 15, 20, 32], "state": [7, 10, 12, 14, 15, 20, 30, 32, 33, 41, 44, 49, 50], "from": [7, 10, 12, 14, 15, 20, 38, 39, 42, 43, 55], "thi": [7, 10, 12, 14, 15, 30], "can": [7, 14, 15, 20, 32, 42], "vector": [7, 10, 20, 32, 37, 50], "represent": [7, 10, 12, 14, 15, 20, 30, 41, 47, 49, 50], "graph": [7, 10, 12, 15, 20, 30, 32, 34, 38, 39, 41, 42, 43, 47, 49], "convert_st": [7, 10, 12], "state_str": [7, 10, 12], "convert": [7, 10, 12, 14, 15, 48], "string": [7, 10, 12, 14, 15, 20, 30, 41, 44, 49, 50], "appropri": 7, "batch_stat": [7, 10, 12], "batch": [7, 8, 10, 12], "properti": [7, 10, 12, 20, 23], "get": [7, 10, 12, 20, 30, 35, 42, 43, 50], "train": [7, 8, 10, 12, 14, 15], "choose_optimal_act": [7, 10, 12], "choos": [7, 10, 12, 20], "action": [7, 10, 12, 14, 15, 20, 33], "max": [7, 10, 12, 50], "expect": [7, 10, 12, 14, 15], "reward": [7, 10, 12, 20, 21, 33], "max_a": [7, 10, 12], "q": [7, 10, 12], "": [7, 10, 12, 14, 15], "1": [7, 10, 12, 14, 15, 20, 23, 33, 42, 56], "return": [7, 10, 12, 14, 15, 20, 30, 33, 41, 49, 50], "largest": [7, 10, 12], "column": [7, 10, 12], "valu": [7, 10, 12, 14, 15, 33, 49, 50], "each": [7, 10, 12, 14, 15], "row": [7, 10, 12, 45], "second": [7, 10, 12], "result": [7, 10, 12, 14, 15, 20], "i": [7, 10, 12, 14, 15, 20, 23, 30, 33, 55], "index": [7, 10, 12, 33, 43], "where": [7, 10, 12], "element": [7, 10, 12], "wa": [7, 10, 12], "found": [7, 10, 12, 14, 15], "so": [7, 10, 12, 14, 15, 20], "we": [7, 10, 12, 14, 15, 20, 42], "pick": [7, 10, 12], "larger": [7, 10, 12], "choose_act": [7, 10, 12], "fals": [7, 10, 12, 14, 15], "given": [7, 10, 12, 14, 15, 30, 32, 46, 50], "either": [7, 10, 12, 14, 15, 32], "optim": [7, 10, 12, 14, 15, 23], "random": [7, 8, 10, 12], "depend": [7, 10, 12, 55], "step": [7, 10, 12], "compute_loss": [7, 10, 12], "state_action_valu": [7, 10, 12], "expected_state_action_valu": [7, 10, 12], "comput": [7, 10, 12, 14, 15], "huber": [7, 10, 12, 23], "loss": [7, 10, 12, 20, 21, 30], "update_info": [7, 10, 12], "kei": [7, 10, 12, 14, 15, 44], "updat": [7, 10, 12, 14, 15], "histori": [7, 10, 12], "info": [7, 10, 12], "choose_random_act": [7, 10, 12], "rather": [7, 10, 12], "than": [7, 10, 12], "optimize_model": [7, 10, 12], "function": [7, 10, 12, 14, 15, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31], "perform": [7, 10, 12, 14, 15], "singl": [7, 10, 12, 14, 15, 36], "log_info": [7, 10, 12], "episod": [7, 10, 12], "write": [7, 10, 12], "logger": [7, 10, 12], "num_episod": [7, 10, 12], "model": [7, 10, 12, 14, 15, 16, 17], "number": [7, 10, 12, 14, 15, 33, 35], "The": [7, 10, 12, 14, 15, 20, 55], "soft": [7, 10, 12], "weight": [7, 10, 12, 14, 15], "tau": [7, 10, 12], "policy_net_state_dict": [7, 10, 12], "target_net_state_dict": [7, 10, 12], "help": [7, 10, 12, 14, 15], "make": [7, 10, 12, 14, 15, 41, 47, 49, 55], "converg": [7, 10, 12], "policy_network": [7, 10, 12], "append_histori": [7, 10, 12], "entri": [7, 10, 12, 14, 15], "append": [7, 10, 12], "latest": [7, 10, 12], "update_histori": [7, 10, 12], "step_numb": [7, 10, 12], "take": [7, 10, 12, 20], "next": [7, 10, 12], "current": [7, 10, 12, 14, 15, 20], "str": [7, 10, 12, 14, 15, 30, 41, 44, 49, 50], "taken": [7, 10, 12], "far": [7, 10, 12], "whether": [7, 10, 12, 14, 15], "part": [7, 10, 12, 14, 15], "infer": [7, 10, 12], "determin": [7, 10, 12], "tensor": [7, 10, 12, 14, 15, 48], "repres": [7, 10, 12, 20, 36], "pytorch": [7, 10, 12], "next_stat": [7, 10, 12, 33], "after": [7, 10, 12, 14, 15], "graphembed": [7, 10, 12, 32], "done": [7, 10, 12], "bool": [7, 10, 12, 14, 15], "solut": [7, 10, 12, 20], "ha": [7, 10, 12, 14, 15], "been": [7, 10, 12], "condit": [7, 10, 12], "have": [7, 10, 12, 14, 15, 55], "exceed": [7, 10, 12], "dict": [7, 10, 12, 14, 15, 49, 50], "dictionari": [7, 10, 12, 14, 15, 20, 42, 44, 49, 50], "inform": [7, 10, 12, 14, 15], "expression_complex": [7, 10, 12, 30], "express": [7, 10, 12, 30, 41, 44, 47, 49, 50], "complex": [7, 10, 12, 14, 15, 20, 30], "edg": [7, 10, 12, 38, 39], "plu": [7, 10, 12], "node": [7, 10, 12, 20, 34, 35, 42, 43, 44], "expression_tre": [7, 10, 12], "approxim": [7, 10, 12], "find_reward": [7, 10, 12], "state_old": [7, 10, 12, 30], "state_new": [7, 10, 12, 30], "last": [7, 10, 12, 30], "new": [7, 10, 12, 14, 15, 30, 33], "differ": [7, 10, 12, 14, 15, 30], "between": [7, 10, 12, 14, 15, 23, 30], "predict": [7, 10, 12], "is_constant_complex": [7, 10, 12], "check": [7, 10, 12, 14, 15], "constant": [7, 10, 12], "over": [7, 10, 12, 14, 15, 44], "long": [7, 10, 12], "save": [7, 8, 10, 12, 14, 15], "output_fil": [7, 10, 12], "classmethod": [7, 10, 12, 32, 35], "load": [7, 10, 12], "model_fil": [7, 10, 12], "too_long": [7, 10, 12], "dimens": [7, 10, 12], "too": [7, 10, 12], "larg": [7, 10, 12], "diff_loss_reward": [7, 10, 12, 30], "decreas": [7, 10, 12, 30], "exp_loss_reward": [7, 10, 12, 30], "huber_loss": [7, 10, 12, 23], "y": [7, 10, 12, 23], "delta": [7, 10, 12, 23], "also": [7, 10, 12, 14, 15, 23], "known": [7, 10, 12, 23], "smooth": [7, 10, 12, 23], "mean": [7, 10, 12, 23], "absolut": [7, 10, 12, 23], "error": [7, 10, 12, 14, 15, 23], "us": [7, 10, 12, 14, 15, 20, 23, 31, 55], "variou": [7, 10, 12, 23], "machin": [7, 10, 12, 23, 55], "problem": [7, 10, 12, 23], "particularli": [7, 10, 12, 23], "regress": [7, 10, 12, 23], "task": [7, 10, 12, 23], "It": [7, 10, 12, 14, 15, 23], "combin": [7, 10, 12, 23], "both": [7, 10, 12, 14, 15, 23], "squar": [7, 10, 12, 23], "mse": [7, 10, 12, 23], "mae": [7, 10, 12, 23], "provid": [7, 10, 12, 14, 15, 23], "balanc": [7, 10, 12, 23], "two": [7, 10, 12, 14, 15, 23], "l": [7, 10, 12, 14, 15, 23], "f": [7, 10, 12, 23], "begin": [7, 10, 12, 23], "case": [7, 10, 12, 23], "frac": [7, 10, 12, 23], "leq": [7, 10, 12, 23], "gt": [7, 10, 12, 23], "end": [7, 10, 12, 14, 15, 23], "inv_loss_reward": [7, 10, 12, 30], "l2_loss": [7, 10, 12, 23], "l2": [7, 10, 12, 23], "smooth_l1_loss": [7, 10, 12, 23], "l1": [7, 10, 12, 23], "sub_loss_reward": [7, 10, 12, 30], "capac": 8, "store": [8, 14, 15, 43], "experi": 8, "replai": 8, "buffer": [8, 14, 15], "push": 8, "arg": [8, 14, 15], "memori": [8, 14, 15], "sampl": 8, "batch_siz": 8, "select": 8, "baseag": [10, 12], "n_observ": [14, 15, 34, 37], "n_action": [14, 15], "simpl": [14, 15], "mlp": 14, "observ": [14, 15], "discret": [14, 15], "avail": [14, 15], "forward": [14, 15], "pass": [14, 15], "__call__": [14, 15, 32], "kwarg": [14, 15], "call": [14, 15], "self": [14, 15, 33], "add_modul": [14, 15], "name": [14, 15, 43, 44, 49, 50], "none": [14, 15, 43], "add": [14, 15, 20, 41, 42], "child": [14, 15], "access": [14, 15], "an": [14, 15, 20], "ad": [14, 15], "appli": [14, 15], "fn": [14, 15], "callabl": [14, 15], "t": [14, 15, 41], "recurs": [14, 15, 44], "everi": [14, 15], "submodul": [14, 15], "children": [14, 15], "well": [14, 15], "typic": [14, 15], "includ": [14, 15, 43], "see": [14, 15], "nn": [14, 15], "init": [14, 15], "doc": [14, 15], "exampl": [14, 15, 20], "torch": [14, 15, 48], "no_grad": [14, 15], "def": [14, 15], "init_weight": [14, 15], "m": [14, 15], "print": [14, 15, 20], "type": [14, 15], "fill_": [14, 15], "net": [14, 15], "sequenti": [14, 15], "in_featur": [14, 15], "out_featur": [14, 15], "bia": [14, 15], "true": [14, 15], "contain": [14, 15], "requires_grad": [14, 15], "bfloat16": [14, 15], "cast": [14, 15], "all": [14, 15], "float": [14, 15], "point": [14, 15], "datatyp": [14, 15], "modifi": [14, 15], "place": [14, 15], "iter": [14, 15], "yield": [14, 15], "otherwis": [14, 15], "onli": [14, 15], "ar": [14, 15, 20, 55], "direct": [14, 15, 20], "member": [14, 15], "xdoctest": [14, 15], "skip": [14, 15], "undefin": [14, 15], "var": [14, 15], "buf": [14, 15], "20l": [14, 15], "1l": [14, 15], "5l": [14, 15], "immedi": [14, 15], "move": [14, 15], "cuda": [14, 15], "gpu": [14, 15], "associ": [14, 15], "should": [14, 15], "befor": [14, 15], "construct": [14, 15], "live": [14, 15], "while": [14, 15], "being": [14, 15], "option": [14, 15, 56], "specifi": [14, 15], "copi": [14, 15], "doubl": [14, 15], "eval": [14, 15], "set": [14, 15, 32], "evalu": [14, 15], "mode": [14, 15, 20], "ani": [14, 15], "effect": [14, 15], "certain": [14, 15], "document": [14, 15], "particular": [14, 15], "detail": [14, 15], "behavior": [14, 15], "thei": [14, 15], "affect": [14, 15], "dropout": [14, 15], "batchnorm": [14, 15], "etc": [14, 15], "equival": [14, 15], "local": [14, 15], "disabl": [14, 15], "grad": [14, 15], "comparison": [14, 15], "sever": [14, 15], "similar": [14, 15], "mechan": [14, 15], "mai": [14, 15], "confus": [14, 15], "extra_repr": [14, 15], "extra": [14, 15], "To": [14, 15], "custom": [14, 15, 24], "you": [14, 15, 55], "re": [14, 15], "implement": [14, 15], "your": [14, 15, 55], "own": [14, 15], "line": [14, 15], "multi": [14, 15], "accept": [14, 15], "get_buff": [14, 15], "exist": [14, 15], "throw": [14, 15], "docstr": [14, 15], "get_submodul": [14, 15], "more": [14, 15], "explan": [14, 15], "how": [14, 15], "correctli": [14, 15], "fulli": [14, 15], "qualifi": [14, 15], "look": [14, 15], "referenc": [14, 15], "rais": [14, 15, 33], "attributeerror": [14, 15], "If": [14, 15, 20], "refer": [14, 15], "invalid": [14, 15], "path": [14, 15], "resolv": [14, 15], "someth": [14, 15], "get_extra_st": [14, 15], "state_dict": [14, 15], "correspond": [14, 15], "set_extra_st": [14, 15], "need": [14, 15], "when": [14, 15], "build": [14, 15, 38, 39], "note": [14, 15, 55], "picklabl": [14, 15], "ensur": [14, 15], "work": [14, 15, 55], "serial": [14, 15], "backward": [14, 15], "compat": [14, 15], "guarante": [14, 15], "other": [14, 15], "break": [14, 15], "pickl": [14, 15], "form": [14, 15], "chang": [14, 15], "get_paramet": [14, 15], "For": [14, 15], "let": [14, 15], "sai": [14, 15], "A": [14, 15, 35], "like": [14, 15], "net_b": [14, 15], "net_c": [14, 15], "conv": [14, 15], "conv2d": [14, 15], "16": [14, 15], "33": [14, 15], "kernel_s": [14, 15], "3": [14, 15, 33], "stride": [14, 15], "100": [14, 15], "200": [14, 15], "diagram": [14, 15], "show": [14, 15], "nest": [14, 15], "which": [14, 15], "itself": [14, 15], "would": [14, 15, 20], "runtim": [14, 15], "bound": [14, 15], "degre": [14, 15], "queri": [14, 15], "against": [14, 15], "named_modul": [14, 15], "achiev": [14, 15], "same": [14, 15], "o": [14, 15], "n": [14, 15, 55], "transit": [14, 15], "some": [14, 15], "alwai": [14, 15], "abov": [14, 15], "half": [14, 15], "ipu": [14, 15], "argument": [14, 15, 36], "load_state_dict": [14, 15], "map": [14, 15, 20, 42, 49, 50], "strict": [14, 15], "its": [14, 15, 55], "descend": [14, 15], "must": [14, 15, 43], "exactli": [14, 15], "match": [14, 15], "persist": [14, 15], "strictli": [14, 15], "enforc": [14, 15], "default": [14, 15], "namedtupl": [14, 15], "missing_kei": [14, 15], "unexpected_kei": [14, 15], "field": [14, 15, 33], "list": [14, 15, 20, 44], "miss": [14, 15], "unexpect": [14, 15], "regist": [14, 15], "runtimeerror": [14, 15], "duplic": [14, 15], "onc": [14, 15], "In": [14, 15], "follow": [14, 15, 20], "idx": [14, 15], "enumer": [14, 15], "named_buff": [14, 15], "prefix": [14, 15], "remove_dupl": [14, 15], "tupl": [14, 15, 33], "prepend": [14, 15], "remov": [14, 15], "running_var": [14, 15], "named_children": [14, 15], "conv4": [14, 15], "conv5": [14, 15], "memo": [14, 15], "alreadi": [14, 15], "named_paramet": [14, 15], "param": [14, 15], "register_backward_hook": [14, 15], "hook": [14, 15], "removablehandl": [14, 15], "deprec": [14, 15], "favor": [14, 15], "register_full_backward_hook": [14, 15], "futur": [14, 15], "version": [14, 15], "util": [14, 15], "handl": [14, 15], "register_buff": [14, 15], "consid": [14, 15], "running_mean": [14, 15], "alongsid": [14, 15], "non": [14, 15], "latter": [14, 15], "oper": [14, 15, 20, 21, 36, 42], "ignor": [14, 15], "zero": [14, 15, 46], "num_featur": [14, 15], "register_forward_hook": [14, 15], "with_kwarg": [14, 15], "time": [14, 15], "output": [14, 15], "input": [14, 15], "posit": [14, 15], "keyword": [14, 15], "won": [14, 15], "inplac": [14, 15], "sinc": [14, 15], "signatur": [14, 15], "possibli": [14, 15], "user": [14, 15], "defin": [14, 15, 20, 25, 26, 27, 28], "fire": [14, 15], "global": [14, 15], "register_module_forward_hook": [14, 15], "register_forward_pre_hook": [14, 15], "pre": [14, 15], "invok": [14, 15], "wrap": [14, 15], "unless": [14, 15], "And": [14, 15], "forward_pr": [14, 15], "register_module_forward_pre_hook": [14, 15], "gradient": [14, 15], "respect": [14, 15], "execut": [14, 15], "grad_input": [14, 15], "grad_output": [14, 15], "subsequ": [14, 15], "technic": [14, 15], "reason": [14, 15], "receiv": [14, 15], "view": [14, 15], "similarli": [14, 15], "caller": [14, 15], "allow": [14, 15], "register_module_full_backward_hook": [14, 15], "register_full_backward_pre_hook": [14, 15], "backward_pr": [14, 15], "register_module_full_backward_pre_hook": [14, 15], "register_load_state_dict_post_hook": [14, 15], "post": [14, 15], "incompatible_kei": [14, 15], "consist": [14, 15], "modif": [14, 15], "addit": [14, 15], "thrown": [14, 15], "clear": [14, 15], "out": [14, 15], "avoid": [14, 15], "register_modul": [14, 15], "alia": [14, 15, 33], "register_paramet": [14, 15], "register_state_dict_pre_hook": [14, 15], "These": [14, 15, 20], "keep_var": [14, 15], "process": [14, 15], "made": [14, 15], "requires_grad_": [14, 15], "autograd": [14, 15], "record": [14, 15], "freez": [14, 15], "finetun": [14, 15], "individu": [14, 15], "gan": [14, 15], "within": [14, 15], "share_memori": [14, 15], "share_memory_": [14, 15], "destin": [14, 15], "whole": [14, 15], "averag": [14, 15], "shallow": [14, 15], "order": [14, 15, 20], "howev": [14, 15], "releas": [14, 15], "pleas": [14, 15], "design": [14, 15], "ordereddict": [14, 15], "creat": [14, 15, 33, 44, 55], "compos": [14, 15], "detach": [14, 15], "dtype": [14, 15], "non_block": [14, 15], "memory_format": [14, 15], "channels_last": [14, 15], "Its": [14, 15], "integr": [14, 15], "unchang": [14, 15], "tri": [14, 15], "asynchron": [14, 15], "host": [14, 15], "possibl": [14, 15], "pin": [14, 15], "below": [14, 15, 55], "desir": [14, 15], "whose": [14, 15], "format": [14, 15], "4d": [14, 15], "ignore_w": [14, 15], "determinist": [14, 15], "1913": [14, 15], "3420": [14, 15], "5113": [14, 15], "2325": [14, 15], "float64": [14, 15], "requir": [14, 15], "torch_doctest_cuda1": [14, 15], "gpu1": [14, 15], "1914": [14, 15], "5112": [14, 15], "2324": [14, 15], "float16": [14, 15], "cdoubl": [14, 15], "3741": [14, 15], "j": [14, 15, 20], "2382": [14, 15], "5593": [14, 15], "4443": [14, 15], "complex128": [14, 15], "ones": [14, 15], "6122": [14, 15], "1150": [14, 15], "to_empti": [14, 15], "without": [14, 15], "storag": [14, 15], "dst_type": [14, 15], "xpu": [14, 15], "zero_grad": [14, 15], "set_to_non": [14, 15], "under": [14, 15], "context": [14, 15], "instead": [14, 15], "convolut": 15, "rate": 15, "configur": [16, 17], "rl": [20, 55], "start": [20, 33], "comb": 20, "term": [20, 42], "subtract": 20, "mulitpl": 20, "divid": [20, 25], "pow": 20, "new_stat": 20, "div": 20, "sympi": [20, 41, 47, 49], "onto": 20, "acycl": 20, "dag": 20, "what": 20, "feed": 20, "reduc": 20, "length": [20, 46, 50], "intuit": 20, "num_nod": 20, "num_leav": 20, "find": 20, "termin": 20, "alegra": 20, "a1": 20, "a0": 20, "feature_dict": [20, 42, 49, 50], "featur": [20, 34, 37, 42, 49, 50], "fundament": 20, "symbol": 20, "reset": [20, 35], "state_vec": 20, "np": [20, 32, 50], "ndarrai": [20, 32, 50], "state_graph": 20, "node_label": 20, "label": [20, 36, 38, 39, 40, 43], "render": 20, "human": 20, "misc": 21, "fuinction": 21, "collect": [22, 23, 29, 30, 31], "mixin": 23, "equal": 30, "number_of_nod": 30, "number_of_edg": 30, "embed": [32, 34, 37], "send": 32, "__add__": 33, "__mul__": 33, "count": 33, "occurr": 33, "stop": 33, "9223372036854775807": 33, "first": 33, "valueerror": 33, "present": 33, "n_featur": 34, "adjac": [34, 38, 39], "matrix": [34, 38, 39, 45, 48], "matric": 34, "fix": [34, 37], "helper": 35, "autoincr": 35, "counter": 35, "expr_id": 36, "atom": 36, "onehot": 40, "encod": 40, "expr": [41, 44, 47, 49, 50], "plot": [41, 47, 49], "intern": [41, 47, 49], "don": 41, "meta": 41, "data": 41, "yet": 41, "networkx": [41, 43, 49], "integet": 42, "sub": 42, "parent": 44, "node_list": 44, "link_list": 44, "walk": 44, "tree": 44, "link": 44, "id": 44, "mx": 45, "spars": [45, 48], "arr": 46, "pad": 46, "arrai": [46, 50], "accord": 46, "sparse_mx": 48, "scipi": 48, "state_dim": 50, "4096": 50, "instruct": 55, "assum": 55, "python": 55, "conda": 55, "manag": 55, "home": 55, "dir": 55, "git": 55, "github": 55, "com": 55, "bnb32": 55, "rl_solver": 55, "command": 55, "activ": 55, "cd": 55, "prior": 55, "pip": 55, "sure": 55, "branch": 55, "correct": 55, "main": 55, "dev": 55, "code": 55, "clone": 56, "repo": 56, "recommend": 56, "develop": 56}, "objects": {"": [[0, 0, 0, "-", "examples"], [4, 0, 0, "-", "rl_equation_solver"]], "examples": [[1, 0, 0, "-", "run_linear_solver_dqn"], [2, 0, 0, "-", "run_linear_solver_gcn"], [3, 0, 0, "-", "run_quadratic_solver_dqn"]], "rl_equation_solver": [[5, 0, 0, "-", "agent"], [16, 0, 0, "-", "config"], [18, 0, 0, "-", "environment"], [21, 0, 0, "-", "utilities"], [51, 0, 0, "-", "version"]], "rl_equation_solver.agent": [[6, 0, 0, "-", "base"], [9, 0, 0, "-", "dqn"], [11, 0, 0, "-", "gcn"], [13, 0, 0, "-", "networks"]], "rl_equation_solver.agent.base": [[7, 1, 1, "", "BaseAgent"], [8, 1, 1, "", "ReplayMemory"]], "rl_equation_solver.agent.base.BaseAgent": [[7, 2, 1, "", "append_history"], [7, 2, 1, "", "batch_states"], [7, 2, 1, "", "choose_action"], [7, 2, 1, "", "choose_optimal_action"], [7, 2, 1, "", "choose_random_action"], [7, 2, 1, "", "compute_loss"], [7, 2, 1, "", "convert_state"], [7, 3, 1, "", "device"], [7, 2, 1, "", "diff_loss_reward"], [7, 2, 1, "", "exp_loss_reward"], [7, 2, 1, "", "expression_complexity"], [7, 2, 1, "", "find_reward"], [7, 3, 1, "", "history"], [7, 2, 1, "", "huber_loss"], [7, 2, 1, "", "init_state"], [7, 2, 1, "", "inv_loss_reward"], [7, 2, 1, "", "is_constant_complexity"], [7, 2, 1, "", "l2_loss"], [7, 2, 1, "", "load"], [7, 2, 1, "", "log_info"], [7, 2, 1, "", "optimize_model"], [7, 2, 1, "", "predict"], [7, 2, 1, "", "save"], [7, 2, 1, "", "smooth_l1_loss"], [7, 3, 1, "", "state_string"], [7, 2, 1, "", "step"], [7, 2, 1, "", "sub_loss_reward"], [7, 2, 1, "", "too_long"], [7, 2, 1, "", "train"], [7, 2, 1, "", "update_history"], [7, 2, 1, "", "update_info"]], "rl_equation_solver.agent.base.ReplayMemory": [[8, 2, 1, "", "push"], [8, 2, 1, "", "sample"]], "rl_equation_solver.agent.dqn": [[10, 1, 1, "", "Agent"]], "rl_equation_solver.agent.dqn.Agent": [[10, 2, 1, "", "append_history"], [10, 2, 1, "", "batch_states"], [10, 2, 1, "", "choose_action"], [10, 2, 1, "", "choose_optimal_action"], [10, 2, 1, "", "choose_random_action"], [10, 2, 1, "", "compute_loss"], [10, 2, 1, "", "convert_state"], [10, 3, 1, "", "device"], [10, 2, 1, "", "diff_loss_reward"], [10, 2, 1, "", "exp_loss_reward"], [10, 2, 1, "", "expression_complexity"], [10, 2, 1, "", "find_reward"], [10, 3, 1, "", "history"], [10, 2, 1, "", "huber_loss"], [10, 2, 1, "", "init_state"], [10, 2, 1, "", "inv_loss_reward"], [10, 2, 1, "", "is_constant_complexity"], [10, 2, 1, "", "l2_loss"], [10, 2, 1, "", "load"], [10, 2, 1, "", "log_info"], [10, 2, 1, "", "optimize_model"], [10, 2, 1, "", "predict"], [10, 2, 1, "", "save"], [10, 2, 1, "", "smooth_l1_loss"], [10, 3, 1, "", "state_string"], [10, 2, 1, "", "step"], [10, 2, 1, "", "sub_loss_reward"], [10, 2, 1, "", "too_long"], [10, 2, 1, "", "train"], [10, 2, 1, "", "update_history"], [10, 2, 1, "", "update_info"]], "rl_equation_solver.agent.gcn": [[12, 1, 1, "", "Agent"]], "rl_equation_solver.agent.gcn.Agent": [[12, 2, 1, "", "append_history"], [12, 2, 1, "", "batch_states"], [12, 2, 1, "", "choose_action"], [12, 2, 1, "", "choose_optimal_action"], [12, 2, 1, "", "choose_random_action"], [12, 2, 1, "", "compute_loss"], [12, 2, 1, "", "convert_state"], [12, 3, 1, "", "device"], [12, 2, 1, "", "diff_loss_reward"], [12, 2, 1, "", "exp_loss_reward"], [12, 2, 1, "", "expression_complexity"], [12, 2, 1, "", "find_reward"], [12, 3, 1, "", "history"], [12, 2, 1, "", "huber_loss"], [12, 2, 1, "", "init_state"], [12, 2, 1, "", "inv_loss_reward"], [12, 2, 1, "", "is_constant_complexity"], [12, 2, 1, "", "l2_loss"], [12, 2, 1, "", "load"], [12, 2, 1, "", "log_info"], [12, 2, 1, "", "optimize_model"], [12, 2, 1, "", "predict"], [12, 2, 1, "", "save"], [12, 2, 1, "", "smooth_l1_loss"], [12, 3, 1, "", "state_string"], [12, 2, 1, "", "step"], [12, 2, 1, "", "sub_loss_reward"], [12, 2, 1, "", "too_long"], [12, 2, 1, "", "train"], [12, 2, 1, "", "update_history"], [12, 2, 1, "", "update_info"]], "rl_equation_solver.agent.networks": [[14, 1, 1, "", "DQN"], [15, 1, 1, "", "GCN"]], "rl_equation_solver.agent.networks.DQN": [[14, 2, 1, "", "__call__"], [14, 2, 1, "", "add_module"], [14, 2, 1, "", "apply"], [14, 2, 1, "", "bfloat16"], [14, 2, 1, "", "buffers"], [14, 2, 1, "", "children"], [14, 2, 1, "", "cpu"], [14, 2, 1, "", "cuda"], [14, 2, 1, "", "double"], [14, 2, 1, "", "eval"], [14, 2, 1, "", "extra_repr"], [14, 2, 1, "", "float"], [14, 2, 1, "", "forward"], [14, 2, 1, "", "get_buffer"], [14, 2, 1, "", "get_extra_state"], [14, 2, 1, "", "get_parameter"], [14, 2, 1, "", "get_submodule"], [14, 2, 1, "", "half"], [14, 2, 1, "", "ipu"], [14, 2, 1, "", "load_state_dict"], [14, 2, 1, "", "modules"], [14, 2, 1, "", "named_buffers"], [14, 2, 1, "", "named_children"], [14, 2, 1, "", "named_modules"], [14, 2, 1, "", "named_parameters"], [14, 2, 1, "", "parameters"], [14, 2, 1, "", "register_backward_hook"], [14, 2, 1, "", "register_buffer"], [14, 2, 1, "", "register_forward_hook"], [14, 2, 1, "", "register_forward_pre_hook"], [14, 2, 1, "", "register_full_backward_hook"], [14, 2, 1, "", "register_full_backward_pre_hook"], [14, 2, 1, "", "register_load_state_dict_post_hook"], [14, 2, 1, "", "register_module"], [14, 2, 1, "", "register_parameter"], [14, 2, 1, "", "register_state_dict_pre_hook"], [14, 2, 1, "", "requires_grad_"], [14, 2, 1, "", "set_extra_state"], [14, 2, 1, "", "share_memory"], [14, 2, 1, "", "state_dict"], [14, 2, 1, "", "to"], [14, 2, 1, "", "to_empty"], [14, 2, 1, "", "train"], [14, 2, 1, "", "type"], [14, 2, 1, "", "xpu"], [14, 2, 1, "", "zero_grad"]], "rl_equation_solver.agent.networks.GCN": [[15, 2, 1, "", "__call__"], [15, 2, 1, "", "add_module"], [15, 2, 1, "", "apply"], [15, 2, 1, "", "bfloat16"], [15, 2, 1, "", "buffers"], [15, 2, 1, "", "children"], [15, 2, 1, "", "cpu"], [15, 2, 1, "", "cuda"], [15, 2, 1, "", "double"], [15, 2, 1, "", "eval"], [15, 2, 1, "", "extra_repr"], [15, 2, 1, "", "float"], [15, 2, 1, "", "forward"], [15, 2, 1, "", "get_buffer"], [15, 2, 1, "", "get_extra_state"], [15, 2, 1, "", "get_parameter"], [15, 2, 1, "", "get_submodule"], [15, 2, 1, "", "half"], [15, 2, 1, "", "ipu"], [15, 2, 1, "", "load_state_dict"], [15, 2, 1, "", "modules"], [15, 2, 1, "", "named_buffers"], [15, 2, 1, "", "named_children"], [15, 2, 1, "", "named_modules"], [15, 2, 1, "", "named_parameters"], [15, 2, 1, "", "parameters"], [15, 2, 1, "", "register_backward_hook"], [15, 2, 1, "", "register_buffer"], [15, 2, 1, "", "register_forward_hook"], [15, 2, 1, "", "register_forward_pre_hook"], [15, 2, 1, "", "register_full_backward_hook"], [15, 2, 1, "", "register_full_backward_pre_hook"], [15, 2, 1, "", "register_load_state_dict_post_hook"], [15, 2, 1, "", "register_module"], [15, 2, 1, "", "register_parameter"], [15, 2, 1, "", "register_state_dict_pre_hook"], [15, 2, 1, "", "requires_grad_"], [15, 2, 1, "", "set_extra_state"], [15, 2, 1, "", "share_memory"], [15, 2, 1, "", "state_dict"], [15, 2, 1, "", "to"], [15, 2, 1, "", "to_empty"], [15, 2, 1, "", "train"], [15, 2, 1, "", "type"], [15, 2, 1, "", "xpu"], [15, 2, 1, "", "zero_grad"]], "rl_equation_solver.config": [[17, 1, 1, "", "Config"]], "rl_equation_solver.environment": [[19, 0, 0, "-", "algebraic"]], "rl_equation_solver.environment.algebraic": [[20, 1, 1, "", "Env"]], "rl_equation_solver.environment.algebraic.Env": [[20, 3, 1, "", "actions"], [20, 3, 1, "", "equation"], [20, 3, 1, "", "feature_dict"], [20, 3, 1, "", "node_labels"], [20, 2, 1, "", "render"], [20, 2, 1, "", "reset"], [20, 3, 1, "", "state_graph"], [20, 3, 1, "", "state_vec"], [20, 3, 1, "", "terms"]], "rl_equation_solver.utilities": [[22, 0, 0, "-", "loss"], [24, 0, 0, "-", "operators"], [29, 0, 0, "-", "reward"], [31, 0, 0, "-", "utilities"]], "rl_equation_solver.utilities.loss": [[23, 1, 1, "", "LossMixin"]], "rl_equation_solver.utilities.loss.LossMixin": [[23, 2, 1, "", "huber_loss"], [23, 2, 1, "", "l2_loss"], [23, 2, 1, "", "smooth_l1_loss"]], "rl_equation_solver.utilities.operators": [[25, 4, 1, "", "div"], [26, 4, 1, "", "root"], [27, 4, 1, "", "sqrt"], [28, 4, 1, "", "square"]], "rl_equation_solver.utilities.reward": [[30, 1, 1, "", "RewardMixin"]], "rl_equation_solver.utilities.reward.RewardMixin": [[30, 2, 1, "", "diff_loss_reward"], [30, 2, 1, "", "exp_loss_reward"], [30, 2, 1, "", "expression_complexity"], [30, 2, 1, "", "inv_loss_reward"], [30, 2, 1, "", "sub_loss_reward"]], "rl_equation_solver.utilities.utilities": [[32, 1, 1, "", "Batch"], [33, 1, 1, "", "Experience"], [34, 1, 1, "", "GraphEmbedding"], [35, 1, 1, "", "Id"], [36, 1, 1, "", "Node"], [37, 1, 1, "", "VectorEmbedding"], [38, 4, 1, "", "build_adjacency_matrix"], [39, 4, 1, "", "build_adjacency_matrix_custom"], [40, 4, 1, "", "encode_onehot"], [41, 4, 1, "", "get_json_graph"], [42, 4, 1, "", "get_node_features"], [43, 4, 1, "", "get_node_labels"], [44, 4, 1, "", "graph_walk"], [45, 4, 1, "", "normalize"], [46, 4, 1, "", "pad_array"], [47, 4, 1, "", "plot_state_as_graph"], [48, 4, 1, "", "sparse_mx_to_torch_sparse_tensor"], [49, 4, 1, "", "to_graph"], [50, 4, 1, "", "to_vec"]], "rl_equation_solver.utilities.utilities.Batch": [[32, 2, 1, "", "__call__"]], "rl_equation_solver.utilities.utilities.Experience": [[33, 2, 1, "", "__add__"], [33, 2, 1, "", "__mul__"], [33, 5, 1, "", "action"], [33, 2, 1, "", "count"], [33, 2, 1, "", "index"], [33, 5, 1, "", "next_state"], [33, 5, 1, "", "reward"], [33, 5, 1, "", "state"]], "rl_equation_solver.utilities.utilities.Id": [[35, 2, 1, "", "get"], [35, 2, 1, "", "reset"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "attribute", "Python attribute"]}, "titleterms": {"exampl": [0, 1, 2, 3], "run_linear_solver_dqn": 1, "run_linear_solver_gcn": 2, "run_quadratic_solver_dqn": 3, "rl_equation_solv": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], "agent": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "base": [6, 7, 8], "baseag": 7, "replaymemori": 8, "dqn": [9, 10, 14], "gcn": [11, 12, 15], "network": [13, 14, 15], "config": [16, 17], "environ": [18, 19, 20], "algebra": [19, 20], "env": 20, "util": [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], "loss": [22, 23], "lossmixin": 23, "oper": [24, 25, 26, 27, 28], "div": 25, "root": 26, "sqrt": 27, "squar": 28, "reward": [29, 30], "rewardmixin": 30, "batch": 32, "experi": 33, "graphembed": 34, "id": 35, "node": 36, "vectorembed": 37, "build_adjacency_matrix": 38, "build_adjacency_matrix_custom": 39, "encode_onehot": 40, "get_json_graph": 41, "get_node_featur": 42, "get_node_label": 43, "graph_walk": 44, "normal": 45, "pad_arrai": 46, "plot_state_as_graph": 47, "sparse_mx_to_torch_sparse_tensor": 48, "to_graph": 49, "to_vec": 50, "version": 51, "welcom": 54, "rl": 54, "equat": 54, "solver": 54, "instal": [55, 56], "option": 55, "1": 55, "clone": 55, "repo": 55, "recommend": 55, "develop": 55, "usag": 56}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"examples": [[0, "module-examples"]], "examples.run_linear_solver_dqn": [[1, "module-examples.run_linear_solver_dqn"]], "examples.run_linear_solver_gcn": [[2, "module-examples.run_linear_solver_gcn"]], "examples.run_quadratic_solver_dqn": [[3, "module-examples.run_quadratic_solver_dqn"]], "rl_equation_solver": [[4, "module-rl_equation_solver"]], "rl_equation_solver.agent": [[5, "module-rl_equation_solver.agent"]], "rl_equation_solver.agent.base": [[6, "module-rl_equation_solver.agent.base"]], "rl_equation_solver.agent.base.BaseAgent": [[7, "rl-equation-solver-agent-base-baseagent"]], "rl_equation_solver.agent.base.ReplayMemory": [[8, "rl-equation-solver-agent-base-replaymemory"]], "rl_equation_solver.agent.dqn": [[9, "module-rl_equation_solver.agent.dqn"]], "rl_equation_solver.agent.dqn.Agent": [[10, "rl-equation-solver-agent-dqn-agent"]], "rl_equation_solver.agent.gcn": [[11, "module-rl_equation_solver.agent.gcn"]], "rl_equation_solver.agent.gcn.Agent": [[12, "rl-equation-solver-agent-gcn-agent"]], "rl_equation_solver.agent.networks": [[13, "module-rl_equation_solver.agent.networks"]], "rl_equation_solver.agent.networks.DQN": [[14, "rl-equation-solver-agent-networks-dqn"]], "rl_equation_solver.agent.networks.GCN": [[15, "rl-equation-solver-agent-networks-gcn"]], "rl_equation_solver.config": [[16, "module-rl_equation_solver.config"]], "rl_equation_solver.config.Config": [[17, "rl-equation-solver-config-config"]], "rl_equation_solver.environment": [[18, "module-rl_equation_solver.environment"]], "rl_equation_solver.environment.algebraic": [[19, "module-rl_equation_solver.environment.algebraic"]], "rl_equation_solver.environment.algebraic.Env": [[20, "rl-equation-solver-environment-algebraic-env"]], "rl_equation_solver.utilities": [[21, "module-rl_equation_solver.utilities"]], "rl_equation_solver.utilities.loss": [[22, "module-rl_equation_solver.utilities.loss"]], "rl_equation_solver.utilities.loss.LossMixin": [[23, "rl-equation-solver-utilities-loss-lossmixin"]], "rl_equation_solver.utilities.operators": [[24, "module-rl_equation_solver.utilities.operators"]], "rl_equation_solver.utilities.operators.div": [[25, "rl-equation-solver-utilities-operators-div"]], "rl_equation_solver.utilities.operators.root": [[26, "rl-equation-solver-utilities-operators-root"]], "rl_equation_solver.utilities.operators.sqrt": [[27, "rl-equation-solver-utilities-operators-sqrt"]], "rl_equation_solver.utilities.operators.square": [[28, "rl-equation-solver-utilities-operators-square"]], "rl_equation_solver.utilities.reward": [[29, "module-rl_equation_solver.utilities.reward"]], "rl_equation_solver.utilities.reward.RewardMixin": [[30, "rl-equation-solver-utilities-reward-rewardmixin"]], "rl_equation_solver.utilities.utilities": [[31, "module-rl_equation_solver.utilities.utilities"]], "rl_equation_solver.utilities.utilities.Batch": [[32, "rl-equation-solver-utilities-utilities-batch"]], "rl_equation_solver.utilities.utilities.Experience": [[33, "rl-equation-solver-utilities-utilities-experience"]], "rl_equation_solver.utilities.utilities.GraphEmbedding": [[34, "rl-equation-solver-utilities-utilities-graphembedding"]], "rl_equation_solver.utilities.utilities.Id": [[35, "rl-equation-solver-utilities-utilities-id"]], "rl_equation_solver.utilities.utilities.Node": [[36, "rl-equation-solver-utilities-utilities-node"]], "rl_equation_solver.utilities.utilities.VectorEmbedding": [[37, "rl-equation-solver-utilities-utilities-vectorembedding"]], "rl_equation_solver.utilities.utilities.build_adjacency_matrix": [[38, "rl-equation-solver-utilities-utilities-build-adjacency-matrix"]], "rl_equation_solver.utilities.utilities.build_adjacency_matrix_custom": [[39, "rl-equation-solver-utilities-utilities-build-adjacency-matrix-custom"]], "rl_equation_solver.utilities.utilities.encode_onehot": [[40, "rl-equation-solver-utilities-utilities-encode-onehot"]], "rl_equation_solver.utilities.utilities.get_json_graph": [[41, "rl-equation-solver-utilities-utilities-get-json-graph"]], "rl_equation_solver.utilities.utilities.get_node_features": [[42, "rl-equation-solver-utilities-utilities-get-node-features"]], "rl_equation_solver.utilities.utilities.get_node_labels": [[43, "rl-equation-solver-utilities-utilities-get-node-labels"]], "rl_equation_solver.utilities.utilities.graph_walk": [[44, "rl-equation-solver-utilities-utilities-graph-walk"]], "rl_equation_solver.utilities.utilities.normalize": [[45, "rl-equation-solver-utilities-utilities-normalize"]], "rl_equation_solver.utilities.utilities.pad_array": [[46, "rl-equation-solver-utilities-utilities-pad-array"]], "rl_equation_solver.utilities.utilities.plot_state_as_graph": [[47, "rl-equation-solver-utilities-utilities-plot-state-as-graph"]], "rl_equation_solver.utilities.utilities.sparse_mx_to_torch_sparse_tensor": [[48, "rl-equation-solver-utilities-utilities-sparse-mx-to-torch-sparse-tensor"]], "rl_equation_solver.utilities.utilities.to_graph": [[49, "rl-equation-solver-utilities-utilities-to-graph"]], "rl_equation_solver.utilities.utilities.to_vec": [[50, "rl-equation-solver-utilities-utilities-to-vec"]], "rl_equation_solver.version": [[51, "module-rl_equation_solver.version"]], "Welcome to RL-Equation-Solver!": [[54, "welcome-to-rl-equation-solver"]], "Installation": [[55, "installation"]], "Option 1: Clone repo (recommended for developers)": [[55, "option-1-clone-repo-recommended-for-developers"]], "Installation and Usage": [[56, "installation-and-usage"]]}, "indexentries": {"examples": [[0, "module-examples"]], "module": [[0, "module-examples"], [1, "module-examples.run_linear_solver_dqn"], [2, "module-examples.run_linear_solver_gcn"], [3, "module-examples.run_quadratic_solver_dqn"], [4, "module-rl_equation_solver"], [5, "module-rl_equation_solver.agent"], [6, "module-rl_equation_solver.agent.base"], [9, "module-rl_equation_solver.agent.dqn"], [11, "module-rl_equation_solver.agent.gcn"], [13, "module-rl_equation_solver.agent.networks"], [16, "module-rl_equation_solver.config"], [18, "module-rl_equation_solver.environment"], [19, "module-rl_equation_solver.environment.algebraic"], [21, "module-rl_equation_solver.utilities"], [22, "module-rl_equation_solver.utilities.loss"], [24, "module-rl_equation_solver.utilities.operators"], [29, "module-rl_equation_solver.utilities.reward"], [31, "module-rl_equation_solver.utilities.utilities"], [51, "module-rl_equation_solver.version"]], "examples.run_linear_solver_dqn": [[1, "module-examples.run_linear_solver_dqn"]], "examples.run_linear_solver_gcn": [[2, "module-examples.run_linear_solver_gcn"]], "examples.run_quadratic_solver_dqn": [[3, "module-examples.run_quadratic_solver_dqn"]], "rl_equation_solver": [[4, "module-rl_equation_solver"]], "rl_equation_solver.agent": [[5, "module-rl_equation_solver.agent"]], "rl_equation_solver.agent.base": [[6, "module-rl_equation_solver.agent.base"]], "baseagent (class in rl_equation_solver.agent.base)": [[7, "rl_equation_solver.agent.base.BaseAgent"]], "append_history() (baseagent method)": [[7, "rl_equation_solver.agent.base.BaseAgent.append_history"]], "batch_states() (baseagent method)": [[7, "rl_equation_solver.agent.base.BaseAgent.batch_states"]], "choose_action() (baseagent method)": [[7, "rl_equation_solver.agent.base.BaseAgent.choose_action"]], "choose_optimal_action() (baseagent method)": [[7, "rl_equation_solver.agent.base.BaseAgent.choose_optimal_action"]], "choose_random_action() (baseagent method)": [[7, "rl_equation_solver.agent.base.BaseAgent.choose_random_action"]], "compute_loss() (baseagent method)": [[7, "rl_equation_solver.agent.base.BaseAgent.compute_loss"]], "convert_state() (baseagent method)": [[7, "rl_equation_solver.agent.base.BaseAgent.convert_state"]], "device (baseagent property)": [[7, "rl_equation_solver.agent.base.BaseAgent.device"]], "diff_loss_reward() (baseagent method)": [[7, "rl_equation_solver.agent.base.BaseAgent.diff_loss_reward"]], "exp_loss_reward() (baseagent method)": [[7, "rl_equation_solver.agent.base.BaseAgent.exp_loss_reward"]], "expression_complexity() (baseagent method)": [[7, "rl_equation_solver.agent.base.BaseAgent.expression_complexity"]], "find_reward() (baseagent method)": [[7, "rl_equation_solver.agent.base.BaseAgent.find_reward"]], "history (baseagent property)": [[7, "rl_equation_solver.agent.base.BaseAgent.history"]], "huber_loss() (baseagent method)": [[7, "rl_equation_solver.agent.base.BaseAgent.huber_loss"]], "init_state() (baseagent method)": [[7, "rl_equation_solver.agent.base.BaseAgent.init_state"]], "inv_loss_reward() (baseagent method)": [[7, "rl_equation_solver.agent.base.BaseAgent.inv_loss_reward"]], "is_constant_complexity() (baseagent method)": [[7, "rl_equation_solver.agent.base.BaseAgent.is_constant_complexity"]], "l2_loss() (baseagent method)": [[7, "rl_equation_solver.agent.base.BaseAgent.l2_loss"]], "load() (baseagent class method)": [[7, "rl_equation_solver.agent.base.BaseAgent.load"]], "log_info() (baseagent method)": [[7, "rl_equation_solver.agent.base.BaseAgent.log_info"]], "optimize_model() (baseagent method)": [[7, "rl_equation_solver.agent.base.BaseAgent.optimize_model"]], "predict() (baseagent method)": [[7, "rl_equation_solver.agent.base.BaseAgent.predict"]], "save() (baseagent method)": [[7, "rl_equation_solver.agent.base.BaseAgent.save"]], "smooth_l1_loss() (baseagent method)": [[7, "rl_equation_solver.agent.base.BaseAgent.smooth_l1_loss"]], "state_string (baseagent property)": [[7, "rl_equation_solver.agent.base.BaseAgent.state_string"]], "step() (baseagent method)": [[7, "rl_equation_solver.agent.base.BaseAgent.step"]], "sub_loss_reward() (baseagent method)": [[7, "rl_equation_solver.agent.base.BaseAgent.sub_loss_reward"]], "too_long() (baseagent method)": [[7, "rl_equation_solver.agent.base.BaseAgent.too_long"]], "train() (baseagent method)": [[7, "rl_equation_solver.agent.base.BaseAgent.train"]], "update_history() (baseagent method)": [[7, "rl_equation_solver.agent.base.BaseAgent.update_history"]], "update_info() (baseagent method)": [[7, "rl_equation_solver.agent.base.BaseAgent.update_info"]], "replaymemory (class in rl_equation_solver.agent.base)": [[8, "rl_equation_solver.agent.base.ReplayMemory"]], "push() (replaymemory method)": [[8, "rl_equation_solver.agent.base.ReplayMemory.push"]], "sample() (replaymemory method)": [[8, "rl_equation_solver.agent.base.ReplayMemory.sample"]], "rl_equation_solver.agent.dqn": [[9, "module-rl_equation_solver.agent.dqn"]], "agent (class in rl_equation_solver.agent.dqn)": [[10, "rl_equation_solver.agent.dqn.Agent"]], "append_history() (agent method)": [[10, "rl_equation_solver.agent.dqn.Agent.append_history"], [12, "rl_equation_solver.agent.gcn.Agent.append_history"]], "batch_states() (agent method)": [[10, "rl_equation_solver.agent.dqn.Agent.batch_states"], [12, "rl_equation_solver.agent.gcn.Agent.batch_states"]], "choose_action() (agent method)": [[10, "rl_equation_solver.agent.dqn.Agent.choose_action"], [12, "rl_equation_solver.agent.gcn.Agent.choose_action"]], "choose_optimal_action() (agent method)": [[10, "rl_equation_solver.agent.dqn.Agent.choose_optimal_action"], [12, "rl_equation_solver.agent.gcn.Agent.choose_optimal_action"]], "choose_random_action() (agent method)": [[10, "rl_equation_solver.agent.dqn.Agent.choose_random_action"], [12, "rl_equation_solver.agent.gcn.Agent.choose_random_action"]], "compute_loss() (agent method)": [[10, "rl_equation_solver.agent.dqn.Agent.compute_loss"], [12, "rl_equation_solver.agent.gcn.Agent.compute_loss"]], "convert_state() (agent method)": [[10, "rl_equation_solver.agent.dqn.Agent.convert_state"], [12, "rl_equation_solver.agent.gcn.Agent.convert_state"]], "device (agent property)": [[10, "rl_equation_solver.agent.dqn.Agent.device"], [12, "rl_equation_solver.agent.gcn.Agent.device"]], "diff_loss_reward() (agent method)": [[10, "rl_equation_solver.agent.dqn.Agent.diff_loss_reward"], [12, "rl_equation_solver.agent.gcn.Agent.diff_loss_reward"]], "exp_loss_reward() (agent method)": [[10, "rl_equation_solver.agent.dqn.Agent.exp_loss_reward"], [12, "rl_equation_solver.agent.gcn.Agent.exp_loss_reward"]], "expression_complexity() (agent method)": [[10, "rl_equation_solver.agent.dqn.Agent.expression_complexity"], [12, "rl_equation_solver.agent.gcn.Agent.expression_complexity"]], "find_reward() (agent method)": [[10, "rl_equation_solver.agent.dqn.Agent.find_reward"], [12, "rl_equation_solver.agent.gcn.Agent.find_reward"]], "history (agent property)": [[10, "rl_equation_solver.agent.dqn.Agent.history"], [12, "rl_equation_solver.agent.gcn.Agent.history"]], "huber_loss() (agent method)": [[10, "rl_equation_solver.agent.dqn.Agent.huber_loss"], [12, "rl_equation_solver.agent.gcn.Agent.huber_loss"]], "init_state() (agent method)": [[10, "rl_equation_solver.agent.dqn.Agent.init_state"], [12, "rl_equation_solver.agent.gcn.Agent.init_state"]], "inv_loss_reward() (agent method)": [[10, "rl_equation_solver.agent.dqn.Agent.inv_loss_reward"], [12, "rl_equation_solver.agent.gcn.Agent.inv_loss_reward"]], "is_constant_complexity() (agent method)": [[10, "rl_equation_solver.agent.dqn.Agent.is_constant_complexity"], [12, "rl_equation_solver.agent.gcn.Agent.is_constant_complexity"]], "l2_loss() (agent method)": [[10, "rl_equation_solver.agent.dqn.Agent.l2_loss"], [12, "rl_equation_solver.agent.gcn.Agent.l2_loss"]], "load() (agent class method)": [[10, "rl_equation_solver.agent.dqn.Agent.load"], [12, "rl_equation_solver.agent.gcn.Agent.load"]], "log_info() (agent method)": [[10, "rl_equation_solver.agent.dqn.Agent.log_info"], [12, "rl_equation_solver.agent.gcn.Agent.log_info"]], "optimize_model() (agent method)": [[10, "rl_equation_solver.agent.dqn.Agent.optimize_model"], [12, "rl_equation_solver.agent.gcn.Agent.optimize_model"]], "predict() (agent method)": [[10, "rl_equation_solver.agent.dqn.Agent.predict"], [12, "rl_equation_solver.agent.gcn.Agent.predict"]], "save() (agent method)": [[10, "rl_equation_solver.agent.dqn.Agent.save"], [12, "rl_equation_solver.agent.gcn.Agent.save"]], "smooth_l1_loss() (agent method)": [[10, "rl_equation_solver.agent.dqn.Agent.smooth_l1_loss"], [12, "rl_equation_solver.agent.gcn.Agent.smooth_l1_loss"]], "state_string (agent property)": [[10, "rl_equation_solver.agent.dqn.Agent.state_string"], [12, "rl_equation_solver.agent.gcn.Agent.state_string"]], "step() (agent method)": [[10, "rl_equation_solver.agent.dqn.Agent.step"], [12, "rl_equation_solver.agent.gcn.Agent.step"]], "sub_loss_reward() (agent method)": [[10, "rl_equation_solver.agent.dqn.Agent.sub_loss_reward"], [12, "rl_equation_solver.agent.gcn.Agent.sub_loss_reward"]], "too_long() (agent method)": [[10, "rl_equation_solver.agent.dqn.Agent.too_long"], [12, "rl_equation_solver.agent.gcn.Agent.too_long"]], "train() (agent method)": [[10, "rl_equation_solver.agent.dqn.Agent.train"], [12, "rl_equation_solver.agent.gcn.Agent.train"]], "update_history() (agent method)": [[10, "rl_equation_solver.agent.dqn.Agent.update_history"], [12, "rl_equation_solver.agent.gcn.Agent.update_history"]], "update_info() (agent method)": [[10, "rl_equation_solver.agent.dqn.Agent.update_info"], [12, "rl_equation_solver.agent.gcn.Agent.update_info"]], "rl_equation_solver.agent.gcn": [[11, "module-rl_equation_solver.agent.gcn"]], "agent (class in rl_equation_solver.agent.gcn)": [[12, "rl_equation_solver.agent.gcn.Agent"]], "rl_equation_solver.agent.networks": [[13, "module-rl_equation_solver.agent.networks"]], "dqn (class in rl_equation_solver.agent.networks)": [[14, "rl_equation_solver.agent.networks.DQN"]], "__call__() (dqn method)": [[14, "rl_equation_solver.agent.networks.DQN.__call__"]], "add_module() (dqn method)": [[14, "rl_equation_solver.agent.networks.DQN.add_module"]], "apply() (dqn method)": [[14, "rl_equation_solver.agent.networks.DQN.apply"]], "bfloat16() (dqn method)": [[14, "rl_equation_solver.agent.networks.DQN.bfloat16"]], "buffers() (dqn method)": [[14, "rl_equation_solver.agent.networks.DQN.buffers"]], "children() (dqn method)": [[14, "rl_equation_solver.agent.networks.DQN.children"]], "cpu() (dqn method)": [[14, "rl_equation_solver.agent.networks.DQN.cpu"]], "cuda() (dqn method)": [[14, "rl_equation_solver.agent.networks.DQN.cuda"]], "double() (dqn method)": [[14, "rl_equation_solver.agent.networks.DQN.double"]], "eval() (dqn method)": [[14, "rl_equation_solver.agent.networks.DQN.eval"]], "extra_repr() (dqn method)": [[14, "rl_equation_solver.agent.networks.DQN.extra_repr"]], "float() (dqn method)": [[14, "rl_equation_solver.agent.networks.DQN.float"]], "forward() (dqn method)": [[14, "rl_equation_solver.agent.networks.DQN.forward"]], "get_buffer() (dqn method)": [[14, "rl_equation_solver.agent.networks.DQN.get_buffer"]], "get_extra_state() (dqn method)": [[14, "rl_equation_solver.agent.networks.DQN.get_extra_state"]], "get_parameter() (dqn method)": [[14, "rl_equation_solver.agent.networks.DQN.get_parameter"]], "get_submodule() (dqn method)": [[14, "rl_equation_solver.agent.networks.DQN.get_submodule"]], "half() (dqn method)": [[14, "rl_equation_solver.agent.networks.DQN.half"]], "ipu() (dqn method)": [[14, "rl_equation_solver.agent.networks.DQN.ipu"]], "load_state_dict() (dqn method)": [[14, "rl_equation_solver.agent.networks.DQN.load_state_dict"]], "modules() (dqn method)": [[14, "rl_equation_solver.agent.networks.DQN.modules"]], "named_buffers() (dqn method)": [[14, "rl_equation_solver.agent.networks.DQN.named_buffers"]], "named_children() (dqn method)": [[14, "rl_equation_solver.agent.networks.DQN.named_children"]], "named_modules() (dqn method)": [[14, "rl_equation_solver.agent.networks.DQN.named_modules"]], "named_parameters() (dqn method)": [[14, "rl_equation_solver.agent.networks.DQN.named_parameters"]], "parameters() (dqn method)": [[14, "rl_equation_solver.agent.networks.DQN.parameters"]], "register_backward_hook() (dqn method)": [[14, "rl_equation_solver.agent.networks.DQN.register_backward_hook"]], "register_buffer() (dqn method)": [[14, "rl_equation_solver.agent.networks.DQN.register_buffer"]], "register_forward_hook() (dqn method)": [[14, "rl_equation_solver.agent.networks.DQN.register_forward_hook"]], "register_forward_pre_hook() (dqn method)": [[14, "rl_equation_solver.agent.networks.DQN.register_forward_pre_hook"]], "register_full_backward_hook() (dqn method)": [[14, "rl_equation_solver.agent.networks.DQN.register_full_backward_hook"]], "register_full_backward_pre_hook() (dqn method)": [[14, "rl_equation_solver.agent.networks.DQN.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (dqn method)": [[14, "rl_equation_solver.agent.networks.DQN.register_load_state_dict_post_hook"]], "register_module() (dqn method)": [[14, "rl_equation_solver.agent.networks.DQN.register_module"]], "register_parameter() (dqn method)": [[14, "rl_equation_solver.agent.networks.DQN.register_parameter"]], "register_state_dict_pre_hook() (dqn method)": [[14, "rl_equation_solver.agent.networks.DQN.register_state_dict_pre_hook"]], "requires_grad_() (dqn method)": [[14, "rl_equation_solver.agent.networks.DQN.requires_grad_"]], "set_extra_state() (dqn method)": [[14, "rl_equation_solver.agent.networks.DQN.set_extra_state"]], "share_memory() (dqn method)": [[14, "rl_equation_solver.agent.networks.DQN.share_memory"]], "state_dict() (dqn method)": [[14, "rl_equation_solver.agent.networks.DQN.state_dict"]], "to() (dqn method)": [[14, "rl_equation_solver.agent.networks.DQN.to"]], "to_empty() (dqn method)": [[14, "rl_equation_solver.agent.networks.DQN.to_empty"]], "train() (dqn method)": [[14, "rl_equation_solver.agent.networks.DQN.train"]], "type() (dqn method)": [[14, "rl_equation_solver.agent.networks.DQN.type"]], "xpu() (dqn method)": [[14, "rl_equation_solver.agent.networks.DQN.xpu"]], "zero_grad() (dqn method)": [[14, "rl_equation_solver.agent.networks.DQN.zero_grad"]], "gcn (class in rl_equation_solver.agent.networks)": [[15, "rl_equation_solver.agent.networks.GCN"]], "__call__() (gcn method)": [[15, "rl_equation_solver.agent.networks.GCN.__call__"]], "add_module() (gcn method)": [[15, "rl_equation_solver.agent.networks.GCN.add_module"]], "apply() (gcn method)": [[15, "rl_equation_solver.agent.networks.GCN.apply"]], "bfloat16() (gcn method)": [[15, "rl_equation_solver.agent.networks.GCN.bfloat16"]], "buffers() (gcn method)": [[15, "rl_equation_solver.agent.networks.GCN.buffers"]], "children() (gcn method)": [[15, "rl_equation_solver.agent.networks.GCN.children"]], "cpu() (gcn method)": [[15, "rl_equation_solver.agent.networks.GCN.cpu"]], "cuda() (gcn method)": [[15, "rl_equation_solver.agent.networks.GCN.cuda"]], "double() (gcn method)": [[15, "rl_equation_solver.agent.networks.GCN.double"]], "eval() (gcn method)": [[15, "rl_equation_solver.agent.networks.GCN.eval"]], "extra_repr() (gcn method)": [[15, "rl_equation_solver.agent.networks.GCN.extra_repr"]], "float() (gcn method)": [[15, "rl_equation_solver.agent.networks.GCN.float"]], "forward() (gcn method)": [[15, "rl_equation_solver.agent.networks.GCN.forward"]], "get_buffer() (gcn method)": [[15, "rl_equation_solver.agent.networks.GCN.get_buffer"]], "get_extra_state() (gcn method)": [[15, "rl_equation_solver.agent.networks.GCN.get_extra_state"]], "get_parameter() (gcn method)": [[15, "rl_equation_solver.agent.networks.GCN.get_parameter"]], "get_submodule() (gcn method)": [[15, "rl_equation_solver.agent.networks.GCN.get_submodule"]], "half() (gcn method)": [[15, "rl_equation_solver.agent.networks.GCN.half"]], "ipu() (gcn method)": [[15, "rl_equation_solver.agent.networks.GCN.ipu"]], "load_state_dict() (gcn method)": [[15, "rl_equation_solver.agent.networks.GCN.load_state_dict"]], "modules() (gcn method)": [[15, "rl_equation_solver.agent.networks.GCN.modules"]], "named_buffers() (gcn method)": [[15, "rl_equation_solver.agent.networks.GCN.named_buffers"]], "named_children() (gcn method)": [[15, "rl_equation_solver.agent.networks.GCN.named_children"]], "named_modules() (gcn method)": [[15, "rl_equation_solver.agent.networks.GCN.named_modules"]], "named_parameters() (gcn method)": [[15, "rl_equation_solver.agent.networks.GCN.named_parameters"]], "parameters() (gcn method)": [[15, "rl_equation_solver.agent.networks.GCN.parameters"]], "register_backward_hook() (gcn method)": [[15, "rl_equation_solver.agent.networks.GCN.register_backward_hook"]], "register_buffer() (gcn method)": [[15, "rl_equation_solver.agent.networks.GCN.register_buffer"]], "register_forward_hook() (gcn method)": [[15, "rl_equation_solver.agent.networks.GCN.register_forward_hook"]], "register_forward_pre_hook() (gcn method)": [[15, "rl_equation_solver.agent.networks.GCN.register_forward_pre_hook"]], "register_full_backward_hook() (gcn method)": [[15, "rl_equation_solver.agent.networks.GCN.register_full_backward_hook"]], "register_full_backward_pre_hook() (gcn method)": [[15, "rl_equation_solver.agent.networks.GCN.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (gcn method)": [[15, "rl_equation_solver.agent.networks.GCN.register_load_state_dict_post_hook"]], "register_module() (gcn method)": [[15, "rl_equation_solver.agent.networks.GCN.register_module"]], "register_parameter() (gcn method)": [[15, "rl_equation_solver.agent.networks.GCN.register_parameter"]], "register_state_dict_pre_hook() (gcn method)": [[15, "rl_equation_solver.agent.networks.GCN.register_state_dict_pre_hook"]], "requires_grad_() (gcn method)": [[15, "rl_equation_solver.agent.networks.GCN.requires_grad_"]], "set_extra_state() (gcn method)": [[15, "rl_equation_solver.agent.networks.GCN.set_extra_state"]], "share_memory() (gcn method)": [[15, "rl_equation_solver.agent.networks.GCN.share_memory"]], "state_dict() (gcn method)": [[15, "rl_equation_solver.agent.networks.GCN.state_dict"]], "to() (gcn method)": [[15, "rl_equation_solver.agent.networks.GCN.to"]], "to_empty() (gcn method)": [[15, "rl_equation_solver.agent.networks.GCN.to_empty"]], "train() (gcn method)": [[15, "rl_equation_solver.agent.networks.GCN.train"]], "type() (gcn method)": [[15, "rl_equation_solver.agent.networks.GCN.type"]], "xpu() (gcn method)": [[15, "rl_equation_solver.agent.networks.GCN.xpu"]], "zero_grad() (gcn method)": [[15, "rl_equation_solver.agent.networks.GCN.zero_grad"]], "rl_equation_solver.config": [[16, "module-rl_equation_solver.config"]], "config (class in rl_equation_solver.config)": [[17, "rl_equation_solver.config.Config"]], "rl_equation_solver.environment": [[18, "module-rl_equation_solver.environment"]], "rl_equation_solver.environment.algebraic": [[19, "module-rl_equation_solver.environment.algebraic"]], "env (class in rl_equation_solver.environment.algebraic)": [[20, "rl_equation_solver.environment.algebraic.Env"]], "actions (env property)": [[20, "rl_equation_solver.environment.algebraic.Env.actions"]], "equation (env property)": [[20, "rl_equation_solver.environment.algebraic.Env.equation"]], "feature_dict (env property)": [[20, "rl_equation_solver.environment.algebraic.Env.feature_dict"]], "node_labels (env property)": [[20, "rl_equation_solver.environment.algebraic.Env.node_labels"]], "render() (env method)": [[20, "rl_equation_solver.environment.algebraic.Env.render"]], "reset() (env method)": [[20, "rl_equation_solver.environment.algebraic.Env.reset"]], "state_graph (env property)": [[20, "rl_equation_solver.environment.algebraic.Env.state_graph"]], "state_vec (env property)": [[20, "rl_equation_solver.environment.algebraic.Env.state_vec"]], "terms (env property)": [[20, "rl_equation_solver.environment.algebraic.Env.terms"]], "rl_equation_solver.utilities": [[21, "module-rl_equation_solver.utilities"]], "rl_equation_solver.utilities.loss": [[22, "module-rl_equation_solver.utilities.loss"]], "lossmixin (class in rl_equation_solver.utilities.loss)": [[23, "rl_equation_solver.utilities.loss.LossMixin"]], "huber_loss() (lossmixin method)": [[23, "rl_equation_solver.utilities.loss.LossMixin.huber_loss"]], "l2_loss() (lossmixin method)": [[23, "rl_equation_solver.utilities.loss.LossMixin.l2_loss"]], "smooth_l1_loss() (lossmixin method)": [[23, "rl_equation_solver.utilities.loss.LossMixin.smooth_l1_loss"]], "rl_equation_solver.utilities.operators": [[24, "module-rl_equation_solver.utilities.operators"]], "div() (in module rl_equation_solver.utilities.operators)": [[25, "rl_equation_solver.utilities.operators.div"]], "root() (in module rl_equation_solver.utilities.operators)": [[26, "rl_equation_solver.utilities.operators.root"]], "sqrt() (in module rl_equation_solver.utilities.operators)": [[27, "rl_equation_solver.utilities.operators.sqrt"]], "square() (in module rl_equation_solver.utilities.operators)": [[28, "rl_equation_solver.utilities.operators.square"]], "rl_equation_solver.utilities.reward": [[29, "module-rl_equation_solver.utilities.reward"]], "rewardmixin (class in rl_equation_solver.utilities.reward)": [[30, "rl_equation_solver.utilities.reward.RewardMixin"]], "diff_loss_reward() (rewardmixin method)": [[30, "rl_equation_solver.utilities.reward.RewardMixin.diff_loss_reward"]], "exp_loss_reward() (rewardmixin method)": [[30, "rl_equation_solver.utilities.reward.RewardMixin.exp_loss_reward"]], "expression_complexity() (rewardmixin method)": [[30, "rl_equation_solver.utilities.reward.RewardMixin.expression_complexity"]], "inv_loss_reward() (rewardmixin method)": [[30, "rl_equation_solver.utilities.reward.RewardMixin.inv_loss_reward"]], "sub_loss_reward() (rewardmixin method)": [[30, "rl_equation_solver.utilities.reward.RewardMixin.sub_loss_reward"]], "rl_equation_solver.utilities.utilities": [[31, "module-rl_equation_solver.utilities.utilities"]], "batch (class in rl_equation_solver.utilities.utilities)": [[32, "rl_equation_solver.utilities.utilities.Batch"]], "__call__() (batch class method)": [[32, "rl_equation_solver.utilities.utilities.Batch.__call__"]], "experience (class in rl_equation_solver.utilities.utilities)": [[33, "rl_equation_solver.utilities.utilities.Experience"]], "__add__() (experience method)": [[33, "rl_equation_solver.utilities.utilities.Experience.__add__"]], "__mul__() (experience method)": [[33, "rl_equation_solver.utilities.utilities.Experience.__mul__"]], "action (experience attribute)": [[33, "rl_equation_solver.utilities.utilities.Experience.action"]], "count() (experience method)": [[33, "rl_equation_solver.utilities.utilities.Experience.count"]], "index() (experience method)": [[33, "rl_equation_solver.utilities.utilities.Experience.index"]], "next_state (experience attribute)": [[33, "rl_equation_solver.utilities.utilities.Experience.next_state"]], "reward (experience attribute)": [[33, "rl_equation_solver.utilities.utilities.Experience.reward"]], "state (experience attribute)": [[33, "rl_equation_solver.utilities.utilities.Experience.state"]], "graphembedding (class in rl_equation_solver.utilities.utilities)": [[34, "rl_equation_solver.utilities.utilities.GraphEmbedding"]], "id (class in rl_equation_solver.utilities.utilities)": [[35, "rl_equation_solver.utilities.utilities.Id"]], "get() (id class method)": [[35, "rl_equation_solver.utilities.utilities.Id.get"]], "reset() (id class method)": [[35, "rl_equation_solver.utilities.utilities.Id.reset"]], "node (class in rl_equation_solver.utilities.utilities)": [[36, "rl_equation_solver.utilities.utilities.Node"]], "vectorembedding (class in rl_equation_solver.utilities.utilities)": [[37, "rl_equation_solver.utilities.utilities.VectorEmbedding"]], "build_adjacency_matrix() (in module rl_equation_solver.utilities.utilities)": [[38, "rl_equation_solver.utilities.utilities.build_adjacency_matrix"]], "build_adjacency_matrix_custom() (in module rl_equation_solver.utilities.utilities)": [[39, "rl_equation_solver.utilities.utilities.build_adjacency_matrix_custom"]], "encode_onehot() (in module rl_equation_solver.utilities.utilities)": [[40, "rl_equation_solver.utilities.utilities.encode_onehot"]], "get_json_graph() (in module rl_equation_solver.utilities.utilities)": [[41, "rl_equation_solver.utilities.utilities.get_json_graph"]], "get_node_features() (in module rl_equation_solver.utilities.utilities)": [[42, "rl_equation_solver.utilities.utilities.get_node_features"]], "get_node_labels() (in module rl_equation_solver.utilities.utilities)": [[43, "rl_equation_solver.utilities.utilities.get_node_labels"]], "graph_walk() (in module rl_equation_solver.utilities.utilities)": [[44, "rl_equation_solver.utilities.utilities.graph_walk"]], "normalize() (in module rl_equation_solver.utilities.utilities)": [[45, "rl_equation_solver.utilities.utilities.normalize"]], "pad_array() (in module rl_equation_solver.utilities.utilities)": [[46, "rl_equation_solver.utilities.utilities.pad_array"]], "plot_state_as_graph() (in module rl_equation_solver.utilities.utilities)": [[47, "rl_equation_solver.utilities.utilities.plot_state_as_graph"]], "sparse_mx_to_torch_sparse_tensor() (in module rl_equation_solver.utilities.utilities)": [[48, "rl_equation_solver.utilities.utilities.sparse_mx_to_torch_sparse_tensor"]], "to_graph() (in module rl_equation_solver.utilities.utilities)": [[49, "rl_equation_solver.utilities.utilities.to_graph"]], "to_vec() (in module rl_equation_solver.utilities.utilities)": [[50, "rl_equation_solver.utilities.utilities.to_vec"]], "rl_equation_solver.version": [[51, "module-rl_equation_solver.version"]]}})