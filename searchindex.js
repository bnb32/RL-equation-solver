Search.setIndex({"docnames": ["_autosummary/rl_equation_solver", "_autosummary/rl_equation_solver.agent", "_autosummary/rl_equation_solver.agent.base", "_autosummary/rl_equation_solver.agent.base.BaseAgent", "_autosummary/rl_equation_solver.agent.dqn", "_autosummary/rl_equation_solver.agent.dqn.Agent", "_autosummary/rl_equation_solver.agent.gcn", "_autosummary/rl_equation_solver.agent.gcn.Agent", "_autosummary/rl_equation_solver.agent.lstm", "_autosummary/rl_equation_solver.agent.lstm.Agent", "_autosummary/rl_equation_solver.agent.networks", "_autosummary/rl_equation_solver.agent.networks.DQN", "_autosummary/rl_equation_solver.agent.networks.GCN", "_autosummary/rl_equation_solver.agent.networks.LSTM", "_autosummary/rl_equation_solver.config", "_autosummary/rl_equation_solver.environment", "_autosummary/rl_equation_solver.environment.algebraic", "_autosummary/rl_equation_solver.environment.algebraic.Env", "_autosummary/rl_equation_solver.utilities", "_autosummary/rl_equation_solver.utilities.history", "_autosummary/rl_equation_solver.utilities.history.HistoryMixin", "_autosummary/rl_equation_solver.utilities.loss", "_autosummary/rl_equation_solver.utilities.loss.LossMixin", "_autosummary/rl_equation_solver.utilities.operators", "_autosummary/rl_equation_solver.utilities.operators.div", "_autosummary/rl_equation_solver.utilities.operators.fraction", "_autosummary/rl_equation_solver.utilities.operators.root", "_autosummary/rl_equation_solver.utilities.operators.sqrt", "_autosummary/rl_equation_solver.utilities.operators.square", "_autosummary/rl_equation_solver.utilities.reward", "_autosummary/rl_equation_solver.utilities.reward.RewardMixin", "_autosummary/rl_equation_solver.utilities.utilities", "_autosummary/rl_equation_solver.utilities.utilities.Batch", "_autosummary/rl_equation_solver.utilities.utilities.Experience", "_autosummary/rl_equation_solver.utilities.utilities.GraphEmbedding", "_autosummary/rl_equation_solver.utilities.utilities.Id", "_autosummary/rl_equation_solver.utilities.utilities.Node", "_autosummary/rl_equation_solver.utilities.utilities.ReplayMemory", "_autosummary/rl_equation_solver.utilities.utilities.VectorEmbedding", "_autosummary/rl_equation_solver.utilities.utilities.build_adjacency_matrix", "_autosummary/rl_equation_solver.utilities.utilities.build_adjacency_matrix_custom", "_autosummary/rl_equation_solver.utilities.utilities.encode_onehot", "_autosummary/rl_equation_solver.utilities.utilities.get_json_graph", "_autosummary/rl_equation_solver.utilities.utilities.get_node_features", "_autosummary/rl_equation_solver.utilities.utilities.get_node_labels", "_autosummary/rl_equation_solver.utilities.utilities.graph_walk", "_autosummary/rl_equation_solver.utilities.utilities.normalize", "_autosummary/rl_equation_solver.utilities.utilities.pad_array", "_autosummary/rl_equation_solver.utilities.utilities.parse_node_features", "_autosummary/rl_equation_solver.utilities.utilities.plot_state_as_graph", "_autosummary/rl_equation_solver.utilities.utilities.sparse_mx_to_torch_sparse_tensor", "_autosummary/rl_equation_solver.utilities.utilities.to_graph", "_autosummary/rl_equation_solver.utilities.utilities.to_vec", "_autosummary/rl_equation_solver.version", "api", "index", "misc/_autosummary/examples", "misc/_autosummary/examples.run_linear_solver_dqn", "misc/_autosummary/examples.run_linear_solver_gcn", "misc/_autosummary/examples.run_quadratic_solver_dqn", "misc/examples", "misc/examples_usage", "misc/installation", "misc/installation_usage"], "filenames": ["_autosummary/rl_equation_solver.rst", "_autosummary/rl_equation_solver.agent.rst", "_autosummary/rl_equation_solver.agent.base.rst", "_autosummary/rl_equation_solver.agent.base.BaseAgent.rst", "_autosummary/rl_equation_solver.agent.dqn.rst", "_autosummary/rl_equation_solver.agent.dqn.Agent.rst", "_autosummary/rl_equation_solver.agent.gcn.rst", "_autosummary/rl_equation_solver.agent.gcn.Agent.rst", "_autosummary/rl_equation_solver.agent.lstm.rst", "_autosummary/rl_equation_solver.agent.lstm.Agent.rst", "_autosummary/rl_equation_solver.agent.networks.rst", "_autosummary/rl_equation_solver.agent.networks.DQN.rst", "_autosummary/rl_equation_solver.agent.networks.GCN.rst", "_autosummary/rl_equation_solver.agent.networks.LSTM.rst", "_autosummary/rl_equation_solver.config.rst", "_autosummary/rl_equation_solver.environment.rst", "_autosummary/rl_equation_solver.environment.algebraic.rst", "_autosummary/rl_equation_solver.environment.algebraic.Env.rst", "_autosummary/rl_equation_solver.utilities.rst", "_autosummary/rl_equation_solver.utilities.history.rst", "_autosummary/rl_equation_solver.utilities.history.HistoryMixin.rst", "_autosummary/rl_equation_solver.utilities.loss.rst", "_autosummary/rl_equation_solver.utilities.loss.LossMixin.rst", "_autosummary/rl_equation_solver.utilities.operators.rst", "_autosummary/rl_equation_solver.utilities.operators.div.rst", "_autosummary/rl_equation_solver.utilities.operators.fraction.rst", "_autosummary/rl_equation_solver.utilities.operators.root.rst", "_autosummary/rl_equation_solver.utilities.operators.sqrt.rst", "_autosummary/rl_equation_solver.utilities.operators.square.rst", "_autosummary/rl_equation_solver.utilities.reward.rst", "_autosummary/rl_equation_solver.utilities.reward.RewardMixin.rst", "_autosummary/rl_equation_solver.utilities.utilities.rst", "_autosummary/rl_equation_solver.utilities.utilities.Batch.rst", "_autosummary/rl_equation_solver.utilities.utilities.Experience.rst", "_autosummary/rl_equation_solver.utilities.utilities.GraphEmbedding.rst", "_autosummary/rl_equation_solver.utilities.utilities.Id.rst", "_autosummary/rl_equation_solver.utilities.utilities.Node.rst", "_autosummary/rl_equation_solver.utilities.utilities.ReplayMemory.rst", "_autosummary/rl_equation_solver.utilities.utilities.VectorEmbedding.rst", "_autosummary/rl_equation_solver.utilities.utilities.build_adjacency_matrix.rst", "_autosummary/rl_equation_solver.utilities.utilities.build_adjacency_matrix_custom.rst", "_autosummary/rl_equation_solver.utilities.utilities.encode_onehot.rst", "_autosummary/rl_equation_solver.utilities.utilities.get_json_graph.rst", "_autosummary/rl_equation_solver.utilities.utilities.get_node_features.rst", "_autosummary/rl_equation_solver.utilities.utilities.get_node_labels.rst", "_autosummary/rl_equation_solver.utilities.utilities.graph_walk.rst", "_autosummary/rl_equation_solver.utilities.utilities.normalize.rst", "_autosummary/rl_equation_solver.utilities.utilities.pad_array.rst", "_autosummary/rl_equation_solver.utilities.utilities.parse_node_features.rst", "_autosummary/rl_equation_solver.utilities.utilities.plot_state_as_graph.rst", "_autosummary/rl_equation_solver.utilities.utilities.sparse_mx_to_torch_sparse_tensor.rst", "_autosummary/rl_equation_solver.utilities.utilities.to_graph.rst", "_autosummary/rl_equation_solver.utilities.utilities.to_vec.rst", "_autosummary/rl_equation_solver.version.rst", "api.rst", "index.rst", "misc/_autosummary/examples.rst", "misc/_autosummary/examples.run_linear_solver_dqn.rst", "misc/_autosummary/examples.run_linear_solver_gcn.rst", "misc/_autosummary/examples.run_quadratic_solver_dqn.rst", "misc/examples.rst", "misc/examples_usage.rst", "misc/installation.rst", "misc/installation_usage.rst"], "titles": ["rl_equation_solver", "rl_equation_solver.agent", "rl_equation_solver.agent.base", "rl_equation_solver.agent.base.BaseAgent", "rl_equation_solver.agent.dqn", "rl_equation_solver.agent.dqn.Agent", "rl_equation_solver.agent.gcn", "rl_equation_solver.agent.gcn.Agent", "rl_equation_solver.agent.lstm", "rl_equation_solver.agent.lstm.Agent", "rl_equation_solver.agent.networks", "rl_equation_solver.agent.networks.DQN", "rl_equation_solver.agent.networks.GCN", "rl_equation_solver.agent.networks.LSTM", "rl_equation_solver.config", "rl_equation_solver.environment", "rl_equation_solver.environment.algebraic", "rl_equation_solver.environment.algebraic.Env", "rl_equation_solver.utilities", "rl_equation_solver.utilities.history", "rl_equation_solver.utilities.history.HistoryMixin", "rl_equation_solver.utilities.loss", "rl_equation_solver.utilities.loss.LossMixin", "rl_equation_solver.utilities.operators", "rl_equation_solver.utilities.operators.div", "rl_equation_solver.utilities.operators.fraction", "rl_equation_solver.utilities.operators.root", "rl_equation_solver.utilities.operators.sqrt", "rl_equation_solver.utilities.operators.square", "rl_equation_solver.utilities.reward", "rl_equation_solver.utilities.reward.RewardMixin", "rl_equation_solver.utilities.utilities", "rl_equation_solver.utilities.utilities.Batch", "rl_equation_solver.utilities.utilities.Experience", "rl_equation_solver.utilities.utilities.GraphEmbedding", "rl_equation_solver.utilities.utilities.Id", "rl_equation_solver.utilities.utilities.Node", "rl_equation_solver.utilities.utilities.ReplayMemory", "rl_equation_solver.utilities.utilities.VectorEmbedding", "rl_equation_solver.utilities.utilities.build_adjacency_matrix", "rl_equation_solver.utilities.utilities.build_adjacency_matrix_custom", "rl_equation_solver.utilities.utilities.encode_onehot", "rl_equation_solver.utilities.utilities.get_json_graph", "rl_equation_solver.utilities.utilities.get_node_features", "rl_equation_solver.utilities.utilities.get_node_labels", "rl_equation_solver.utilities.utilities.graph_walk", "rl_equation_solver.utilities.utilities.normalize", "rl_equation_solver.utilities.utilities.pad_array", "rl_equation_solver.utilities.utilities.parse_node_features", "rl_equation_solver.utilities.utilities.plot_state_as_graph", "rl_equation_solver.utilities.utilities.sparse_mx_to_torch_sparse_tensor", "rl_equation_solver.utilities.utilities.to_graph", "rl_equation_solver.utilities.utilities.to_vec", "rl_equation_solver.version", "&lt;no title&gt;", "Welcome to RL-Equation-Solver!", "examples", "examples.run_linear_solver_dqn", "examples.run_linear_solver_gcn", "examples.run_quadratic_solver_dqn", "&lt;no title&gt;", "Examples and Usage", "Installation", "Installation and Usage"], "terms": {"reinforc": 0, "learn": [0, 3, 5, 7, 9, 22], "base": [0, 4, 5, 6, 7, 8, 9, 11, 12, 13, 17, 20, 22, 30, 32, 33, 34, 35, 36, 37, 38, 57, 58, 59], "equat": [0, 3, 5, 7, 9, 16, 17, 62], "solver": [0, 3, 5, 7, 9, 16, 57, 58, 59, 62], "packag": [0, 53, 62], "modul": [1, 2, 11, 12, 13, 15, 18], "dqn": [2, 3, 8, 57, 59], "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 19, 20, 21, 22, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38], "env": [3, 5, 7, 9, 11, 12, 13, 62], "config": [3, 5, 7, 9, 17], "none": [3, 5, 7, 9, 11, 12, 13, 17, 44], "devic": [3, 5, 7, 9, 11, 12, 13, 32, 34, 38], "cpu": [3, 5, 7, 9, 11, 12, 13], "sourc": [3, 5, 7, 9, 11, 12, 13, 17, 20, 22, 24, 25, 26, 27, 28, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 62], "lossmixin": 3, "target": [3, 5, 7, 9, 11, 12, 13, 45], "polici": [3, 4, 5, 6, 7, 8, 9, 10], "network": [3, 5, 7, 9], "paramet": [3, 5, 7, 9, 11, 12, 13, 17, 30, 42, 44, 45, 51, 52], "object": [3, 5, 7, 9, 11, 12, 13, 20, 22, 30, 32, 34, 35, 36, 37, 38, 44], "environ": [3, 5, 7, 9, 11, 12, 62], "instanc": [3, 5, 7, 9, 11, 12, 13, 17, 32, 33], "e": [3, 5, 7, 9, 11, 12, 13, 17, 43, 62], "g": [3, 5, 7, 9, 11, 12, 13, 17, 43], "env_linear_equ": [3, 5, 7, 9], "dict": [3, 5, 7, 9, 11, 12, 13, 17, 51, 52], "model": [3, 5, 7, 9, 11, 12, 13, 14, 17], "configur": [3, 5, 7, 9, 14, 17], "If": [3, 5, 7, 9, 11, 12, 13, 17], "default": [3, 5, 7, 9, 11, 12, 13, 14, 17], "us": [3, 5, 7, 9, 11, 12, 13, 17, 22, 31, 62], "str": [3, 5, 7, 9, 11, 12, 13, 17, 30, 42, 45, 51, 52], "torch": [3, 5, 7, 9, 11, 12, 13, 50, 62], "cuda": [3, 5, 7, 9, 11, 12, 13, 62], "0": [3, 5, 7, 9, 11, 12, 13, 17, 22, 33, 43, 57, 58, 59, 62], "method": [3, 5, 7, 9, 11, 12, 13, 17, 20, 22, 30, 32, 33, 34, 35, 36, 37, 38], "attribut": [3, 5, 7, 9, 11, 12, 13, 17, 20, 33, 35, 44], "init_config": [3, 5, 7, 9, 17], "initi": [3, 5, 7, 9, 11, 12, 13, 17, 32], "update_config": [3, 5, 7, 9, 17], "updat": [3, 5, 7, 9, 11, 12, 13, 17, 20], "abstract": [3, 30], "init_st": [3, 5, 7, 9, 17], "state": [3, 5, 7, 9, 11, 12, 13, 17, 30, 32, 33, 42, 45, 51, 52], "from": [3, 5, 7, 9, 11, 12, 13, 17, 25, 39, 40, 43, 44, 62], "thi": [3, 5, 7, 9, 11, 12, 13, 17, 30], "can": [3, 11, 12, 13, 17, 32, 43], "vector": [3, 5, 9, 17, 32, 38, 52], "represent": [3, 5, 7, 9, 11, 12, 13, 17, 30, 42, 49, 51, 52], "graph": [3, 7, 12, 17, 30, 32, 34, 39, 40, 42, 43, 44, 49, 51], "convert_st": [3, 5, 7, 9], "state_str": [3, 5, 7, 9, 17], "convert": [3, 5, 7, 9, 11, 12, 13, 50], "string": [3, 5, 7, 9, 11, 12, 13, 17, 30, 42, 45, 48, 51, 52], "appropri": 3, "batch_stat": [3, 5, 7, 9], "batch": [3, 5, 7, 9, 37], "init_optim": [3, 5, 7, 9], "optim": [3, 5, 7, 9, 11, 12, 13, 22], "properti": [3, 5, 7, 9, 17, 20, 22], "steps_don": [3, 5, 7, 9], "get": [3, 5, 7, 9, 17, 20, 30, 35, 43, 44, 52], "total": [3, 5, 7, 9], "number": [3, 5, 7, 9, 11, 12, 13, 17, 33, 35], "step": [3, 5, 7, 9, 17, 20], "done": [3, 5, 7, 9, 17], "across": [3, 5, 7, 9], "all": [3, 5, 7, 9, 11, 12, 13], "episod": [3, 5, 7, 9, 17, 20], "current_episod": [3, 5, 7, 9], "current": [3, 5, 7, 9, 11, 12, 13, 17], "train": [3, 5, 7, 9, 11, 12, 13, 17, 20, 37], "fals": [3, 5, 7, 9, 11, 12, 13], "take": [3, 5, 7, 9, 17], "next": [3, 5, 7, 9], "int": [3, 5, 7, 9, 11, 12, 13, 17, 30, 52], "whether": [3, 5, 7, 9, 11, 12, 13, 17], "i": [3, 5, 7, 9, 11, 12, 13, 17, 22, 30, 33, 62], "part": [3, 5, 7, 9, 11, 12, 13], "infer": [3, 5, 7, 9], "determin": [3, 5, 7, 9], "histori": [3, 5, 7, 9, 17], "return": [3, 5, 7, 9, 11, 12, 13, 17, 25, 30, 33, 42, 51, 52], "action": [3, 5, 7, 9, 11, 12, 17, 33], "tensor": [3, 5, 7, 9, 11, 12, 13, 17, 50], "taken": [3, 5, 7, 9, 17], "repres": [3, 5, 7, 9, 17, 36], "pytorch": [3, 5, 7, 9, 17, 62], "next_stat": [3, 5, 7, 9, 33], "after": [3, 5, 7, 9, 11, 12, 13, 17], "graphembed": [3, 5, 7, 9, 17, 32], "bool": [3, 5, 7, 9, 11, 12, 13, 17], "solut": [3, 5, 7, 9, 17], "ha": [3, 5, 7, 9, 11, 12, 13], "been": [3, 5, 7, 9], "found": [3, 5, 7, 9, 11, 12, 13], "size": [3, 5, 7, 9, 11, 12, 13, 34, 38], "condit": [3, 5, 7, 9], "have": [3, 5, 7, 9, 11, 12, 13, 62], "exceed": [3, 5, 7, 9], "info": [3, 5, 7, 9, 17, 20], "dictionari": [3, 5, 7, 9, 11, 12, 13, 17, 43, 45, 51, 52], "loss": [3, 5, 7, 9, 17, 18, 30], "reward": [3, 5, 7, 9, 17, 18, 33], "inform": [3, 5, 7, 9, 11, 12, 13, 17], "choose_optimal_act": [3, 5, 7, 9], "choos": [3, 5, 7, 9, 17], "max": [3, 5, 7, 9, 52], "expect": [3, 5, 7, 9, 11, 12, 13], "max_a": [3, 5, 7, 9], "q": [3, 5, 7, 9], "": [3, 5, 7, 9, 11, 12, 13, 17], "1": [3, 5, 7, 9, 11, 12, 13, 17, 22, 33, 43, 63], "largest": [3, 5, 7, 9], "column": [3, 5, 7, 9], "valu": [3, 5, 7, 9, 11, 12, 13, 17, 20, 33, 51, 52], "each": [3, 5, 7, 9, 11, 12, 13, 17, 20], "row": [3, 5, 7, 9, 46], "second": [3, 5, 7, 9], "result": [3, 5, 7, 9, 11, 12, 13, 17], "index": [3, 5, 7, 9, 17, 33, 44], "where": [3, 5, 7, 9], "element": [3, 5, 7, 9], "wa": [3, 5, 7, 9], "so": [3, 5, 7, 9, 11, 12, 13, 17], "we": [3, 5, 7, 9, 11, 12, 13, 17, 43], "pick": [3, 5, 7, 9], "larger": [3, 5, 7, 9], "choose_act": [3, 5, 7, 9], "given": [3, 5, 7, 9, 11, 12, 13, 17, 30, 32, 47, 52], "either": [3, 5, 7, 9, 11, 12, 13, 32], "random": [3, 5, 7, 9, 17, 37], "depend": [3, 5, 7, 9, 62], "compute_loss": [3, 5, 7, 9], "state_action_valu": [3, 5, 7, 9], "expected_state_action_valu": [3, 5, 7, 9], "comput": [3, 5, 7, 9, 11, 12, 13, 17], "huber": [3, 5, 7, 9, 22], "compute_batch_loss": [3, 5, 7, 9], "store": [3, 5, 7, 9, 11, 12, 13, 37, 44], "memori": [3, 5, 7, 9, 11, 12, 13, 37], "update_info": [3, 5, 7, 9], "kei": [3, 5, 7, 9, 11, 12, 13, 17, 20, 45], "choose_random_act": [3, 5, 7, 9], "rather": [3, 5, 7, 9], "than": [3, 5, 7, 9], "optimize_model": [3, 5, 7, 9], "perform": [3, 5, 7, 9, 11, 12, 13, 17], "one": [3, 5, 7, 9], "compute_expected_q": [3, 5, 7, 9], "next_state_valu": [3, 5, 7, 9], "compute_v": [3, 5, 7, 9], "v": [3, 5, 7, 9], "s_": [3, 5, 7, 9], "t": [3, 5, 7, 9, 11, 12, 13, 42], "non_final_next_st": [3, 5, 7, 9], "ar": [3, 5, 7, 9, 11, 12, 13, 17, 62], "older": [3, 5, 7, 9], "target_net": [3, 5, 7, 9], "select": [3, 5, 7, 9, 37], "best": [3, 5, 7, 9], "compute_q": [3, 5, 7, 9], "s_t": [3, 5, 7, 9], "These": [3, 5, 7, 9, 11, 12, 13, 17], "which": [3, 5, 7, 9, 11, 12, 13], "would": [3, 5, 7, 9, 11, 12, 13, 17], "ve": [3, 5, 7, 9], "accord": [3, 5, 7, 9, 47], "policy_net": [3, 5, 7, 9], "num_episod": [3, 5, 7, 9], "eval": [3, 5, 7, 9, 11, 12, 13], "The": [3, 5, 7, 9, 11, 12, 13, 17, 62], "soft": [3, 5, 7, 9], "weight": [3, 5, 7, 9, 11, 12, 13], "tau": [3, 5, 7, 9], "text": [3, 5, 7, 9, 22], "policy_net_state_dict": [3, 5, 7, 9], "target_net_state_dict": [3, 5, 7, 9], "help": [3, 5, 7, 9, 11, 12, 13], "make": [3, 5, 7, 9, 11, 12, 13, 42, 49, 51, 62], "converg": [3, 5, 7, 9], "run": [3, 5, 7, 9, 11, 12, 13, 57, 58, 59, 62], "mode": [3, 5, 7, 9, 11, 12, 13, 17], "without": [3, 5, 7, 9, 11, 12, 13], "terminate_msg": [3, 5, 7, 9], "log": [3, 5, 7, 9], "messag": [3, 5, 7, 9], "about": [3, 5, 7, 9], "termin": [3, 5, 7, 9, 17], "total_reward": [3, 5, 7, 9], "list": [3, 5, 7, 9, 11, 12, 13, 17, 45], "update_network": [3, 5, 7, 9], "theta": [3, 5, 7, 9], "leftarrow": [3, 5, 7, 9], "policy_network": [3, 5, 7, 9, 17, 20], "state_dict": [3, 5, 7, 9, 11, 12, 13], "target_network": [3, 5, 7, 9], "load_state_dict": [3, 5, 7, 9, 11, 12, 13], "load": [3, 5, 7, 9], "predict": [3, 5, 7, 9], "is_constant_complex": [3, 5, 7, 9], "check": [3, 5, 7, 9, 11, 12, 13, 17], "constant": [3, 5, 7, 9], "over": [3, 5, 7, 9, 11, 12, 13, 17, 20, 45], "long": [3, 5, 7, 9], "save": [3, 5, 7, 9, 11, 12, 13, 37], "output_fil": [3, 5, 7, 9], "classmethod": [3, 5, 7, 9, 32, 35], "model_fil": [3, 5, 7, 9], "huber_loss": [3, 5, 7, 9, 22], "x": [3, 5, 7, 9, 11, 13, 17, 22], "y": [3, 5, 7, 9, 22], "delta": [3, 5, 7, 9, 22], "also": [3, 5, 7, 9, 11, 12, 13, 22], "known": [3, 5, 7, 9, 22], "smooth": [3, 5, 7, 9, 22], "mean": [3, 5, 7, 9, 22], "absolut": [3, 5, 7, 9, 22], "error": [3, 5, 7, 9, 11, 12, 13, 22], "function": [3, 5, 7, 9, 11, 12, 13, 18, 21, 22, 23, 26, 27, 28, 29, 30, 31], "variou": [3, 5, 7, 9, 22], "machin": [3, 5, 7, 9, 22, 62], "problem": [3, 5, 7, 9, 17, 22], "particularli": [3, 5, 7, 9, 22], "regress": [3, 5, 7, 9, 22], "task": [3, 5, 7, 9, 22], "It": [3, 5, 7, 9, 11, 12, 13, 22], "combin": [3, 5, 7, 9, 22], "both": [3, 5, 7, 9, 11, 12, 13, 22], "squar": [3, 5, 7, 9, 22], "mse": [3, 5, 7, 9, 22], "mae": [3, 5, 7, 9, 22], "provid": [3, 5, 7, 9, 11, 12, 13, 22], "balanc": [3, 5, 7, 9, 22], "between": [3, 5, 7, 9, 11, 12, 13, 17, 22, 30], "two": [3, 5, 7, 9, 11, 12, 13, 22], "l": [3, 5, 7, 9, 11, 12, 13, 22], "f": [3, 5, 7, 9, 22, 62], "begin": [3, 5, 7, 9, 22], "case": [3, 5, 7, 9, 22], "split": [3, 5, 7, 9, 22], "frac": [3, 5, 7, 9, 22], "2": [3, 5, 7, 9, 11, 12, 13, 17, 22, 33, 59, 62], "leq": [3, 5, 7, 9, 22], "otherwis": [3, 5, 7, 9, 11, 12, 13, 22], "end": [3, 5, 7, 9, 11, 12, 13, 22], "l2_loss": [3, 5, 7, 9, 22], "l2": [3, 5, 7, 9, 22], "smooth_l1_loss": [3, 5, 7, 9, 22], "l1": [3, 5, 7, 9, 22], "get_env": [3, 5, 7, 9], "set_env": [3, 5, 7, 9], "set": [3, 5, 7, 9, 11, 12, 13, 17, 32], "baseag": [5, 7, 9], "n_observ": [11, 12, 13, 34, 38], "n_action": [11, 12, 13], "hidden_s": [11, 12, 13], "simpl": [11, 12, 13], "mlp": 11, "observ": [11, 12], "discret": [11, 12], "avail": [11, 12], "hidden": [11, 12], "layer": [11, 12], "forward": [11, 12, 13], "pass": [11, 12, 13], "__call__": [11, 12, 13, 32], "arg": [11, 12, 13, 37], "kwarg": [11, 12, 13], "call": [11, 12, 13], "self": [11, 12, 13, 33], "add_modul": [11, 12, 13], "name": [11, 12, 13, 44, 45, 51, 52], "add": [11, 12, 13, 17, 42, 43], "child": [11, 12, 13], "access": [11, 12, 13], "an": [11, 12, 13, 17], "ad": [11, 12, 13], "appli": [11, 12, 13], "fn": [11, 12, 13], "callabl": [11, 12, 13], "recurs": [11, 12, 13, 45], "everi": [11, 12, 13], "submodul": [11, 12, 13], "children": [11, 12, 13], "well": [11, 12, 13], "typic": [11, 12, 13], "includ": [11, 12, 13, 44, 48], "see": [11, 12, 13], "nn": [11, 12, 13], "init": [11, 12, 13], "doc": [11, 12, 13], "exampl": [11, 12, 13, 17], "no_grad": [11, 12, 13], "def": [11, 12, 13], "init_weight": [11, 12, 13], "m": [11, 12, 13], "print": [11, 12, 13, 17], "type": [11, 12, 13], "linear": [11, 12, 13, 16, 57, 58], "fill_": [11, 12, 13], "net": [11, 12, 13], "sequenti": [11, 12, 13], "in_featur": [11, 12, 13], "out_featur": [11, 12, 13], "bia": [11, 12, 13], "true": [11, 12, 13], "contain": [11, 12, 13], "requires_grad": [11, 12, 13], "bfloat16": [11, 12, 13], "cast": [11, 12, 13], "float": [11, 12, 13, 17, 25], "point": [11, 12, 13], "buffer": [11, 12, 13, 37], "datatyp": [11, 12, 13], "modifi": [11, 12, 13], "place": [11, 12, 13], "iter": [11, 12, 13], "yield": [11, 12, 13], "onli": [11, 12, 13], "direct": [11, 12, 13, 17], "member": [11, 12, 13], "xdoctest": [11, 12, 13], "skip": [11, 12, 13], "undefin": [11, 12, 13], "var": [11, 12, 13], "buf": [11, 12, 13], "20l": [11, 12, 13], "1l": [11, 12, 13], "5l": [11, 12, 13], "immedi": [11, 12, 13], "move": [11, 12, 13], "gpu": [11, 12, 13], "associ": [11, 12, 13], "differ": [11, 12, 13, 17, 30], "should": [11, 12, 13], "befor": [11, 12, 13], "construct": [11, 12, 13, 17], "live": [11, 12, 13], "while": [11, 12, 13], "being": [11, 12, 13], "option": [11, 12, 13, 17, 63], "specifi": [11, 12, 13], "copi": [11, 12, 13], "doubl": [11, 12, 13], "evalu": [11, 12, 13], "ani": [11, 12, 13, 17], "effect": [11, 12, 13], "certain": [11, 12, 13], "document": [11, 12, 13], "particular": [11, 12, 13], "detail": [11, 12, 13], "behavior": [11, 12, 13], "thei": [11, 12, 13], "affect": [11, 12, 13], "dropout": [11, 12, 13], "batchnorm": [11, 12, 13], "etc": [11, 12, 13], "equival": [11, 12, 13], "local": [11, 12, 13], "disabl": [11, 12, 13], "grad": [11, 12, 13], "comparison": [11, 12, 13], "sever": [11, 12, 13], "similar": [11, 12, 13], "mechan": [11, 12, 13], "mai": [11, 12, 13], "confus": [11, 12, 13], "extra_repr": [11, 12, 13], "extra": [11, 12, 13], "To": [11, 12, 13, 62], "custom": [11, 12, 13, 23], "you": [11, 12, 13, 62], "re": [11, 12, 13], "implement": [11, 12, 13], "your": [11, 12, 13, 17, 62], "own": [11, 12, 13], "singl": [11, 12, 13, 36], "line": [11, 12, 13], "multi": [11, 12, 13], "accept": [11, 12, 13], "get_buff": [11, 12, 13], "exist": [11, 12, 13], "throw": [11, 12, 13], "docstr": [11, 12, 13], "get_submodul": [11, 12, 13], "more": [11, 12, 13], "explan": [11, 12, 13], "how": [11, 12, 13], "correctli": [11, 12, 13], "fulli": [11, 12, 13], "qualifi": [11, 12, 13], "look": [11, 12, 13], "referenc": [11, 12, 13], "rais": [11, 12, 13, 33], "attributeerror": [11, 12, 13], "refer": [11, 12, 13], "invalid": [11, 12, 13], "path": [11, 12, 13], "resolv": [11, 12, 13], "someth": [11, 12, 13], "get_extra_st": [11, 12, 13], "correspond": [11, 12, 13, 17], "set_extra_st": [11, 12, 13], "need": [11, 12, 13], "when": [11, 12, 13, 17], "build": [11, 12, 13, 39, 40], "note": [11, 12, 13, 62], "picklabl": [11, 12, 13], "ensur": [11, 12, 13], "work": [11, 12, 13, 62], "serial": [11, 12, 13], "backward": [11, 12, 13], "compat": [11, 12, 13], "guarante": [11, 12, 13], "other": [11, 12, 13], "break": [11, 12, 13], "pickl": [11, 12, 13], "form": [11, 12, 13], "chang": [11, 12, 13], "get_paramet": [11, 12, 13], "For": [11, 12, 13], "let": [11, 12, 13], "sai": [11, 12, 13], "A": [11, 12, 13, 35], "like": [11, 12, 13], "net_b": [11, 12, 13], "net_c": [11, 12, 13], "conv": [11, 12, 13], "conv2d": [11, 12, 13], "16": [11, 12, 13], "33": [11, 12, 13], "kernel_s": [11, 12, 13], "3": [11, 12, 13, 33], "stride": [11, 12, 13], "100": [11, 12, 13], "200": [11, 12, 13], "diagram": [11, 12, 13], "show": [11, 12, 13], "nest": [11, 12, 13], "itself": [11, 12, 13], "runtim": [11, 12, 13], "bound": [11, 12, 13], "degre": [11, 12, 13], "queri": [11, 12, 13], "against": [11, 12, 13], "named_modul": [11, 12, 13], "achiev": [11, 12, 13], "same": [11, 12, 13], "o": [11, 12, 13], "n": [11, 12, 13, 62], "transit": [11, 12, 13], "some": [11, 12, 13], "alwai": [11, 12, 13], "abov": [11, 12, 13], "half": [11, 12, 13], "ipu": [11, 12, 13], "argument": [11, 12, 13, 36], "map": [11, 12, 13, 17, 43, 51, 52], "strict": [11, 12, 13], "its": [11, 12, 13, 62], "descend": [11, 12, 13], "must": [11, 12, 13, 44], "exactli": [11, 12, 13], "match": [11, 12, 13], "persist": [11, 12, 13], "strictli": [11, 12, 13], "enforc": [11, 12, 13], "namedtupl": [11, 12, 13], "missing_kei": [11, 12, 13], "unexpected_kei": [11, 12, 13], "field": [11, 12, 13, 33], "miss": [11, 12, 13], "unexpect": [11, 12, 13], "regist": [11, 12, 13], "runtimeerror": [11, 12, 13], "duplic": [11, 12, 13], "onc": [11, 12, 13], "In": [11, 12, 13], "follow": [11, 12, 13, 17, 62], "idx": [11, 12, 13], "enumer": [11, 12, 13], "named_buff": [11, 12, 13], "prefix": [11, 12, 13], "remove_dupl": [11, 12, 13], "tupl": [11, 12, 13, 33], "prepend": [11, 12, 13], "remov": [11, 12, 13], "running_var": [11, 12, 13], "named_children": [11, 12, 13], "conv4": [11, 12, 13], "conv5": [11, 12, 13], "memo": [11, 12, 13], "alreadi": [11, 12, 13], "named_paramet": [11, 12, 13], "param": [11, 12, 13], "register_backward_hook": [11, 12, 13], "hook": [11, 12, 13], "removablehandl": [11, 12, 13], "deprec": [11, 12, 13], "favor": [11, 12, 13], "register_full_backward_hook": [11, 12, 13], "futur": [11, 12, 13], "version": [11, 12, 13], "util": [11, 12, 13], "handl": [11, 12, 13], "register_buff": [11, 12, 13], "consid": [11, 12, 13], "running_mean": [11, 12, 13], "alongsid": [11, 12, 13], "non": [11, 12, 13, 17], "latter": [11, 12, 13], "oper": [11, 12, 13, 17, 18, 36, 43], "ignor": [11, 12, 13], "zero": [11, 12, 13, 47], "num_featur": [11, 12, 13], "register_forward_hook": [11, 12, 13], "with_kwarg": [11, 12, 13], "time": [11, 12, 13], "output": [11, 12, 13], "input": [11, 12, 13], "posit": [11, 12, 13], "keyword": [11, 12, 13], "won": [11, 12, 13], "inplac": [11, 12, 13], "sinc": [11, 12, 13], "signatur": [11, 12, 13], "possibli": [11, 12, 13], "user": [11, 12, 13], "defin": [11, 12, 13, 17, 24, 26, 27, 28], "fire": [11, 12, 13], "global": [11, 12, 13], "register_module_forward_hook": [11, 12, 13], "register_forward_pre_hook": [11, 12, 13], "pre": [11, 12, 13], "invok": [11, 12, 13], "wrap": [11, 12, 13, 17], "unless": [11, 12, 13], "And": [11, 12, 13], "forward_pr": [11, 12, 13], "register_module_forward_pre_hook": [11, 12, 13], "gradient": [11, 12, 13], "respect": [11, 12, 13], "execut": [11, 12, 13], "grad_input": [11, 12, 13], "grad_output": [11, 12, 13], "new": [11, 12, 13, 17, 30, 33], "subsequ": [11, 12, 13], "entri": [11, 12, 13, 17, 20], "technic": [11, 12, 13], "reason": [11, 12, 13], "receiv": [11, 12, 13], "view": [11, 12, 13], "similarli": [11, 12, 13], "caller": [11, 12, 13], "allow": [11, 12, 13], "register_module_full_backward_hook": [11, 12, 13], "register_full_backward_pre_hook": [11, 12, 13], "backward_pr": [11, 12, 13], "register_module_full_backward_pre_hook": [11, 12, 13], "register_load_state_dict_post_hook": [11, 12, 13], "post": [11, 12, 13], "incompatible_kei": [11, 12, 13], "consist": [11, 12, 13], "modif": [11, 12, 13], "addit": [11, 12, 13, 17], "thrown": [11, 12, 13], "clear": [11, 12, 13, 17, 20], "out": [11, 12, 13], "avoid": [11, 12, 13], "register_modul": [11, 12, 13], "alia": [11, 12, 13, 33], "register_paramet": [11, 12, 13], "register_state_dict_pre_hook": [11, 12, 13], "keep_var": [11, 12, 13], "process": [11, 12, 13], "made": [11, 12, 13], "requires_grad_": [11, 12, 13], "autograd": [11, 12, 13], "record": [11, 12, 13], "freez": [11, 12, 13], "finetun": [11, 12, 13], "individu": [11, 12, 13], "gan": [11, 12, 13], "within": [11, 12, 13], "share_memori": [11, 12, 13], "share_memory_": [11, 12, 13], "destin": [11, 12, 13], "whole": [11, 12, 13], "averag": [11, 12, 13, 17, 20], "shallow": [11, 12, 13], "order": [11, 12, 13, 17], "howev": [11, 12, 13], "releas": [11, 12, 13], "pleas": [11, 12, 13], "design": [11, 12, 13], "ordereddict": [11, 12, 13], "creat": [11, 12, 13, 33, 45, 62], "compos": [11, 12, 13], "detach": [11, 12, 13], "dtype": [11, 12, 13], "non_block": [11, 12, 13], "memory_format": [11, 12, 13], "channels_last": [11, 12, 13], "Its": [11, 12, 13], "complex": [11, 12, 13, 17, 30], "integr": [11, 12, 13], "unchang": [11, 12, 13], "tri": [11, 12, 13], "asynchron": [11, 12, 13], "host": [11, 12, 13], "possibl": [11, 12, 13], "pin": [11, 12, 13], "below": [11, 12, 13, 62], "desir": [11, 12, 13], "whose": [11, 12, 13], "format": [11, 12, 13], "4d": [11, 12, 13], "ignore_w": [11, 12, 13], "determinist": [11, 12, 13], "1913": [11, 12, 13], "3420": [11, 12, 13], "5113": [11, 12, 13], "2325": [11, 12, 13], "float64": [11, 12, 13], "requir": [11, 12, 13], "torch_doctest_cuda1": [11, 12, 13], "gpu1": [11, 12, 13], "1914": [11, 12, 13], "5112": [11, 12, 13], "2324": [11, 12, 13], "float16": [11, 12, 13], "cdoubl": [11, 12, 13], "3741": [11, 12, 13], "j": [11, 12, 13, 17], "2382": [11, 12, 13], "5593": [11, 12, 13], "4443": [11, 12, 13], "complex128": [11, 12, 13], "ones": [11, 12, 13], "6122": [11, 12, 13], "1150": [11, 12, 13], "to_empti": [11, 12, 13], "storag": [11, 12, 13], "dst_type": [11, 12, 13], "xpu": [11, 12, 13], "zero_grad": [11, 12, 13], "set_to_non": [11, 12, 13], "under": [11, 12, 13], "context": [11, 12, 13], "instead": [11, 12, 13], "convolut": 12, "rate": 12, "n_featur": [13, 34], "intern": [13, 17, 42, 49, 51], "share": 13, "scriptmodul": 13, "rewardmixin": 17, "historymixin": 17, "solv": [17, 57, 58, 59], "rl": [17, 62], "b": [17, 24, 26, 27, 28, 57, 58], "agent": [17, 57, 58, 59], "start": [17, 33], "comb": 17, "term": [17, 43], "subtract": 17, "mulitpl": 17, "divid": [17, 24], "pow": 17, "new_stat": 17, "div": 17, "sympi": [17, 42, 49, 51], "onto": 17, "acycl": 17, "dag": 17, "what": 17, "feed": 17, "reduc": 17, "length": [17, 47, 52], "intuit": 17, "num_nod": 17, "num_leav": 17, "find": 17, "alegra": 17, "a0": 17, "a1": 17, "guess": 17, "symbol": 17, "constant_term": 17, "valid": 17, "feature_dict": [17, 43, 48, 51, 52], "featur": [17, 34, 38, 43, 48, 51, 52], "fundament": 17, "state_vec": 17, "state_graph": 17, "node_label": 17, "node": [17, 34, 35, 43, 44, 45, 48], "label": [17, 36, 39, 40, 41, 44], "reset": [17, 35], "seed": 17, "np": [17, 32, 52], "ndarrai": [17, 32, 52], "find_reward": 17, "state_old": [17, 30], "state_new": [17, 30], "last": [17, 30], "too_long": 17, "dimens": 17, "too": 17, "larg": 17, "append_histori": [17, 20], "append": [17, 20], "latest": [17, 20], "avg_histori": [17, 20], "close": 17, "overrid": 17, "subclass": 17, "necessari": 17, "cleanup": 17, "automat": 17, "themselv": 17, "garbag": 17, "collect": [17, 20, 21, 22, 29, 30, 31], "program": 17, "exit": 17, "diff_loss_reward": [17, 30], "decreas": [17, 30], "exp_loss_reward": [17, 30], "expression_complex": [17, 30], "express": [17, 30, 42, 45, 49, 51, 52], "edg": [17, 39, 40], "plu": 17, "expression_tre": 17, "approxim": 17, "inv_loss_reward": [17, 30], "log_info": [17, 20], "write": [17, 20], "logger": [17, 20], "np_random": 17, "gener": 17, "_np_random": 17, "initialis": 17, "reset_histori": [17, 20], "sub_loss_reward": [17, 30], "unwrap": 17, "gym": 17, "update_histori": [17, 20], "_make_physical_act": 17, "step_numb": 17, "far": 17, "maximum": 17, "reach": 17, "render": 17, "human": 17, "misc": 18, "fuinction": 18, "mixin": [19, 22], "equal": 30, "number_of_nod": 30, "number_of_edg": 30, "embed": [32, 34, 38], "send": 32, "__add__": 33, "__mul__": 33, "count": 33, "occurr": 33, "stop": 33, "9223372036854775807": 33, "first": 33, "valueerror": 33, "present": 33, "matrix": [34, 39, 40, 46, 50], "fix": [34, 38], "helper": 35, "autoincr": 35, "counter": 35, "expr_id": 36, "atom": 36, "capac": 37, "experi": 37, "replai": 37, "push": 37, "sampl": 37, "batch_siz": 37, "adjac": [39, 40], "onehot": 41, "encod": 41, "expr": [42, 45, 49, 51, 52], "plot": [42, 49, 51], "don": 42, "meta": 42, "data": 42, "yet": 42, "networkx": [42, 44, 51], "integet": 43, "sub": 43, "parent": 45, "node_list": 45, "link_list": 45, "walk": 45, "tree": 45, "link": 45, "id": 45, "mx": 46, "spars": [46, 50], "arr": 47, "pad": 47, "arrai": [47, 52], "node_featur": 48, "pars": 48, "fraction": 48, "sparse_mx": 50, "scipi": 50, "state_dim": 52, "4096": 52, "ax": [57, 58, 59], "gcn": 58, "quadrat": 59, "bx": 59, "c": 59, "run_linear_solver_dqn": 61, "run_linear_solver_gcn": 61, "run_quadratic_solver_dqn": 61, "instruct": 62, "assum": 62, "python": 62, "conda": 62, "manag": 62, "home": 62, "dir": 62, "git": 62, "github": 62, "com": 62, "bnb32": 62, "rl_solver": 62, "command": 62, "activ": 62, "cd": 62, "prior": 62, "pip": 62, "sure": 62, "branch": 62, "correct": 62, "main": 62, "dev": 62, "code": 62, "cu117": 62, "torchvis": 62, "15": 62, "torchaudio": 62, "http": 62, "download": 62, "org": 62, "whl": 62, "torch_stabl": 62, "html": 62, "clone": 63, "repo": 63, "recommend": 63, "develop": 63}, "objects": {"": [[56, 0, 0, "-", "examples"], [0, 0, 0, "-", "rl_equation_solver"]], "examples": [[57, 0, 0, "-", "run_linear_solver_dqn"], [58, 0, 0, "-", "run_linear_solver_gcn"], [59, 0, 0, "-", "run_quadratic_solver_dqn"]], "rl_equation_solver": [[1, 0, 0, "-", "agent"], [14, 0, 0, "-", "config"], [15, 0, 0, "-", "environment"], [18, 0, 0, "-", "utilities"], [53, 0, 0, "-", "version"]], "rl_equation_solver.agent": [[2, 0, 0, "-", "base"], [4, 0, 0, "-", "dqn"], [6, 0, 0, "-", "gcn"], [8, 0, 0, "-", "lstm"], [10, 0, 0, "-", "networks"]], "rl_equation_solver.agent.base": [[3, 1, 1, "", "BaseAgent"]], "rl_equation_solver.agent.base.BaseAgent": [[3, 2, 1, "", "batch_states"], [3, 2, 1, "", "choose_action"], [3, 2, 1, "", "choose_optimal_action"], [3, 2, 1, "", "choose_random_action"], [3, 2, 1, "", "compute_Q"], [3, 2, 1, "", "compute_V"], [3, 2, 1, "", "compute_batch_loss"], [3, 2, 1, "", "compute_expected_Q"], [3, 2, 1, "", "compute_loss"], [3, 2, 1, "", "convert_state"], [3, 3, 1, "", "current_episode"], [3, 3, 1, "", "device"], [3, 2, 1, "", "get_env"], [3, 3, 1, "", "history"], [3, 2, 1, "", "huber_loss"], [3, 3, 1, "", "info"], [3, 2, 1, "", "init_config"], [3, 2, 1, "", "init_optimizer"], [3, 2, 1, "", "init_state"], [3, 2, 1, "", "is_constant_complexity"], [3, 2, 1, "", "l2_loss"], [3, 2, 1, "", "load"], [3, 2, 1, "", "optimize_model"], [3, 2, 1, "", "predict"], [3, 2, 1, "", "save"], [3, 2, 1, "", "set_env"], [3, 2, 1, "", "smooth_l1_loss"], [3, 3, 1, "", "state_string"], [3, 2, 1, "", "step"], [3, 3, 1, "", "steps_done"], [3, 2, 1, "", "terminate_msg"], [3, 2, 1, "", "train"], [3, 2, 1, "", "update_config"], [3, 2, 1, "", "update_info"], [3, 2, 1, "", "update_networks"]], "rl_equation_solver.agent.dqn": [[5, 1, 1, "", "Agent"]], "rl_equation_solver.agent.dqn.Agent": [[5, 2, 1, "", "batch_states"], [5, 2, 1, "", "choose_action"], [5, 2, 1, "", "choose_optimal_action"], [5, 2, 1, "", "choose_random_action"], [5, 2, 1, "", "compute_Q"], [5, 2, 1, "", "compute_V"], [5, 2, 1, "", "compute_batch_loss"], [5, 2, 1, "", "compute_expected_Q"], [5, 2, 1, "", "compute_loss"], [5, 2, 1, "", "convert_state"], [5, 3, 1, "", "current_episode"], [5, 3, 1, "", "device"], [5, 2, 1, "", "get_env"], [5, 3, 1, "", "history"], [5, 2, 1, "", "huber_loss"], [5, 3, 1, "", "info"], [5, 2, 1, "", "init_config"], [5, 2, 1, "", "init_optimizer"], [5, 2, 1, "", "init_state"], [5, 2, 1, "", "is_constant_complexity"], [5, 2, 1, "", "l2_loss"], [5, 2, 1, "", "load"], [5, 2, 1, "", "optimize_model"], [5, 2, 1, "", "predict"], [5, 2, 1, "", "save"], [5, 2, 1, "", "set_env"], [5, 2, 1, "", "smooth_l1_loss"], [5, 3, 1, "", "state_string"], [5, 2, 1, "", "step"], [5, 3, 1, "", "steps_done"], [5, 2, 1, "", "terminate_msg"], [5, 2, 1, "", "train"], [5, 2, 1, "", "update_config"], [5, 2, 1, "", "update_info"], [5, 2, 1, "", "update_networks"]], "rl_equation_solver.agent.gcn": [[7, 1, 1, "", "Agent"]], "rl_equation_solver.agent.gcn.Agent": [[7, 2, 1, "", "batch_states"], [7, 2, 1, "", "choose_action"], [7, 2, 1, "", "choose_optimal_action"], [7, 2, 1, "", "choose_random_action"], [7, 2, 1, "", "compute_Q"], [7, 2, 1, "", "compute_V"], [7, 2, 1, "", "compute_batch_loss"], [7, 2, 1, "", "compute_expected_Q"], [7, 2, 1, "", "compute_loss"], [7, 2, 1, "", "convert_state"], [7, 3, 1, "", "current_episode"], [7, 3, 1, "", "device"], [7, 2, 1, "", "get_env"], [7, 3, 1, "", "history"], [7, 2, 1, "", "huber_loss"], [7, 3, 1, "", "info"], [7, 2, 1, "", "init_config"], [7, 2, 1, "", "init_optimizer"], [7, 2, 1, "", "init_state"], [7, 2, 1, "", "is_constant_complexity"], [7, 2, 1, "", "l2_loss"], [7, 2, 1, "", "load"], [7, 2, 1, "", "optimize_model"], [7, 2, 1, "", "predict"], [7, 2, 1, "", "save"], [7, 2, 1, "", "set_env"], [7, 2, 1, "", "smooth_l1_loss"], [7, 3, 1, "", "state_string"], [7, 2, 1, "", "step"], [7, 3, 1, "", "steps_done"], [7, 2, 1, "", "terminate_msg"], [7, 2, 1, "", "train"], [7, 2, 1, "", "update_config"], [7, 2, 1, "", "update_info"], [7, 2, 1, "", "update_networks"]], "rl_equation_solver.agent.lstm": [[9, 1, 1, "", "Agent"]], "rl_equation_solver.agent.lstm.Agent": [[9, 2, 1, "", "batch_states"], [9, 2, 1, "", "choose_action"], [9, 2, 1, "", "choose_optimal_action"], [9, 2, 1, "", "choose_random_action"], [9, 2, 1, "", "compute_Q"], [9, 2, 1, "", "compute_V"], [9, 2, 1, "", "compute_batch_loss"], [9, 2, 1, "", "compute_expected_Q"], [9, 2, 1, "", "compute_loss"], [9, 2, 1, "", "convert_state"], [9, 3, 1, "", "current_episode"], [9, 3, 1, "", "device"], [9, 2, 1, "", "get_env"], [9, 3, 1, "", "history"], [9, 2, 1, "", "huber_loss"], [9, 3, 1, "", "info"], [9, 2, 1, "", "init_config"], [9, 2, 1, "", "init_optimizer"], [9, 2, 1, "", "init_state"], [9, 2, 1, "", "is_constant_complexity"], [9, 2, 1, "", "l2_loss"], [9, 2, 1, "", "load"], [9, 2, 1, "", "optimize_model"], [9, 2, 1, "", "predict"], [9, 2, 1, "", "save"], [9, 2, 1, "", "set_env"], [9, 2, 1, "", "smooth_l1_loss"], [9, 3, 1, "", "state_string"], [9, 2, 1, "", "step"], [9, 3, 1, "", "steps_done"], [9, 2, 1, "", "terminate_msg"], [9, 2, 1, "", "train"], [9, 2, 1, "", "update_config"], [9, 2, 1, "", "update_info"], [9, 2, 1, "", "update_networks"]], "rl_equation_solver.agent.networks": [[11, 1, 1, "", "DQN"], [12, 1, 1, "", "GCN"], [13, 1, 1, "", "LSTM"]], "rl_equation_solver.agent.networks.DQN": [[11, 2, 1, "", "__call__"], [11, 2, 1, "", "add_module"], [11, 2, 1, "", "apply"], [11, 2, 1, "", "bfloat16"], [11, 2, 1, "", "buffers"], [11, 2, 1, "", "children"], [11, 2, 1, "", "cpu"], [11, 2, 1, "", "cuda"], [11, 2, 1, "", "double"], [11, 2, 1, "", "eval"], [11, 2, 1, "", "extra_repr"], [11, 2, 1, "", "float"], [11, 2, 1, "", "forward"], [11, 2, 1, "", "get_buffer"], [11, 2, 1, "", "get_extra_state"], [11, 2, 1, "", "get_parameter"], [11, 2, 1, "", "get_submodule"], [11, 2, 1, "", "half"], [11, 2, 1, "", "ipu"], [11, 2, 1, "", "load_state_dict"], [11, 2, 1, "", "modules"], [11, 2, 1, "", "named_buffers"], [11, 2, 1, "", "named_children"], [11, 2, 1, "", "named_modules"], [11, 2, 1, "", "named_parameters"], [11, 2, 1, "", "parameters"], [11, 2, 1, "", "register_backward_hook"], [11, 2, 1, "", "register_buffer"], [11, 2, 1, "", "register_forward_hook"], [11, 2, 1, "", "register_forward_pre_hook"], [11, 2, 1, "", "register_full_backward_hook"], [11, 2, 1, "", "register_full_backward_pre_hook"], [11, 2, 1, "", "register_load_state_dict_post_hook"], [11, 2, 1, "", "register_module"], [11, 2, 1, "", "register_parameter"], [11, 2, 1, "", "register_state_dict_pre_hook"], [11, 2, 1, "", "requires_grad_"], [11, 2, 1, "", "set_extra_state"], [11, 2, 1, "", "share_memory"], [11, 2, 1, "", "state_dict"], [11, 2, 1, "", "to"], [11, 2, 1, "", "to_empty"], [11, 2, 1, "", "train"], [11, 2, 1, "", "type"], [11, 2, 1, "", "xpu"], [11, 2, 1, "", "zero_grad"]], "rl_equation_solver.agent.networks.GCN": [[12, 2, 1, "", "__call__"], [12, 2, 1, "", "add_module"], [12, 2, 1, "", "apply"], [12, 2, 1, "", "bfloat16"], [12, 2, 1, "", "buffers"], [12, 2, 1, "", "children"], [12, 2, 1, "", "cpu"], [12, 2, 1, "", "cuda"], [12, 2, 1, "", "double"], [12, 2, 1, "", "eval"], [12, 2, 1, "", "extra_repr"], [12, 2, 1, "", "float"], [12, 2, 1, "", "forward"], [12, 2, 1, "", "get_buffer"], [12, 2, 1, "", "get_extra_state"], [12, 2, 1, "", "get_parameter"], [12, 2, 1, "", "get_submodule"], [12, 2, 1, "", "half"], [12, 2, 1, "", "ipu"], [12, 2, 1, "", "load_state_dict"], [12, 2, 1, "", "modules"], [12, 2, 1, "", "named_buffers"], [12, 2, 1, "", "named_children"], [12, 2, 1, "", "named_modules"], [12, 2, 1, "", "named_parameters"], [12, 2, 1, "", "parameters"], [12, 2, 1, "", "register_backward_hook"], [12, 2, 1, "", "register_buffer"], [12, 2, 1, "", "register_forward_hook"], [12, 2, 1, "", "register_forward_pre_hook"], [12, 2, 1, "", "register_full_backward_hook"], [12, 2, 1, "", "register_full_backward_pre_hook"], [12, 2, 1, "", "register_load_state_dict_post_hook"], [12, 2, 1, "", "register_module"], [12, 2, 1, "", "register_parameter"], [12, 2, 1, "", "register_state_dict_pre_hook"], [12, 2, 1, "", "requires_grad_"], [12, 2, 1, "", "set_extra_state"], [12, 2, 1, "", "share_memory"], [12, 2, 1, "", "state_dict"], [12, 2, 1, "", "to"], [12, 2, 1, "", "to_empty"], [12, 2, 1, "", "train"], [12, 2, 1, "", "type"], [12, 2, 1, "", "xpu"], [12, 2, 1, "", "zero_grad"]], "rl_equation_solver.agent.networks.LSTM": [[13, 2, 1, "", "__call__"], [13, 2, 1, "", "add_module"], [13, 2, 1, "", "apply"], [13, 2, 1, "", "bfloat16"], [13, 2, 1, "", "buffers"], [13, 2, 1, "", "children"], [13, 2, 1, "", "cpu"], [13, 2, 1, "", "cuda"], [13, 2, 1, "", "double"], [13, 2, 1, "", "eval"], [13, 2, 1, "", "extra_repr"], [13, 2, 1, "", "float"], [13, 2, 1, "", "forward"], [13, 2, 1, "", "get_buffer"], [13, 2, 1, "", "get_extra_state"], [13, 2, 1, "", "get_parameter"], [13, 2, 1, "", "get_submodule"], [13, 2, 1, "", "half"], [13, 2, 1, "", "ipu"], [13, 2, 1, "", "load_state_dict"], [13, 2, 1, "", "modules"], [13, 2, 1, "", "named_buffers"], [13, 2, 1, "", "named_children"], [13, 2, 1, "", "named_modules"], [13, 2, 1, "", "named_parameters"], [13, 2, 1, "", "parameters"], [13, 2, 1, "", "register_backward_hook"], [13, 2, 1, "", "register_buffer"], [13, 2, 1, "", "register_forward_hook"], [13, 2, 1, "", "register_forward_pre_hook"], [13, 2, 1, "", "register_full_backward_hook"], [13, 2, 1, "", "register_full_backward_pre_hook"], [13, 2, 1, "", "register_load_state_dict_post_hook"], [13, 2, 1, "", "register_module"], [13, 2, 1, "", "register_parameter"], [13, 2, 1, "", "register_state_dict_pre_hook"], [13, 2, 1, "", "requires_grad_"], [13, 2, 1, "", "set_extra_state"], [13, 2, 1, "", "share_memory"], [13, 2, 1, "", "state_dict"], [13, 2, 1, "", "to"], [13, 2, 1, "", "to_empty"], [13, 2, 1, "", "train"], [13, 2, 1, "", "type"], [13, 2, 1, "", "xpu"], [13, 2, 1, "", "zero_grad"]], "rl_equation_solver.environment": [[16, 0, 0, "-", "algebraic"]], "rl_equation_solver.environment.algebraic": [[17, 1, 1, "", "Env"]], "rl_equation_solver.environment.algebraic.Env": [[17, 3, 1, "", "actions"], [17, 2, 1, "", "append_history"], [17, 3, 1, "", "avg_history"], [17, 2, 1, "", "close"], [17, 2, 1, "", "diff_loss_reward"], [17, 3, 1, "", "equation"], [17, 2, 1, "", "exp_loss_reward"], [17, 2, 1, "", "expression_complexity"], [17, 3, 1, "", "feature_dict"], [17, 2, 1, "", "find_reward"], [17, 3, 1, "", "history"], [17, 2, 1, "", "init_config"], [17, 2, 1, "", "inv_loss_reward"], [17, 2, 1, "", "log_info"], [17, 3, 1, "", "node_labels"], [17, 3, 1, "", "np_random"], [17, 3, 1, "", "operations"], [17, 2, 1, "", "render"], [17, 2, 1, "", "reset"], [17, 2, 1, "", "reset_history"], [17, 3, 1, "", "state_graph"], [17, 3, 1, "", "state_string"], [17, 3, 1, "", "state_vec"], [17, 2, 1, "", "step"], [17, 2, 1, "", "sub_loss_reward"], [17, 3, 1, "", "terms"], [17, 2, 1, "", "too_long"], [17, 3, 1, "", "unwrapped"], [17, 2, 1, "", "update_config"], [17, 2, 1, "", "update_history"]], "rl_equation_solver.utilities": [[19, 0, 0, "-", "history"], [21, 0, 0, "-", "loss"], [23, 0, 0, "-", "operators"], [29, 0, 0, "-", "reward"], [31, 0, 0, "-", "utilities"]], "rl_equation_solver.utilities.history": [[20, 1, 1, "", "HistoryMixin"]], "rl_equation_solver.utilities.history.HistoryMixin": [[20, 2, 1, "", "append_history"], [20, 3, 1, "", "avg_history"], [20, 3, 1, "", "history"], [20, 2, 1, "", "log_info"], [20, 2, 1, "", "reset_history"], [20, 2, 1, "", "update_history"]], "rl_equation_solver.utilities.loss": [[22, 1, 1, "", "LossMixin"]], "rl_equation_solver.utilities.loss.LossMixin": [[22, 2, 1, "", "huber_loss"], [22, 2, 1, "", "l2_loss"], [22, 2, 1, "", "smooth_l1_loss"]], "rl_equation_solver.utilities.operators": [[24, 4, 1, "", "div"], [25, 4, 1, "", "fraction"], [26, 4, 1, "", "root"], [27, 4, 1, "", "sqrt"], [28, 4, 1, "", "square"]], "rl_equation_solver.utilities.reward": [[30, 1, 1, "", "RewardMixin"]], "rl_equation_solver.utilities.reward.RewardMixin": [[30, 2, 1, "", "diff_loss_reward"], [30, 2, 1, "", "exp_loss_reward"], [30, 2, 1, "", "expression_complexity"], [30, 2, 1, "", "inv_loss_reward"], [30, 2, 1, "", "sub_loss_reward"]], "rl_equation_solver.utilities.utilities": [[32, 1, 1, "", "Batch"], [33, 1, 1, "", "Experience"], [34, 1, 1, "", "GraphEmbedding"], [35, 1, 1, "", "Id"], [36, 1, 1, "", "Node"], [37, 1, 1, "", "ReplayMemory"], [38, 1, 1, "", "VectorEmbedding"], [39, 4, 1, "", "build_adjacency_matrix"], [40, 4, 1, "", "build_adjacency_matrix_custom"], [41, 4, 1, "", "encode_onehot"], [42, 4, 1, "", "get_json_graph"], [43, 4, 1, "", "get_node_features"], [44, 4, 1, "", "get_node_labels"], [45, 4, 1, "", "graph_walk"], [46, 4, 1, "", "normalize"], [47, 4, 1, "", "pad_array"], [48, 4, 1, "", "parse_node_features"], [49, 4, 1, "", "plot_state_as_graph"], [50, 4, 1, "", "sparse_mx_to_torch_sparse_tensor"], [51, 4, 1, "", "to_graph"], [52, 4, 1, "", "to_vec"]], "rl_equation_solver.utilities.utilities.Batch": [[32, 2, 1, "", "__call__"]], "rl_equation_solver.utilities.utilities.Experience": [[33, 2, 1, "", "__add__"], [33, 2, 1, "", "__mul__"], [33, 5, 1, "", "action"], [33, 2, 1, "", "count"], [33, 2, 1, "", "index"], [33, 5, 1, "", "next_state"], [33, 5, 1, "", "reward"], [33, 5, 1, "", "state"]], "rl_equation_solver.utilities.utilities.Id": [[35, 2, 1, "", "get"], [35, 2, 1, "", "reset"]], "rl_equation_solver.utilities.utilities.ReplayMemory": [[37, 2, 1, "", "push"], [37, 2, 1, "", "sample"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "attribute", "Python attribute"]}, "titleterms": {"rl_equation_solv": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53], "agent": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "base": [2, 3], "baseag": 3, "dqn": [4, 5, 11], "gcn": [6, 7, 12], "lstm": [8, 9, 13], "network": [10, 11, 12, 13], "config": 14, "environ": [15, 16, 17], "algebra": [16, 17], "env": 17, "util": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52], "histori": [19, 20], "historymixin": 20, "loss": [21, 22], "lossmixin": 22, "oper": [23, 24, 25, 26, 27, 28], "div": 24, "fraction": 25, "root": 26, "sqrt": 27, "squar": 28, "reward": [29, 30], "rewardmixin": 30, "batch": 32, "experi": 33, "graphembed": 34, "id": 35, "node": 36, "replaymemori": 37, "vectorembed": 38, "build_adjacency_matrix": 39, "build_adjacency_matrix_custom": 40, "encode_onehot": 41, "get_json_graph": 42, "get_node_featur": 43, "get_node_label": 44, "graph_walk": 45, "normal": 46, "pad_arrai": 47, "parse_node_featur": 48, "plot_state_as_graph": 49, "sparse_mx_to_torch_sparse_tensor": 50, "to_graph": 51, "to_vec": 52, "version": 53, "welcom": 55, "rl": 55, "equat": 55, "solver": 55, "exampl": [56, 57, 58, 59, 61], "run_linear_solver_dqn": 57, "run_linear_solver_gcn": 58, "run_quadratic_solver_dqn": 59, "usag": [61, 63], "instal": [62, 63], "option": 62, "1": 62, "clone": 62, "repo": 62, "recommend": 62, "develop": 62}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"rl_equation_solver": [[0, "module-rl_equation_solver"]], "rl_equation_solver.agent": [[1, "module-rl_equation_solver.agent"]], "rl_equation_solver.agent.base": [[2, "module-rl_equation_solver.agent.base"]], "rl_equation_solver.agent.base.BaseAgent": [[3, "rl-equation-solver-agent-base-baseagent"]], "rl_equation_solver.agent.dqn": [[4, "module-rl_equation_solver.agent.dqn"]], "rl_equation_solver.agent.dqn.Agent": [[5, "rl-equation-solver-agent-dqn-agent"]], "rl_equation_solver.agent.gcn": [[6, "module-rl_equation_solver.agent.gcn"]], "rl_equation_solver.agent.gcn.Agent": [[7, "rl-equation-solver-agent-gcn-agent"]], "rl_equation_solver.agent.lstm": [[8, "module-rl_equation_solver.agent.lstm"]], "rl_equation_solver.agent.lstm.Agent": [[9, "rl-equation-solver-agent-lstm-agent"]], "rl_equation_solver.agent.networks": [[10, "module-rl_equation_solver.agent.networks"]], "rl_equation_solver.agent.networks.DQN": [[11, "rl-equation-solver-agent-networks-dqn"]], "rl_equation_solver.agent.networks.GCN": [[12, "rl-equation-solver-agent-networks-gcn"]], "rl_equation_solver.agent.networks.LSTM": [[13, "rl-equation-solver-agent-networks-lstm"]], "rl_equation_solver.config": [[14, "module-rl_equation_solver.config"]], "rl_equation_solver.environment": [[15, "module-rl_equation_solver.environment"]], "rl_equation_solver.environment.algebraic": [[16, "module-rl_equation_solver.environment.algebraic"]], "rl_equation_solver.environment.algebraic.Env": [[17, "rl-equation-solver-environment-algebraic-env"]], "rl_equation_solver.utilities": [[18, "module-rl_equation_solver.utilities"]], "rl_equation_solver.utilities.history": [[19, "module-rl_equation_solver.utilities.history"]], "rl_equation_solver.utilities.history.HistoryMixin": [[20, "rl-equation-solver-utilities-history-historymixin"]], "rl_equation_solver.utilities.loss": [[21, "module-rl_equation_solver.utilities.loss"]], "rl_equation_solver.utilities.loss.LossMixin": [[22, "rl-equation-solver-utilities-loss-lossmixin"]], "rl_equation_solver.utilities.operators": [[23, "module-rl_equation_solver.utilities.operators"]], "rl_equation_solver.utilities.operators.div": [[24, "rl-equation-solver-utilities-operators-div"]], "rl_equation_solver.utilities.operators.fraction": [[25, "rl-equation-solver-utilities-operators-fraction"]], "rl_equation_solver.utilities.operators.root": [[26, "rl-equation-solver-utilities-operators-root"]], "rl_equation_solver.utilities.operators.sqrt": [[27, "rl-equation-solver-utilities-operators-sqrt"]], "rl_equation_solver.utilities.operators.square": [[28, "rl-equation-solver-utilities-operators-square"]], "rl_equation_solver.utilities.reward": [[29, "module-rl_equation_solver.utilities.reward"]], "rl_equation_solver.utilities.reward.RewardMixin": [[30, "rl-equation-solver-utilities-reward-rewardmixin"]], "rl_equation_solver.utilities.utilities": [[31, "module-rl_equation_solver.utilities.utilities"]], "rl_equation_solver.utilities.utilities.Batch": [[32, "rl-equation-solver-utilities-utilities-batch"]], "rl_equation_solver.utilities.utilities.Experience": [[33, "rl-equation-solver-utilities-utilities-experience"]], "rl_equation_solver.utilities.utilities.GraphEmbedding": [[34, "rl-equation-solver-utilities-utilities-graphembedding"]], "rl_equation_solver.utilities.utilities.Id": [[35, "rl-equation-solver-utilities-utilities-id"]], "rl_equation_solver.utilities.utilities.Node": [[36, "rl-equation-solver-utilities-utilities-node"]], "rl_equation_solver.utilities.utilities.ReplayMemory": [[37, "rl-equation-solver-utilities-utilities-replaymemory"]], "rl_equation_solver.utilities.utilities.VectorEmbedding": [[38, "rl-equation-solver-utilities-utilities-vectorembedding"]], "rl_equation_solver.utilities.utilities.build_adjacency_matrix": [[39, "rl-equation-solver-utilities-utilities-build-adjacency-matrix"]], "rl_equation_solver.utilities.utilities.build_adjacency_matrix_custom": [[40, "rl-equation-solver-utilities-utilities-build-adjacency-matrix-custom"]], "rl_equation_solver.utilities.utilities.encode_onehot": [[41, "rl-equation-solver-utilities-utilities-encode-onehot"]], "rl_equation_solver.utilities.utilities.get_json_graph": [[42, "rl-equation-solver-utilities-utilities-get-json-graph"]], "rl_equation_solver.utilities.utilities.get_node_features": [[43, "rl-equation-solver-utilities-utilities-get-node-features"]], "rl_equation_solver.utilities.utilities.get_node_labels": [[44, "rl-equation-solver-utilities-utilities-get-node-labels"]], "rl_equation_solver.utilities.utilities.graph_walk": [[45, "rl-equation-solver-utilities-utilities-graph-walk"]], "rl_equation_solver.utilities.utilities.normalize": [[46, "rl-equation-solver-utilities-utilities-normalize"]], "rl_equation_solver.utilities.utilities.pad_array": [[47, "rl-equation-solver-utilities-utilities-pad-array"]], "rl_equation_solver.utilities.utilities.parse_node_features": [[48, "rl-equation-solver-utilities-utilities-parse-node-features"]], "rl_equation_solver.utilities.utilities.plot_state_as_graph": [[49, "rl-equation-solver-utilities-utilities-plot-state-as-graph"]], "rl_equation_solver.utilities.utilities.sparse_mx_to_torch_sparse_tensor": [[50, "rl-equation-solver-utilities-utilities-sparse-mx-to-torch-sparse-tensor"]], "rl_equation_solver.utilities.utilities.to_graph": [[51, "rl-equation-solver-utilities-utilities-to-graph"]], "rl_equation_solver.utilities.utilities.to_vec": [[52, "rl-equation-solver-utilities-utilities-to-vec"]], "rl_equation_solver.version": [[53, "module-rl_equation_solver.version"]], "Welcome to RL-Equation-Solver!": [[55, "welcome-to-rl-equation-solver"]], "examples": [[56, "module-examples"]], "examples.run_linear_solver_dqn": [[57, "module-examples.run_linear_solver_dqn"]], "examples.run_linear_solver_gcn": [[58, "module-examples.run_linear_solver_gcn"]], "examples.run_quadratic_solver_dqn": [[59, "module-examples.run_quadratic_solver_dqn"]], "Examples and Usage": [[61, "examples-and-usage"]], "Installation": [[62, "installation"]], "Option 1: Clone repo (recommended for developers)": [[62, "option-1-clone-repo-recommended-for-developers"]], "Installation and Usage": [[63, "installation-and-usage"]]}, "indexentries": {"module": [[0, "module-rl_equation_solver"], [1, "module-rl_equation_solver.agent"], [2, "module-rl_equation_solver.agent.base"], [4, "module-rl_equation_solver.agent.dqn"], [6, "module-rl_equation_solver.agent.gcn"], [8, "module-rl_equation_solver.agent.lstm"], [10, "module-rl_equation_solver.agent.networks"], [14, "module-rl_equation_solver.config"], [15, "module-rl_equation_solver.environment"], [16, "module-rl_equation_solver.environment.algebraic"], [18, "module-rl_equation_solver.utilities"], [19, "module-rl_equation_solver.utilities.history"], [21, "module-rl_equation_solver.utilities.loss"], [23, "module-rl_equation_solver.utilities.operators"], [29, "module-rl_equation_solver.utilities.reward"], [31, "module-rl_equation_solver.utilities.utilities"], [53, "module-rl_equation_solver.version"], [56, "module-examples"], [57, "module-examples.run_linear_solver_dqn"], [58, "module-examples.run_linear_solver_gcn"], [59, "module-examples.run_quadratic_solver_dqn"]], "rl_equation_solver": [[0, "module-rl_equation_solver"]], "rl_equation_solver.agent": [[1, "module-rl_equation_solver.agent"]], "rl_equation_solver.agent.base": [[2, "module-rl_equation_solver.agent.base"]], "baseagent (class in rl_equation_solver.agent.base)": [[3, "rl_equation_solver.agent.base.BaseAgent"]], "batch_states() (baseagent method)": [[3, "rl_equation_solver.agent.base.BaseAgent.batch_states"]], "choose_action() (baseagent method)": [[3, "rl_equation_solver.agent.base.BaseAgent.choose_action"]], "choose_optimal_action() (baseagent method)": [[3, "rl_equation_solver.agent.base.BaseAgent.choose_optimal_action"]], "choose_random_action() (baseagent method)": [[3, "rl_equation_solver.agent.base.BaseAgent.choose_random_action"]], "compute_q() (baseagent method)": [[3, "rl_equation_solver.agent.base.BaseAgent.compute_Q"]], "compute_v() (baseagent method)": [[3, "rl_equation_solver.agent.base.BaseAgent.compute_V"]], "compute_batch_loss() (baseagent method)": [[3, "rl_equation_solver.agent.base.BaseAgent.compute_batch_loss"]], "compute_expected_q() (baseagent method)": [[3, "rl_equation_solver.agent.base.BaseAgent.compute_expected_Q"]], "compute_loss() (baseagent method)": [[3, "rl_equation_solver.agent.base.BaseAgent.compute_loss"]], "convert_state() (baseagent method)": [[3, "rl_equation_solver.agent.base.BaseAgent.convert_state"]], "current_episode (baseagent property)": [[3, "rl_equation_solver.agent.base.BaseAgent.current_episode"]], "device (baseagent property)": [[3, "rl_equation_solver.agent.base.BaseAgent.device"]], "get_env() (baseagent method)": [[3, "rl_equation_solver.agent.base.BaseAgent.get_env"]], "history (baseagent property)": [[3, "rl_equation_solver.agent.base.BaseAgent.history"]], "huber_loss() (baseagent method)": [[3, "rl_equation_solver.agent.base.BaseAgent.huber_loss"]], "info (baseagent property)": [[3, "rl_equation_solver.agent.base.BaseAgent.info"]], "init_config() (baseagent method)": [[3, "rl_equation_solver.agent.base.BaseAgent.init_config"]], "init_optimizer() (baseagent method)": [[3, "rl_equation_solver.agent.base.BaseAgent.init_optimizer"]], "init_state() (baseagent method)": [[3, "rl_equation_solver.agent.base.BaseAgent.init_state"]], "is_constant_complexity() (baseagent method)": [[3, "rl_equation_solver.agent.base.BaseAgent.is_constant_complexity"]], "l2_loss() (baseagent method)": [[3, "rl_equation_solver.agent.base.BaseAgent.l2_loss"]], "load() (baseagent class method)": [[3, "rl_equation_solver.agent.base.BaseAgent.load"]], "optimize_model() (baseagent method)": [[3, "rl_equation_solver.agent.base.BaseAgent.optimize_model"]], "predict() (baseagent method)": [[3, "rl_equation_solver.agent.base.BaseAgent.predict"]], "save() (baseagent method)": [[3, "rl_equation_solver.agent.base.BaseAgent.save"]], "set_env() (baseagent method)": [[3, "rl_equation_solver.agent.base.BaseAgent.set_env"]], "smooth_l1_loss() (baseagent method)": [[3, "rl_equation_solver.agent.base.BaseAgent.smooth_l1_loss"]], "state_string (baseagent property)": [[3, "rl_equation_solver.agent.base.BaseAgent.state_string"]], "step() (baseagent method)": [[3, "rl_equation_solver.agent.base.BaseAgent.step"]], "steps_done (baseagent property)": [[3, "rl_equation_solver.agent.base.BaseAgent.steps_done"]], "terminate_msg() (baseagent method)": [[3, "rl_equation_solver.agent.base.BaseAgent.terminate_msg"]], "train() (baseagent method)": [[3, "rl_equation_solver.agent.base.BaseAgent.train"]], "update_config() (baseagent method)": [[3, "rl_equation_solver.agent.base.BaseAgent.update_config"]], "update_info() (baseagent method)": [[3, "rl_equation_solver.agent.base.BaseAgent.update_info"]], "update_networks() (baseagent method)": [[3, "rl_equation_solver.agent.base.BaseAgent.update_networks"]], "rl_equation_solver.agent.dqn": [[4, "module-rl_equation_solver.agent.dqn"]], "agent (class in rl_equation_solver.agent.dqn)": [[5, "rl_equation_solver.agent.dqn.Agent"]], "batch_states() (agent method)": [[5, "rl_equation_solver.agent.dqn.Agent.batch_states"], [7, "rl_equation_solver.agent.gcn.Agent.batch_states"], [9, "rl_equation_solver.agent.lstm.Agent.batch_states"]], "choose_action() (agent method)": [[5, "rl_equation_solver.agent.dqn.Agent.choose_action"], [7, "rl_equation_solver.agent.gcn.Agent.choose_action"], [9, "rl_equation_solver.agent.lstm.Agent.choose_action"]], "choose_optimal_action() (agent method)": [[5, "rl_equation_solver.agent.dqn.Agent.choose_optimal_action"], [7, "rl_equation_solver.agent.gcn.Agent.choose_optimal_action"], [9, "rl_equation_solver.agent.lstm.Agent.choose_optimal_action"]], "choose_random_action() (agent method)": [[5, "rl_equation_solver.agent.dqn.Agent.choose_random_action"], [7, "rl_equation_solver.agent.gcn.Agent.choose_random_action"], [9, "rl_equation_solver.agent.lstm.Agent.choose_random_action"]], "compute_q() (agent method)": [[5, "rl_equation_solver.agent.dqn.Agent.compute_Q"], [7, "rl_equation_solver.agent.gcn.Agent.compute_Q"], [9, "rl_equation_solver.agent.lstm.Agent.compute_Q"]], "compute_v() (agent method)": [[5, "rl_equation_solver.agent.dqn.Agent.compute_V"], [7, "rl_equation_solver.agent.gcn.Agent.compute_V"], [9, "rl_equation_solver.agent.lstm.Agent.compute_V"]], "compute_batch_loss() (agent method)": [[5, "rl_equation_solver.agent.dqn.Agent.compute_batch_loss"], [7, "rl_equation_solver.agent.gcn.Agent.compute_batch_loss"], [9, "rl_equation_solver.agent.lstm.Agent.compute_batch_loss"]], "compute_expected_q() (agent method)": [[5, "rl_equation_solver.agent.dqn.Agent.compute_expected_Q"], [7, "rl_equation_solver.agent.gcn.Agent.compute_expected_Q"], [9, "rl_equation_solver.agent.lstm.Agent.compute_expected_Q"]], "compute_loss() (agent method)": [[5, "rl_equation_solver.agent.dqn.Agent.compute_loss"], [7, "rl_equation_solver.agent.gcn.Agent.compute_loss"], [9, "rl_equation_solver.agent.lstm.Agent.compute_loss"]], "convert_state() (agent method)": [[5, "rl_equation_solver.agent.dqn.Agent.convert_state"], [7, "rl_equation_solver.agent.gcn.Agent.convert_state"], [9, "rl_equation_solver.agent.lstm.Agent.convert_state"]], "current_episode (agent property)": [[5, "rl_equation_solver.agent.dqn.Agent.current_episode"], [7, "rl_equation_solver.agent.gcn.Agent.current_episode"], [9, "rl_equation_solver.agent.lstm.Agent.current_episode"]], "device (agent property)": [[5, "rl_equation_solver.agent.dqn.Agent.device"], [7, "rl_equation_solver.agent.gcn.Agent.device"], [9, "rl_equation_solver.agent.lstm.Agent.device"]], "get_env() (agent method)": [[5, "rl_equation_solver.agent.dqn.Agent.get_env"], [7, "rl_equation_solver.agent.gcn.Agent.get_env"], [9, "rl_equation_solver.agent.lstm.Agent.get_env"]], "history (agent property)": [[5, "rl_equation_solver.agent.dqn.Agent.history"], [7, "rl_equation_solver.agent.gcn.Agent.history"], [9, "rl_equation_solver.agent.lstm.Agent.history"]], "huber_loss() (agent method)": [[5, "rl_equation_solver.agent.dqn.Agent.huber_loss"], [7, "rl_equation_solver.agent.gcn.Agent.huber_loss"], [9, "rl_equation_solver.agent.lstm.Agent.huber_loss"]], "info (agent property)": [[5, "rl_equation_solver.agent.dqn.Agent.info"], [7, "rl_equation_solver.agent.gcn.Agent.info"], [9, "rl_equation_solver.agent.lstm.Agent.info"]], "init_config() (agent method)": [[5, "rl_equation_solver.agent.dqn.Agent.init_config"], [7, "rl_equation_solver.agent.gcn.Agent.init_config"], [9, "rl_equation_solver.agent.lstm.Agent.init_config"]], "init_optimizer() (agent method)": [[5, "rl_equation_solver.agent.dqn.Agent.init_optimizer"], [7, "rl_equation_solver.agent.gcn.Agent.init_optimizer"], [9, "rl_equation_solver.agent.lstm.Agent.init_optimizer"]], "init_state() (agent method)": [[5, "rl_equation_solver.agent.dqn.Agent.init_state"], [7, "rl_equation_solver.agent.gcn.Agent.init_state"], [9, "rl_equation_solver.agent.lstm.Agent.init_state"]], "is_constant_complexity() (agent method)": [[5, "rl_equation_solver.agent.dqn.Agent.is_constant_complexity"], [7, "rl_equation_solver.agent.gcn.Agent.is_constant_complexity"], [9, "rl_equation_solver.agent.lstm.Agent.is_constant_complexity"]], "l2_loss() (agent method)": [[5, "rl_equation_solver.agent.dqn.Agent.l2_loss"], [7, "rl_equation_solver.agent.gcn.Agent.l2_loss"], [9, "rl_equation_solver.agent.lstm.Agent.l2_loss"]], "load() (agent class method)": [[5, "rl_equation_solver.agent.dqn.Agent.load"], [7, "rl_equation_solver.agent.gcn.Agent.load"], [9, "rl_equation_solver.agent.lstm.Agent.load"]], "optimize_model() (agent method)": [[5, "rl_equation_solver.agent.dqn.Agent.optimize_model"], [7, "rl_equation_solver.agent.gcn.Agent.optimize_model"], [9, "rl_equation_solver.agent.lstm.Agent.optimize_model"]], "predict() (agent method)": [[5, "rl_equation_solver.agent.dqn.Agent.predict"], [7, "rl_equation_solver.agent.gcn.Agent.predict"], [9, "rl_equation_solver.agent.lstm.Agent.predict"]], "save() (agent method)": [[5, "rl_equation_solver.agent.dqn.Agent.save"], [7, "rl_equation_solver.agent.gcn.Agent.save"], [9, "rl_equation_solver.agent.lstm.Agent.save"]], "set_env() (agent method)": [[5, "rl_equation_solver.agent.dqn.Agent.set_env"], [7, "rl_equation_solver.agent.gcn.Agent.set_env"], [9, "rl_equation_solver.agent.lstm.Agent.set_env"]], "smooth_l1_loss() (agent method)": [[5, "rl_equation_solver.agent.dqn.Agent.smooth_l1_loss"], [7, "rl_equation_solver.agent.gcn.Agent.smooth_l1_loss"], [9, "rl_equation_solver.agent.lstm.Agent.smooth_l1_loss"]], "state_string (agent property)": [[5, "rl_equation_solver.agent.dqn.Agent.state_string"], [7, "rl_equation_solver.agent.gcn.Agent.state_string"], [9, "rl_equation_solver.agent.lstm.Agent.state_string"]], "step() (agent method)": [[5, "rl_equation_solver.agent.dqn.Agent.step"], [7, "rl_equation_solver.agent.gcn.Agent.step"], [9, "rl_equation_solver.agent.lstm.Agent.step"]], "steps_done (agent property)": [[5, "rl_equation_solver.agent.dqn.Agent.steps_done"], [7, "rl_equation_solver.agent.gcn.Agent.steps_done"], [9, "rl_equation_solver.agent.lstm.Agent.steps_done"]], "terminate_msg() (agent method)": [[5, "rl_equation_solver.agent.dqn.Agent.terminate_msg"], [7, "rl_equation_solver.agent.gcn.Agent.terminate_msg"], [9, "rl_equation_solver.agent.lstm.Agent.terminate_msg"]], "train() (agent method)": [[5, "rl_equation_solver.agent.dqn.Agent.train"], [7, "rl_equation_solver.agent.gcn.Agent.train"], [9, "rl_equation_solver.agent.lstm.Agent.train"]], "update_config() (agent method)": [[5, "rl_equation_solver.agent.dqn.Agent.update_config"], [7, "rl_equation_solver.agent.gcn.Agent.update_config"], [9, "rl_equation_solver.agent.lstm.Agent.update_config"]], "update_info() (agent method)": [[5, "rl_equation_solver.agent.dqn.Agent.update_info"], [7, "rl_equation_solver.agent.gcn.Agent.update_info"], [9, "rl_equation_solver.agent.lstm.Agent.update_info"]], "update_networks() (agent method)": [[5, "rl_equation_solver.agent.dqn.Agent.update_networks"], [7, "rl_equation_solver.agent.gcn.Agent.update_networks"], [9, "rl_equation_solver.agent.lstm.Agent.update_networks"]], "rl_equation_solver.agent.gcn": [[6, "module-rl_equation_solver.agent.gcn"]], "agent (class in rl_equation_solver.agent.gcn)": [[7, "rl_equation_solver.agent.gcn.Agent"]], "rl_equation_solver.agent.lstm": [[8, "module-rl_equation_solver.agent.lstm"]], "agent (class in rl_equation_solver.agent.lstm)": [[9, "rl_equation_solver.agent.lstm.Agent"]], "rl_equation_solver.agent.networks": [[10, "module-rl_equation_solver.agent.networks"]], "dqn (class in rl_equation_solver.agent.networks)": [[11, "rl_equation_solver.agent.networks.DQN"]], "__call__() (dqn method)": [[11, "rl_equation_solver.agent.networks.DQN.__call__"]], "add_module() (dqn method)": [[11, "rl_equation_solver.agent.networks.DQN.add_module"]], "apply() (dqn method)": [[11, "rl_equation_solver.agent.networks.DQN.apply"]], "bfloat16() (dqn method)": [[11, "rl_equation_solver.agent.networks.DQN.bfloat16"]], "buffers() (dqn method)": [[11, "rl_equation_solver.agent.networks.DQN.buffers"]], "children() (dqn method)": [[11, "rl_equation_solver.agent.networks.DQN.children"]], "cpu() (dqn method)": [[11, "rl_equation_solver.agent.networks.DQN.cpu"]], "cuda() (dqn method)": [[11, "rl_equation_solver.agent.networks.DQN.cuda"]], "double() (dqn method)": [[11, "rl_equation_solver.agent.networks.DQN.double"]], "eval() (dqn method)": [[11, "rl_equation_solver.agent.networks.DQN.eval"]], "extra_repr() (dqn method)": [[11, "rl_equation_solver.agent.networks.DQN.extra_repr"]], "float() (dqn method)": [[11, "rl_equation_solver.agent.networks.DQN.float"]], "forward() (dqn method)": [[11, "rl_equation_solver.agent.networks.DQN.forward"]], "get_buffer() (dqn method)": [[11, "rl_equation_solver.agent.networks.DQN.get_buffer"]], "get_extra_state() (dqn method)": [[11, "rl_equation_solver.agent.networks.DQN.get_extra_state"]], "get_parameter() (dqn method)": [[11, "rl_equation_solver.agent.networks.DQN.get_parameter"]], "get_submodule() (dqn method)": [[11, "rl_equation_solver.agent.networks.DQN.get_submodule"]], "half() (dqn method)": [[11, "rl_equation_solver.agent.networks.DQN.half"]], "ipu() (dqn method)": [[11, "rl_equation_solver.agent.networks.DQN.ipu"]], "load_state_dict() (dqn method)": [[11, "rl_equation_solver.agent.networks.DQN.load_state_dict"]], "modules() (dqn method)": [[11, "rl_equation_solver.agent.networks.DQN.modules"]], "named_buffers() (dqn method)": [[11, "rl_equation_solver.agent.networks.DQN.named_buffers"]], "named_children() (dqn method)": [[11, "rl_equation_solver.agent.networks.DQN.named_children"]], "named_modules() (dqn method)": [[11, "rl_equation_solver.agent.networks.DQN.named_modules"]], "named_parameters() (dqn method)": [[11, "rl_equation_solver.agent.networks.DQN.named_parameters"]], "parameters() (dqn method)": [[11, "rl_equation_solver.agent.networks.DQN.parameters"]], "register_backward_hook() (dqn method)": [[11, "rl_equation_solver.agent.networks.DQN.register_backward_hook"]], "register_buffer() (dqn method)": [[11, "rl_equation_solver.agent.networks.DQN.register_buffer"]], "register_forward_hook() (dqn method)": [[11, "rl_equation_solver.agent.networks.DQN.register_forward_hook"]], "register_forward_pre_hook() (dqn method)": [[11, "rl_equation_solver.agent.networks.DQN.register_forward_pre_hook"]], "register_full_backward_hook() (dqn method)": [[11, "rl_equation_solver.agent.networks.DQN.register_full_backward_hook"]], "register_full_backward_pre_hook() (dqn method)": [[11, "rl_equation_solver.agent.networks.DQN.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (dqn method)": [[11, "rl_equation_solver.agent.networks.DQN.register_load_state_dict_post_hook"]], "register_module() (dqn method)": [[11, "rl_equation_solver.agent.networks.DQN.register_module"]], "register_parameter() (dqn method)": [[11, "rl_equation_solver.agent.networks.DQN.register_parameter"]], "register_state_dict_pre_hook() (dqn method)": [[11, "rl_equation_solver.agent.networks.DQN.register_state_dict_pre_hook"]], "requires_grad_() (dqn method)": [[11, "rl_equation_solver.agent.networks.DQN.requires_grad_"]], "set_extra_state() (dqn method)": [[11, "rl_equation_solver.agent.networks.DQN.set_extra_state"]], "share_memory() (dqn method)": [[11, "rl_equation_solver.agent.networks.DQN.share_memory"]], "state_dict() (dqn method)": [[11, "rl_equation_solver.agent.networks.DQN.state_dict"]], "to() (dqn method)": [[11, "rl_equation_solver.agent.networks.DQN.to"]], "to_empty() (dqn method)": [[11, "rl_equation_solver.agent.networks.DQN.to_empty"]], "train() (dqn method)": [[11, "rl_equation_solver.agent.networks.DQN.train"]], "type() (dqn method)": [[11, "rl_equation_solver.agent.networks.DQN.type"]], "xpu() (dqn method)": [[11, "rl_equation_solver.agent.networks.DQN.xpu"]], "zero_grad() (dqn method)": [[11, "rl_equation_solver.agent.networks.DQN.zero_grad"]], "gcn (class in rl_equation_solver.agent.networks)": [[12, "rl_equation_solver.agent.networks.GCN"]], "__call__() (gcn method)": [[12, "rl_equation_solver.agent.networks.GCN.__call__"]], "add_module() (gcn method)": [[12, "rl_equation_solver.agent.networks.GCN.add_module"]], "apply() (gcn method)": [[12, "rl_equation_solver.agent.networks.GCN.apply"]], "bfloat16() (gcn method)": [[12, "rl_equation_solver.agent.networks.GCN.bfloat16"]], "buffers() (gcn method)": [[12, "rl_equation_solver.agent.networks.GCN.buffers"]], "children() (gcn method)": [[12, "rl_equation_solver.agent.networks.GCN.children"]], "cpu() (gcn method)": [[12, "rl_equation_solver.agent.networks.GCN.cpu"]], "cuda() (gcn method)": [[12, "rl_equation_solver.agent.networks.GCN.cuda"]], "double() (gcn method)": [[12, "rl_equation_solver.agent.networks.GCN.double"]], "eval() (gcn method)": [[12, "rl_equation_solver.agent.networks.GCN.eval"]], "extra_repr() (gcn method)": [[12, "rl_equation_solver.agent.networks.GCN.extra_repr"]], "float() (gcn method)": [[12, "rl_equation_solver.agent.networks.GCN.float"]], "forward() (gcn method)": [[12, "rl_equation_solver.agent.networks.GCN.forward"]], "get_buffer() (gcn method)": [[12, "rl_equation_solver.agent.networks.GCN.get_buffer"]], "get_extra_state() (gcn method)": [[12, "rl_equation_solver.agent.networks.GCN.get_extra_state"]], "get_parameter() (gcn method)": [[12, "rl_equation_solver.agent.networks.GCN.get_parameter"]], "get_submodule() (gcn method)": [[12, "rl_equation_solver.agent.networks.GCN.get_submodule"]], "half() (gcn method)": [[12, "rl_equation_solver.agent.networks.GCN.half"]], "ipu() (gcn method)": [[12, "rl_equation_solver.agent.networks.GCN.ipu"]], "load_state_dict() (gcn method)": [[12, "rl_equation_solver.agent.networks.GCN.load_state_dict"]], "modules() (gcn method)": [[12, "rl_equation_solver.agent.networks.GCN.modules"]], "named_buffers() (gcn method)": [[12, "rl_equation_solver.agent.networks.GCN.named_buffers"]], "named_children() (gcn method)": [[12, "rl_equation_solver.agent.networks.GCN.named_children"]], "named_modules() (gcn method)": [[12, "rl_equation_solver.agent.networks.GCN.named_modules"]], "named_parameters() (gcn method)": [[12, "rl_equation_solver.agent.networks.GCN.named_parameters"]], "parameters() (gcn method)": [[12, "rl_equation_solver.agent.networks.GCN.parameters"]], "register_backward_hook() (gcn method)": [[12, "rl_equation_solver.agent.networks.GCN.register_backward_hook"]], "register_buffer() (gcn method)": [[12, "rl_equation_solver.agent.networks.GCN.register_buffer"]], "register_forward_hook() (gcn method)": [[12, "rl_equation_solver.agent.networks.GCN.register_forward_hook"]], "register_forward_pre_hook() (gcn method)": [[12, "rl_equation_solver.agent.networks.GCN.register_forward_pre_hook"]], "register_full_backward_hook() (gcn method)": [[12, "rl_equation_solver.agent.networks.GCN.register_full_backward_hook"]], "register_full_backward_pre_hook() (gcn method)": [[12, "rl_equation_solver.agent.networks.GCN.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (gcn method)": [[12, "rl_equation_solver.agent.networks.GCN.register_load_state_dict_post_hook"]], "register_module() (gcn method)": [[12, "rl_equation_solver.agent.networks.GCN.register_module"]], "register_parameter() (gcn method)": [[12, "rl_equation_solver.agent.networks.GCN.register_parameter"]], "register_state_dict_pre_hook() (gcn method)": [[12, "rl_equation_solver.agent.networks.GCN.register_state_dict_pre_hook"]], "requires_grad_() (gcn method)": [[12, "rl_equation_solver.agent.networks.GCN.requires_grad_"]], "set_extra_state() (gcn method)": [[12, "rl_equation_solver.agent.networks.GCN.set_extra_state"]], "share_memory() (gcn method)": [[12, "rl_equation_solver.agent.networks.GCN.share_memory"]], "state_dict() (gcn method)": [[12, "rl_equation_solver.agent.networks.GCN.state_dict"]], "to() (gcn method)": [[12, "rl_equation_solver.agent.networks.GCN.to"]], "to_empty() (gcn method)": [[12, "rl_equation_solver.agent.networks.GCN.to_empty"]], "train() (gcn method)": [[12, "rl_equation_solver.agent.networks.GCN.train"]], "type() (gcn method)": [[12, "rl_equation_solver.agent.networks.GCN.type"]], "xpu() (gcn method)": [[12, "rl_equation_solver.agent.networks.GCN.xpu"]], "zero_grad() (gcn method)": [[12, "rl_equation_solver.agent.networks.GCN.zero_grad"]], "lstm (class in rl_equation_solver.agent.networks)": [[13, "rl_equation_solver.agent.networks.LSTM"]], "__call__() (lstm method)": [[13, "rl_equation_solver.agent.networks.LSTM.__call__"]], "add_module() (lstm method)": [[13, "rl_equation_solver.agent.networks.LSTM.add_module"]], "apply() (lstm method)": [[13, "rl_equation_solver.agent.networks.LSTM.apply"]], "bfloat16() (lstm method)": [[13, "rl_equation_solver.agent.networks.LSTM.bfloat16"]], "buffers() (lstm method)": [[13, "rl_equation_solver.agent.networks.LSTM.buffers"]], "children() (lstm method)": [[13, "rl_equation_solver.agent.networks.LSTM.children"]], "cpu() (lstm method)": [[13, "rl_equation_solver.agent.networks.LSTM.cpu"]], "cuda() (lstm method)": [[13, "rl_equation_solver.agent.networks.LSTM.cuda"]], "double() (lstm method)": [[13, "rl_equation_solver.agent.networks.LSTM.double"]], "eval() (lstm method)": [[13, "rl_equation_solver.agent.networks.LSTM.eval"]], "extra_repr() (lstm method)": [[13, "rl_equation_solver.agent.networks.LSTM.extra_repr"]], "float() (lstm method)": [[13, "rl_equation_solver.agent.networks.LSTM.float"]], "forward() (lstm method)": [[13, "rl_equation_solver.agent.networks.LSTM.forward"]], "get_buffer() (lstm method)": [[13, "rl_equation_solver.agent.networks.LSTM.get_buffer"]], "get_extra_state() (lstm method)": [[13, "rl_equation_solver.agent.networks.LSTM.get_extra_state"]], "get_parameter() (lstm method)": [[13, "rl_equation_solver.agent.networks.LSTM.get_parameter"]], "get_submodule() (lstm method)": [[13, "rl_equation_solver.agent.networks.LSTM.get_submodule"]], "half() (lstm method)": [[13, "rl_equation_solver.agent.networks.LSTM.half"]], "ipu() (lstm method)": [[13, "rl_equation_solver.agent.networks.LSTM.ipu"]], "load_state_dict() (lstm method)": [[13, "rl_equation_solver.agent.networks.LSTM.load_state_dict"]], "modules() (lstm method)": [[13, "rl_equation_solver.agent.networks.LSTM.modules"]], "named_buffers() (lstm method)": [[13, "rl_equation_solver.agent.networks.LSTM.named_buffers"]], "named_children() (lstm method)": [[13, "rl_equation_solver.agent.networks.LSTM.named_children"]], "named_modules() (lstm method)": [[13, "rl_equation_solver.agent.networks.LSTM.named_modules"]], "named_parameters() (lstm method)": [[13, "rl_equation_solver.agent.networks.LSTM.named_parameters"]], "parameters() (lstm method)": [[13, "rl_equation_solver.agent.networks.LSTM.parameters"]], "register_backward_hook() (lstm method)": [[13, "rl_equation_solver.agent.networks.LSTM.register_backward_hook"]], "register_buffer() (lstm method)": [[13, "rl_equation_solver.agent.networks.LSTM.register_buffer"]], "register_forward_hook() (lstm method)": [[13, "rl_equation_solver.agent.networks.LSTM.register_forward_hook"]], "register_forward_pre_hook() (lstm method)": [[13, "rl_equation_solver.agent.networks.LSTM.register_forward_pre_hook"]], "register_full_backward_hook() (lstm method)": [[13, "rl_equation_solver.agent.networks.LSTM.register_full_backward_hook"]], "register_full_backward_pre_hook() (lstm method)": [[13, "rl_equation_solver.agent.networks.LSTM.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (lstm method)": [[13, "rl_equation_solver.agent.networks.LSTM.register_load_state_dict_post_hook"]], "register_module() (lstm method)": [[13, "rl_equation_solver.agent.networks.LSTM.register_module"]], "register_parameter() (lstm method)": [[13, "rl_equation_solver.agent.networks.LSTM.register_parameter"]], "register_state_dict_pre_hook() (lstm method)": [[13, "rl_equation_solver.agent.networks.LSTM.register_state_dict_pre_hook"]], "requires_grad_() (lstm method)": [[13, "rl_equation_solver.agent.networks.LSTM.requires_grad_"]], "set_extra_state() (lstm method)": [[13, "rl_equation_solver.agent.networks.LSTM.set_extra_state"]], "share_memory() (lstm method)": [[13, "rl_equation_solver.agent.networks.LSTM.share_memory"]], "state_dict() (lstm method)": [[13, "rl_equation_solver.agent.networks.LSTM.state_dict"]], "to() (lstm method)": [[13, "rl_equation_solver.agent.networks.LSTM.to"]], "to_empty() (lstm method)": [[13, "rl_equation_solver.agent.networks.LSTM.to_empty"]], "train() (lstm method)": [[13, "rl_equation_solver.agent.networks.LSTM.train"]], "type() (lstm method)": [[13, "rl_equation_solver.agent.networks.LSTM.type"]], "xpu() (lstm method)": [[13, "rl_equation_solver.agent.networks.LSTM.xpu"]], "zero_grad() (lstm method)": [[13, "rl_equation_solver.agent.networks.LSTM.zero_grad"]], "rl_equation_solver.config": [[14, "module-rl_equation_solver.config"]], "rl_equation_solver.environment": [[15, "module-rl_equation_solver.environment"]], "rl_equation_solver.environment.algebraic": [[16, "module-rl_equation_solver.environment.algebraic"]], "env (class in rl_equation_solver.environment.algebraic)": [[17, "rl_equation_solver.environment.algebraic.Env"]], "actions (env property)": [[17, "rl_equation_solver.environment.algebraic.Env.actions"]], "append_history() (env method)": [[17, "rl_equation_solver.environment.algebraic.Env.append_history"]], "avg_history (env property)": [[17, "rl_equation_solver.environment.algebraic.Env.avg_history"]], "close() (env method)": [[17, "rl_equation_solver.environment.algebraic.Env.close"]], "diff_loss_reward() (env method)": [[17, "rl_equation_solver.environment.algebraic.Env.diff_loss_reward"]], "equation (env property)": [[17, "rl_equation_solver.environment.algebraic.Env.equation"]], "exp_loss_reward() (env method)": [[17, "rl_equation_solver.environment.algebraic.Env.exp_loss_reward"]], "expression_complexity() (env method)": [[17, "rl_equation_solver.environment.algebraic.Env.expression_complexity"]], "feature_dict (env property)": [[17, "rl_equation_solver.environment.algebraic.Env.feature_dict"]], "find_reward() (env method)": [[17, "rl_equation_solver.environment.algebraic.Env.find_reward"]], "history (env property)": [[17, "rl_equation_solver.environment.algebraic.Env.history"]], "init_config() (env method)": [[17, "rl_equation_solver.environment.algebraic.Env.init_config"]], "inv_loss_reward() (env method)": [[17, "rl_equation_solver.environment.algebraic.Env.inv_loss_reward"]], "log_info() (env method)": [[17, "rl_equation_solver.environment.algebraic.Env.log_info"]], "node_labels (env property)": [[17, "rl_equation_solver.environment.algebraic.Env.node_labels"]], "np_random (env property)": [[17, "rl_equation_solver.environment.algebraic.Env.np_random"]], "operations (env property)": [[17, "rl_equation_solver.environment.algebraic.Env.operations"]], "render() (env method)": [[17, "rl_equation_solver.environment.algebraic.Env.render"]], "reset() (env method)": [[17, "rl_equation_solver.environment.algebraic.Env.reset"]], "reset_history() (env method)": [[17, "rl_equation_solver.environment.algebraic.Env.reset_history"]], "state_graph (env property)": [[17, "rl_equation_solver.environment.algebraic.Env.state_graph"]], "state_string (env property)": [[17, "rl_equation_solver.environment.algebraic.Env.state_string"]], "state_vec (env property)": [[17, "rl_equation_solver.environment.algebraic.Env.state_vec"]], "step() (env method)": [[17, "rl_equation_solver.environment.algebraic.Env.step"]], "sub_loss_reward() (env method)": [[17, "rl_equation_solver.environment.algebraic.Env.sub_loss_reward"]], "terms (env property)": [[17, "rl_equation_solver.environment.algebraic.Env.terms"]], "too_long() (env method)": [[17, "rl_equation_solver.environment.algebraic.Env.too_long"]], "unwrapped (env property)": [[17, "rl_equation_solver.environment.algebraic.Env.unwrapped"]], "update_config() (env method)": [[17, "rl_equation_solver.environment.algebraic.Env.update_config"]], "update_history() (env method)": [[17, "rl_equation_solver.environment.algebraic.Env.update_history"]], "rl_equation_solver.utilities": [[18, "module-rl_equation_solver.utilities"]], "rl_equation_solver.utilities.history": [[19, "module-rl_equation_solver.utilities.history"]], "historymixin (class in rl_equation_solver.utilities.history)": [[20, "rl_equation_solver.utilities.history.HistoryMixin"]], "append_history() (historymixin method)": [[20, "rl_equation_solver.utilities.history.HistoryMixin.append_history"]], "avg_history (historymixin property)": [[20, "rl_equation_solver.utilities.history.HistoryMixin.avg_history"]], "history (historymixin property)": [[20, "rl_equation_solver.utilities.history.HistoryMixin.history"]], "log_info() (historymixin method)": [[20, "rl_equation_solver.utilities.history.HistoryMixin.log_info"]], "reset_history() (historymixin method)": [[20, "rl_equation_solver.utilities.history.HistoryMixin.reset_history"]], "update_history() (historymixin method)": [[20, "rl_equation_solver.utilities.history.HistoryMixin.update_history"]], "rl_equation_solver.utilities.loss": [[21, "module-rl_equation_solver.utilities.loss"]], "lossmixin (class in rl_equation_solver.utilities.loss)": [[22, "rl_equation_solver.utilities.loss.LossMixin"]], "huber_loss() (lossmixin method)": [[22, "rl_equation_solver.utilities.loss.LossMixin.huber_loss"]], "l2_loss() (lossmixin method)": [[22, "rl_equation_solver.utilities.loss.LossMixin.l2_loss"]], "smooth_l1_loss() (lossmixin method)": [[22, "rl_equation_solver.utilities.loss.LossMixin.smooth_l1_loss"]], "rl_equation_solver.utilities.operators": [[23, "module-rl_equation_solver.utilities.operators"]], "div() (in module rl_equation_solver.utilities.operators)": [[24, "rl_equation_solver.utilities.operators.div"]], "fraction() (in module rl_equation_solver.utilities.operators)": [[25, "rl_equation_solver.utilities.operators.fraction"]], "root() (in module rl_equation_solver.utilities.operators)": [[26, "rl_equation_solver.utilities.operators.root"]], "sqrt() (in module rl_equation_solver.utilities.operators)": [[27, "rl_equation_solver.utilities.operators.sqrt"]], "square() (in module rl_equation_solver.utilities.operators)": [[28, "rl_equation_solver.utilities.operators.square"]], "rl_equation_solver.utilities.reward": [[29, "module-rl_equation_solver.utilities.reward"]], "rewardmixin (class in rl_equation_solver.utilities.reward)": [[30, "rl_equation_solver.utilities.reward.RewardMixin"]], "diff_loss_reward() (rewardmixin method)": [[30, "rl_equation_solver.utilities.reward.RewardMixin.diff_loss_reward"]], "exp_loss_reward() (rewardmixin method)": [[30, "rl_equation_solver.utilities.reward.RewardMixin.exp_loss_reward"]], "expression_complexity() (rewardmixin method)": [[30, "rl_equation_solver.utilities.reward.RewardMixin.expression_complexity"]], "inv_loss_reward() (rewardmixin method)": [[30, "rl_equation_solver.utilities.reward.RewardMixin.inv_loss_reward"]], "sub_loss_reward() (rewardmixin method)": [[30, "rl_equation_solver.utilities.reward.RewardMixin.sub_loss_reward"]], "rl_equation_solver.utilities.utilities": [[31, "module-rl_equation_solver.utilities.utilities"]], "batch (class in rl_equation_solver.utilities.utilities)": [[32, "rl_equation_solver.utilities.utilities.Batch"]], "__call__() (batch class method)": [[32, "rl_equation_solver.utilities.utilities.Batch.__call__"]], "experience (class in rl_equation_solver.utilities.utilities)": [[33, "rl_equation_solver.utilities.utilities.Experience"]], "__add__() (experience method)": [[33, "rl_equation_solver.utilities.utilities.Experience.__add__"]], "__mul__() (experience method)": [[33, "rl_equation_solver.utilities.utilities.Experience.__mul__"]], "action (experience attribute)": [[33, "rl_equation_solver.utilities.utilities.Experience.action"]], "count() (experience method)": [[33, "rl_equation_solver.utilities.utilities.Experience.count"]], "index() (experience method)": [[33, "rl_equation_solver.utilities.utilities.Experience.index"]], "next_state (experience attribute)": [[33, "rl_equation_solver.utilities.utilities.Experience.next_state"]], "reward (experience attribute)": [[33, "rl_equation_solver.utilities.utilities.Experience.reward"]], "state (experience attribute)": [[33, "rl_equation_solver.utilities.utilities.Experience.state"]], "graphembedding (class in rl_equation_solver.utilities.utilities)": [[34, "rl_equation_solver.utilities.utilities.GraphEmbedding"]], "id (class in rl_equation_solver.utilities.utilities)": [[35, "rl_equation_solver.utilities.utilities.Id"]], "get() (id class method)": [[35, "rl_equation_solver.utilities.utilities.Id.get"]], "reset() (id class method)": [[35, "rl_equation_solver.utilities.utilities.Id.reset"]], "node (class in rl_equation_solver.utilities.utilities)": [[36, "rl_equation_solver.utilities.utilities.Node"]], "replaymemory (class in rl_equation_solver.utilities.utilities)": [[37, "rl_equation_solver.utilities.utilities.ReplayMemory"]], "push() (replaymemory method)": [[37, "rl_equation_solver.utilities.utilities.ReplayMemory.push"]], "sample() (replaymemory method)": [[37, "rl_equation_solver.utilities.utilities.ReplayMemory.sample"]], "vectorembedding (class in rl_equation_solver.utilities.utilities)": [[38, "rl_equation_solver.utilities.utilities.VectorEmbedding"]], "build_adjacency_matrix() (in module rl_equation_solver.utilities.utilities)": [[39, "rl_equation_solver.utilities.utilities.build_adjacency_matrix"]], "build_adjacency_matrix_custom() (in module rl_equation_solver.utilities.utilities)": [[40, "rl_equation_solver.utilities.utilities.build_adjacency_matrix_custom"]], "encode_onehot() (in module rl_equation_solver.utilities.utilities)": [[41, "rl_equation_solver.utilities.utilities.encode_onehot"]], "get_json_graph() (in module rl_equation_solver.utilities.utilities)": [[42, "rl_equation_solver.utilities.utilities.get_json_graph"]], "get_node_features() (in module rl_equation_solver.utilities.utilities)": [[43, "rl_equation_solver.utilities.utilities.get_node_features"]], "get_node_labels() (in module rl_equation_solver.utilities.utilities)": [[44, "rl_equation_solver.utilities.utilities.get_node_labels"]], "graph_walk() (in module rl_equation_solver.utilities.utilities)": [[45, "rl_equation_solver.utilities.utilities.graph_walk"]], "normalize() (in module rl_equation_solver.utilities.utilities)": [[46, "rl_equation_solver.utilities.utilities.normalize"]], "pad_array() (in module rl_equation_solver.utilities.utilities)": [[47, "rl_equation_solver.utilities.utilities.pad_array"]], "parse_node_features() (in module rl_equation_solver.utilities.utilities)": [[48, "rl_equation_solver.utilities.utilities.parse_node_features"]], "plot_state_as_graph() (in module rl_equation_solver.utilities.utilities)": [[49, "rl_equation_solver.utilities.utilities.plot_state_as_graph"]], "sparse_mx_to_torch_sparse_tensor() (in module rl_equation_solver.utilities.utilities)": [[50, "rl_equation_solver.utilities.utilities.sparse_mx_to_torch_sparse_tensor"]], "to_graph() (in module rl_equation_solver.utilities.utilities)": [[51, "rl_equation_solver.utilities.utilities.to_graph"]], "to_vec() (in module rl_equation_solver.utilities.utilities)": [[52, "rl_equation_solver.utilities.utilities.to_vec"]], "rl_equation_solver.version": [[53, "module-rl_equation_solver.version"]], "examples": [[56, "module-examples"]], "examples.run_linear_solver_dqn": [[57, "module-examples.run_linear_solver_dqn"]], "examples.run_linear_solver_gcn": [[58, "module-examples.run_linear_solver_gcn"]], "examples.run_quadratic_solver_dqn": [[59, "module-examples.run_quadratic_solver_dqn"]]}})